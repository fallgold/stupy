Terminals unused in grammar

   T_CHARACTER
   T_BAD_CHARACTER
   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"
   "tpl left delim with echo (T_START_TPL_WITH_ECHO)"


State 254 conflicts: 1 shift/reduce
State 842 conflicts: 2 shift/reduce


Grammar

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 $@1: /* empty */

    3 top_statement_list: top_statement_list $@1 top_statement
    4                   | /* empty */

    5 namespace_name: "identifier (T_STRING)"
    6               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

    7 top_statement: statement
    8              | function_declaration_statement
    9              | class_declaration_statement
   10              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   11              | "namespace (T_NAMESPACE)" namespace_name ';'

   12 $@2: /* empty */

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}'

   14 $@3: /* empty */

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}'
   16              | "use (T_USE)" use_declarations ';'
   17              | "use (T_USE)" "function (T_FUNCTION)" use_function_declarations ';'
   18              | "use (T_USE)" "const (T_CONST)" use_const_declarations ';'
   19              | constant_declaration ';'
   20              | tpl_statement

   21 use_declarations: use_declarations ',' use_declaration
   22                 | use_declaration

   23 use_declaration: namespace_name
   24                | namespace_name "as (T_AS)" "identifier (T_STRING)"
   25                | "\\ (T_NS_SEPARATOR)" namespace_name
   26                | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   27 use_function_declarations: use_function_declarations ',' use_function_declaration
   28                          | use_function_declaration

   29 use_function_declaration: namespace_name
   30                         | namespace_name "as (T_AS)" "identifier (T_STRING)"
   31                         | "\\ (T_NS_SEPARATOR)" namespace_name
   32                         | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   33 use_const_declarations: use_const_declarations ',' use_const_declaration
   34                       | use_const_declaration

   35 use_const_declaration: namespace_name
   36                      | namespace_name "as (T_AS)" "identifier (T_STRING)"
   37                      | "\\ (T_NS_SEPARATOR)" namespace_name
   38                      | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   39 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
   40                     | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

   41 $@4: /* empty */

   42 inner_statement_list: inner_statement_list $@4 inner_statement
   43                     | /* empty */

   44 inner_statement: statement
   45                | tpl_statement
   46                | function_declaration_statement
   47                | class_declaration_statement
   48                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

   49 statement: unticked_statement
   50          | "identifier (T_STRING)" ':'

   51 unticked_statement: '{' inner_statement_list '}'

   52 $@5: /* empty */

   53 $@6: /* empty */

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single

   55 $@7: /* empty */

   56 $@8: /* empty */

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

   58 $@9: /* empty */

   59 @10: /* empty */

   60 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement

   61 $@11: /* empty */

   62 $@12: /* empty */

   63 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

   64 $@13: /* empty */

   65 $@14: /* empty */

   66 $@15: /* empty */

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

   68 $@16: /* empty */

   69 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list
   70                   | "break (T_BREAK)" ';'
   71                   | "break (T_BREAK)" expr ';'
   72                   | "continue (T_CONTINUE)" ';'
   73                   | "continue (T_CONTINUE)" expr ';'
   74                   | "return (T_RETURN)" ';'
   75                   | "return (T_RETURN)" expr_without_variable ';'
   76                   | "return (T_RETURN)" variable ';'
   77                   | yield_expr ';'
   78                   | "global (T_GLOBAL)" global_var_list ';'
   79                   | "static (T_STATIC)" static_var_list ';'
   80                   | "echo (T_ECHO)" echo_expr_list ';'
   81                   | T_INLINE_HTML
   82                   | expr ';'
   83                   | "unset (T_UNSET)" '(' unset_variables ')' ';'

   84 $@17: /* empty */

   85 $@18: /* empty */

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

   87 $@19: /* empty */

   88 $@20: /* empty */

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

   90 $@21: /* empty */

   91 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement
   92                   | ';'

   93 $@22: /* empty */

   94 $@23: /* empty */

   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement
   96                   | "throw (T_THROW)" expr ';'
   97                   | "goto (T_GOTO)" "identifier (T_STRING)" ';'

   98 catch_statement: /* empty */

   99 $@24: /* empty */

  100 $@25: /* empty */

  101 $@26: /* empty */

  102 $@27: /* empty */

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

  104 finally_statement: /* empty */

  105 $@28: /* empty */

  106 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}'

  107 tpl_block: tpl_block tpl_statement
  108          | tpl_block T_INLINE_HTML
  109          | /* empty */

  110 tpl_modifier_list: r_variable
  111                  | r_variable ';'

  112 $@29: /* empty */

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '|' "identifier (T_STRING)" $@29 tpl_modifier_param_list

  114 $@30: /* empty */

  115 tpl_modifier_list: tpl_modifier_list '|' "identifier (T_STRING)" $@30 tpl_modifier_param_list

  116 tpl_modifier_param_list: /* empty */

  117 $@31: /* empty */

  118 tpl_modifier_param_list: tpl_modifier_param_list ':' $@31 expr

  119 tpl_inner_tpl_attr_name: "identifier (T_STRING)"
  120                        | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"

  121 tpl_inner_tpl_attr_anony: tpl_base_variable
  122                         | common_scalar
  123                         | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  124                         | '"' encaps_list '"'
  125                         | "array (T_ARRAY)" '(' array_pair_list ')'

  126 $@32: /* empty */

  127 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_name '=' $@32 expr

  128 $@33: /* empty */

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_name '=' $@33 expr
  130                        | tpl_inner_tpl_attr_anony
  131                        | tpl_inner_tpl_attr_list tpl_inner_tpl_attr_anony

  132 tpl_encaps_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)"
  133                | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  134                | encaps_list

  135 tpl_statement: "tpl left delim (T_START_TPL)" tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" expr_without_variable ';' "tpl right delim (T_END_TPL)"
  138              | "tpl left delim with script (T_START_TPL_WITH_SCRIPT)" inner_statement_list "tpl right delim (T_END_TPL)"
  139              | "{include (T_TPL_INCLUDE)" expr "tpl right delim (T_END_TPL)"
  140              | "{include (T_TPL_INCLUDE)" "attr file (T_ATTR_FILE)" '=' expr "tpl right delim (T_END_TPL)"
  141              | "{t (T_START_TPL_TRANSLATE)" tpl_encaps_list "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"

  143 @34: /* empty */

  144 $@35: /* empty */

  145 $@36: /* empty */

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

  147 @37: /* empty */

  148 $@38: /* empty */

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

  150 $@39: /* empty */

  151 $@40: /* empty */

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif

  153 $@41: /* empty */

  154 $@42: /* empty */

  155 $@43: /* empty */

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

  157 $@44: /* empty */

  158 $@45: /* empty */

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

  160 $@46: /* empty */

  161 $@47: /* empty */

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

  163 additional_catches: non_empty_additional_catches
  164                   | /* empty */

  165 non_empty_additional_catches: additional_catch
  166                             | non_empty_additional_catches additional_catch

  167 @48: /* empty */

  168 $@49: /* empty */

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}'

  170 unset_variables: unset_variable
  171                | unset_variables ',' unset_variable

  172 unset_variable: variable

  173 function_declaration_statement: unticked_function_declaration_statement

  174 class_declaration_statement: unticked_class_declaration_statement

  175 is_reference: /* empty */
  176             | '&'

  177 is_variadic: /* empty */
  178            | "... (T_ELLIPSIS)"

  179 $@50: /* empty */

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' inner_statement_list '}'

  181 $@51: /* empty */

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 implements_list '{' class_statement_list '}'

  183 $@52: /* empty */

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 interface_extends_list '{' class_statement_list '}'

  185 class_entry_type: "class (T_CLASS)"
  186                 | "abstract (T_ABSTRACT)" "class (T_CLASS)"
  187                 | "trait (T_TRAIT)"
  188                 | "final (T_FINAL)" "class (T_CLASS)"

  189 extends_from: /* empty */
  190             | "extends (T_EXTENDS)" fully_qualified_class_name

  191 interface_entry: "interface (T_INTERFACE)"

  192 interface_extends_list: /* empty */
  193                       | "extends (T_EXTENDS)" interface_list

  194 implements_list: /* empty */
  195                | "implements (T_IMPLEMENTS)" interface_list

  196 interface_list: fully_qualified_class_name
  197               | interface_list ',' fully_qualified_class_name

  198 foreach_optional_arg: /* empty */
  199                     | "=> (T_DOUBLE_ARROW)" foreach_variable

  200 foreach_variable: variable
  201                 | '&' variable

  202 for_statement: statement
  203              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  204 foreach_statement: statement
  205                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  206 declare_statement: statement
  207                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  208 declare_list: "identifier (T_STRING)" '=' static_scalar
  209             | declare_list ',' "identifier (T_STRING)" '=' static_scalar

  210 switch_case_list: '{' case_list '}'
  211                 | '{' ';' case_list '}'
  212                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  213                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  214 case_list: /* empty */

  215 $@53: /* empty */

  216 case_list: case_list "case (T_CASE)" expr case_separator $@53 inner_statement_list

  217 $@54: /* empty */

  218 case_list: case_list "default (T_DEFAULT)" case_separator $@54 inner_statement_list

  219 case_separator: ':'
  220               | ';'

  221 while_statement: statement
  222                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  223 elseif_list: /* empty */

  224 $@55: /* empty */

  225 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@55 statement

  226 tpl_elseif_list: /* empty */

  227 $@56: /* empty */

  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" $@56 tpl_block "tpl left delim (T_START_TPL)"

  229 $@57: /* empty */

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)"

  231 new_elseif_list: /* empty */

  232 $@58: /* empty */

  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@58 inner_statement_list

  234 else_single: /* empty */
  235            | "else (T_ELSE)" statement

  236 tpl_else_single: /* empty */
  237                | "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)"

  238 tpl_endif: '/' "if (T_IF)" "tpl right delim (T_END_TPL)"

  239 new_else_single: /* empty */
  240                | "else (T_ELSE)" ':' inner_statement_list

  241 tpl_loopelse: /* empty */
  242             | "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)"

  243 parameter_list: non_empty_parameter_list
  244               | /* empty */

  245 non_empty_parameter_list: parameter
  246                         | non_empty_parameter_list ',' parameter

  247 parameter: optional_class_type is_reference is_variadic "variable (T_VARIABLE)"
  248          | optional_class_type is_reference is_variadic "variable (T_VARIABLE)" '=' static_scalar

  249 optional_class_type: /* empty */
  250                    | "array (T_ARRAY)"
  251                    | "callable (T_CALLABLE)"
  252                    | fully_qualified_class_name

  253 function_call_parameter_list: '(' ')'
  254                             | '(' non_empty_function_call_parameter_list ')'
  255                             | '(' yield_expr ')'

  256 non_empty_function_call_parameter_list: function_call_parameter
  257                                       | non_empty_function_call_parameter_list ',' function_call_parameter

  258 function_call_parameter: expr_without_variable
  259                        | variable
  260                        | '&' w_variable
  261                        | "... (T_ELLIPSIS)" expr

  262 global_var_list: global_var_list ',' global_var
  263                | global_var

  264 global_var: "variable (T_VARIABLE)"
  265           | '$' r_variable
  266           | '$' '{' expr '}'

  267 static_var_list: static_var_list ',' "variable (T_VARIABLE)"
  268                | static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar
  269                | "variable (T_VARIABLE)"
  270                | "variable (T_VARIABLE)" '=' static_scalar

  271 class_statement_list: class_statement_list class_statement
  272                     | /* empty */

  273 $@59: /* empty */

  274 class_statement: variable_modifiers $@59 class_variable_declaration ';'
  275                | class_constant_declaration ';'
  276                | trait_use_statement

  277 $@60: /* empty */

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 '(' parameter_list ')' method_body

  279 trait_use_statement: "use (T_USE)" trait_list trait_adaptations

  280 trait_list: fully_qualified_class_name
  281           | trait_list ',' fully_qualified_class_name

  282 trait_adaptations: ';'
  283                  | '{' trait_adaptation_list '}'

  284 trait_adaptation_list: /* empty */
  285                      | non_empty_trait_adaptation_list

  286 non_empty_trait_adaptation_list: trait_adaptation_statement
  287                                | non_empty_trait_adaptation_list trait_adaptation_statement

  288 trait_adaptation_statement: trait_precedence ';'
  289                           | trait_alias ';'

  290 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list

  291 trait_reference_list: fully_qualified_class_name
  292                     | trait_reference_list ',' fully_qualified_class_name

  293 trait_method_reference: "identifier (T_STRING)"
  294                       | trait_method_reference_fully_qualified

  295 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  296 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  297            | trait_method_reference "as (T_AS)" member_modifier

  298 trait_modifiers: /* empty */
  299                | member_modifier

  300 method_body: ';'
  301            | '{' inner_statement_list '}'

  302 variable_modifiers: non_empty_member_modifiers
  303                   | "var (T_VAR)"

  304 method_modifiers: /* empty */
  305                 | non_empty_member_modifiers

  306 non_empty_member_modifiers: member_modifier
  307                           | non_empty_member_modifiers member_modifier

  308 member_modifier: "public (T_PUBLIC)"
  309                | "protected (T_PROTECTED)"
  310                | "private (T_PRIVATE)"
  311                | "static (T_STATIC)"
  312                | "abstract (T_ABSTRACT)"
  313                | "final (T_FINAL)"

  314 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)"
  315                           | class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar
  316                           | "variable (T_VARIABLE)"
  317                           | "variable (T_VARIABLE)" '=' static_scalar

  318 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
  319                           | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

  320 echo_expr_list: echo_expr_list ',' expr
  321               | expr

  322 for_expr: /* empty */
  323         | non_empty_for_expr

  324 $@61: /* empty */

  325 non_empty_for_expr: non_empty_for_expr ',' $@61 expr
  326                   | expr

  327 chaining_method_or_property: chaining_method_or_property variable_property
  328                            | variable_property

  329 chaining_dereference: chaining_dereference '[' dim_offset ']'
  330                     | '[' dim_offset ']'

  331 $@62: /* empty */

  332 chaining_instance_call: chaining_dereference $@62 chaining_method_or_property
  333                       | chaining_dereference
  334                       | chaining_method_or_property

  335 instance_call: /* empty */

  336 $@63: /* empty */

  337 instance_call: $@63 chaining_instance_call

  338 $@64: /* empty */

  339 new_expr: "new (T_NEW)" class_name_reference $@64 ctor_arguments

  340 $@65: /* empty */

  341 expr_without_variable: "list (T_LIST)" '(' $@65 assignment_list ')' '=' expr
  342                      | variable '=' expr
  343                      | variable '=' '&' variable

  344 $@66: /* empty */

  345 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  346                      | "clone (T_CLONE)" expr
  347                      | variable "+= (T_PLUS_EQUAL)" expr
  348                      | variable "-= (T_MINUS_EQUAL)" expr
  349                      | variable "*= (T_MUL_EQUAL)" expr
  350                      | variable "**= (T_POW_EQUAL)" expr
  351                      | variable "/= (T_DIV_EQUAL)" expr
  352                      | variable ".= (T_CONCAT_EQUAL)" expr
  353                      | variable "%= (T_MOD_EQUAL)" expr
  354                      | variable "&= (T_AND_EQUAL)" expr
  355                      | variable "|= (T_OR_EQUAL)" expr
  356                      | variable "^= (T_XOR_EQUAL)" expr
  357                      | variable "<<= (T_SL_EQUAL)" expr
  358                      | variable ">>= (T_SR_EQUAL)" expr
  359                      | rw_variable "++ (T_INC)"
  360                      | "++ (T_INC)" rw_variable
  361                      | rw_variable "-- (T_DEC)"
  362                      | "-- (T_DEC)" rw_variable

  363 $@67: /* empty */

  364 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@67 expr

  365 $@68: /* empty */

  366 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@68 expr

  367 $@69: /* empty */

  368 expr_without_variable: expr "or (T_LOGICAL_OR)" $@69 expr

  369 $@70: /* empty */

  370 expr_without_variable: expr "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr "xor (T_LOGICAL_XOR)" expr
  372                      | expr '&' expr
  373                      | expr '^' expr
  374                      | expr '.' expr
  375                      | expr '+' expr
  376                      | expr '-' expr
  377                      | expr '*' expr
  378                      | expr "** (T_POW)" expr
  379                      | expr '/' expr
  380                      | expr '%' expr
  381                      | expr "<< (T_SL)" expr
  382                      | expr ">> (T_SR)" expr
  383                      | '+' expr
  384                      | '-' expr
  385                      | '!' expr
  386                      | '~' expr
  387                      | expr "=== (T_IS_IDENTICAL)" expr
  388                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr "== (T_IS_EQUAL)" expr
  390                      | expr "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr '<' expr
  392                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr '>' expr
  394                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  396                      | parenthesis_expr
  397                      | new_expr

  398 @71: /* empty */

  399 expr_without_variable: '(' new_expr ')' @71 instance_call

  400 $@72: /* empty */

  401 $@73: /* empty */

  402 expr_without_variable: expr '?' $@72 expr ':' $@73 expr

  403 $@74: /* empty */

  404 expr_without_variable: expr '?' ':' $@74 expr
  405                      | internal_functions_in_yacc
  406                      | "(int) (T_INT_CAST)" expr
  407                      | "(double) (T_DOUBLE_CAST)" expr
  408                      | "(string) (T_STRING_CAST)" expr
  409                      | "(array) (T_ARRAY_CAST)" expr
  410                      | "(object) (T_OBJECT_CAST)" expr
  411                      | "(bool) (T_BOOL_CAST)" expr
  412                      | "(unset) (T_UNSET_CAST)" expr
  413                      | "exit (T_EXIT)" exit_expr

  414 $@75: /* empty */

  415 expr_without_variable: '@' $@75 expr
  416                      | scalar
  417                      | combined_scalar_offset
  418                      | combined_scalar
  419                      | '`' backticks_expr '`'
  420                      | "print (T_PRINT)" expr
  421                      | "yield (T_YIELD)"

  422 @76: /* empty */

  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  424 @77: /* empty */

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  426 yield_expr: "yield (T_YIELD)" expr_without_variable
  427           | "yield (T_YIELD)" variable
  428           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  429           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable

  430 combined_scalar_offset: combined_scalar '[' dim_offset ']'
  431                       | combined_scalar_offset '[' dim_offset ']'
  432                       | "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']'
  433                       | general_constant '[' dim_offset ']'

  434 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')'
  435                | '[' array_pair_list ']'

  436 function: "function (T_FUNCTION)"

  437 lexical_vars: /* empty */
  438             | "use (T_USE)" '(' lexical_var_list ')'

  439 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)"
  440                 | lexical_var_list ',' '&' "variable (T_VARIABLE)"
  441                 | "variable (T_VARIABLE)"
  442                 | '&' "variable (T_VARIABLE)"

  443 @78: /* empty */

  444 function_call: namespace_name @78 function_call_parameter_list

  445 @79: /* empty */

  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @79 function_call_parameter_list

  447 @80: /* empty */

  448 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @80 function_call_parameter_list

  449 @81: /* empty */

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @81 function_call_parameter_list

  451 $@82: /* empty */

  452 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@82 function_call_parameter_list

  453 $@83: /* empty */

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@83 function_call_parameter_list

  455 $@84: /* empty */

  456 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@84 function_call_parameter_list

  457 $@85: /* empty */

  458 function_call: variable_without_objects $@85 function_call_parameter_list

  459 class_name: "static (T_STATIC)"
  460           | namespace_name
  461           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  462           | "\\ (T_NS_SEPARATOR)" namespace_name

  463 fully_qualified_class_name: namespace_name
  464                           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  465                           | "\\ (T_NS_SEPARATOR)" namespace_name

  466 class_name_reference: class_name
  467                     | dynamic_class_name_reference

  468 $@86: /* empty */

  469 $@87: /* empty */

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@86 object_property $@87 dynamic_class_name_variable_properties
  471                             | base_variable

  472 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
  473                                       | /* empty */

  474 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property

  475 exit_expr: /* empty */
  476          | '(' ')'
  477          | parenthesis_expr

  478 backticks_expr: /* empty */
  479               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  480               | encaps_list

  481 ctor_arguments: /* empty */
  482               | function_call_parameter_list

  483 common_scalar: "integer number (T_LNUMBER)"
  484              | "floating-point number (T_DNUMBER)"
  485              | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"
  486              | "__LINE__ (T_LINE)"
  487              | "__FILE__ (T_FILE)"
  488              | "__DIR__ (T_DIR)"
  489              | "__TRAIT__ (T_TRAIT_C)"
  490              | "__METHOD__ (T_METHOD_C)"
  491              | "__FUNCTION__ (T_FUNC_C)"
  492              | "__NAMESPACE__ (T_NS_C)"
  493              | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  494              | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"

  495 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  496 static_scalar: static_scalar_value

  497 static_scalar_value: common_scalar
  498                    | static_class_name_scalar
  499                    | namespace_name
  500                    | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  501                    | "\\ (T_NS_SEPARATOR)" namespace_name
  502                    | "array (T_ARRAY)" '(' static_array_pair_list ')'
  503                    | '[' static_array_pair_list ']'
  504                    | static_class_constant
  505                    | "__CLASS__ (T_CLASS_C)"
  506                    | static_operation

  507 static_operation: static_scalar_value '[' static_scalar_value ']'
  508                 | static_scalar_value '+' static_scalar_value
  509                 | static_scalar_value '-' static_scalar_value
  510                 | static_scalar_value '*' static_scalar_value
  511                 | static_scalar_value "** (T_POW)" static_scalar_value
  512                 | static_scalar_value '/' static_scalar_value
  513                 | static_scalar_value '%' static_scalar_value
  514                 | '!' static_scalar_value
  515                 | '~' static_scalar_value
  516                 | static_scalar_value '|' static_scalar_value
  517                 | static_scalar_value '&' static_scalar_value
  518                 | static_scalar_value '^' static_scalar_value
  519                 | static_scalar_value "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value '.' static_scalar_value
  522                 | static_scalar_value "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value '<' static_scalar_value
  532                 | static_scalar_value '>' static_scalar_value
  533                 | static_scalar_value "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value '?' ':' static_scalar_value
  536                 | static_scalar_value '?' static_scalar_value ':' static_scalar_value
  537                 | '+' static_scalar_value
  538                 | '-' static_scalar_value
  539                 | '(' static_scalar_value ')'

  540 general_constant: class_constant
  541                 | namespace_name
  542                 | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  543                 | "\\ (T_NS_SEPARATOR)" namespace_name

  544 scalar: "variable name (T_STRING_VARNAME)"
  545       | general_constant
  546       | class_name_scalar
  547       | common_scalar
  548       | '"' encaps_list '"'
  549       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  550       | "__CLASS__ (T_CLASS_C)"

  551 static_array_pair_list: /* empty */
  552                       | non_empty_static_array_pair_list possible_comma

  553 possible_comma: /* empty */
  554               | ','

  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value
  556                                 | non_empty_static_array_pair_list ',' static_scalar_value
  557                                 | static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value
  558                                 | static_scalar_value

  559 expr: r_variable
  560     | expr_without_variable

  561 parenthesis_expr: '(' expr ')'
  562                 | '(' yield_expr ')'

  563 r_variable: variable

  564 w_variable: variable

  565 rw_variable: variable

  566 $@88: /* empty */

  567 $@89: /* empty */

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 object_property $@89 method_or_not variable_properties
  569         | base_variable_with_function_calls

  570 variable_properties: variable_properties variable_property
  571                    | /* empty */

  572 $@90: /* empty */

  573 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@90 method_or_not

  574 array_method_dereference: array_method_dereference '[' dim_offset ']'
  575                         | method '[' dim_offset ']'

  576 @91: /* empty */

  577 method: @91 function_call_parameter_list

  578 method_or_not: method
  579              | array_method_dereference
  580              | /* empty */

  581 variable_without_objects: reference_variable
  582                         | simple_indirect_reference reference_variable

  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  584              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

  585 variable_class_name: reference_variable

  586 array_function_dereference: array_function_dereference '[' dim_offset ']'

  587 $@92: /* empty */

  588 array_function_dereference: function_call $@92 '[' dim_offset ']'

  589 base_variable_with_function_calls: base_variable
  590                                  | array_function_dereference
  591                                  | function_call

  592 base_variable: reference_variable
  593              | simple_indirect_reference reference_variable
  594              | static_member

  595 tpl_base_variable: reference_variable
  596                  | simple_indirect_reference reference_variable

  597 reference_variable: reference_variable '[' dim_offset ']'
  598                   | reference_variable '{' expr '}'
  599                   | compound_variable

  600 compound_variable: "variable (T_VARIABLE)"
  601                  | '$' '{' expr '}'

  602 dim_offset: /* empty */
  603           | expr

  604 object_property: object_dim_list

  605 $@93: /* empty */

  606 object_property: variable_without_objects $@93

  607 object_dim_list: object_dim_list '[' dim_offset ']'
  608                | object_dim_list '{' expr '}'
  609                | variable_name

  610 variable_name: "identifier (T_STRING)"
  611              | '{' expr '}'

  612 simple_indirect_reference: '$'
  613                          | simple_indirect_reference '$'

  614 assignment_list: assignment_list ',' assignment_list_element
  615                | assignment_list_element

  616 assignment_list_element: variable

  617 $@94: /* empty */

  618 assignment_list_element: "list (T_LIST)" '(' $@94 assignment_list ')'
  619                        | /* empty */

  620 array_pair_list: /* empty */
  621                | non_empty_array_pair_list possible_comma

  622 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr
  623                          | non_empty_array_pair_list ',' expr
  624                          | expr "=> (T_DOUBLE_ARROW)" expr
  625                          | expr
  626                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  627                          | non_empty_array_pair_list ',' '&' w_variable
  628                          | expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  629                          | '&' w_variable

  630 encaps_list: encaps_list encaps_var
  631            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  632            | encaps_var
  633            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var
  634            | tpl_encaps_var
  635            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" tpl_encaps_var
  636            | encaps_list tpl_encaps_var
  637            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

  638 encaps_var: "variable (T_VARIABLE)"

  639 $@95: /* empty */

  640 encaps_var: "variable (T_VARIABLE)" '[' $@95 encaps_var_offset ']'
  641           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  642           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  643           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  644           | "{$ (T_CURLY_OPEN)" variable '}'
  645           | '{' static_member '}'

  646 tpl_encaps_var: '{' class_constant '}'

  647 encaps_var_offset: "identifier (T_STRING)"
  648                  | "number (T_NUM_STRING)"
  649                  | "variable (T_VARIABLE)"

  650 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  651                           | "empty (T_EMPTY)" '(' variable ')'
  652                           | "empty (T_EMPTY)" '(' expr_without_variable ')'
  653                           | "include (T_INCLUDE)" expr
  654                           | "include_once (T_INCLUDE_ONCE)" expr
  655                           | "eval (T_EVAL)" '(' expr ')'
  656                           | "require (T_REQUIRE)" expr
  657                           | "require_once (T_REQUIRE_ONCE)" expr

  658 isset_variables: isset_variable

  659 $@96: /* empty */

  660 isset_variables: isset_variables ',' $@96 isset_variable

  661 isset_variable: variable
  662               | expr_without_variable

  663 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  664               | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  665 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

  666 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"


Terminals, with rules where they appear

"end of file" (0) 0
'!' (33) 385 514
'"' (34) 124 548
'$' (36) 265 266 601 612 613
'%' (37) 380 513
'&' (38) 176 201 260 343 345 372 440 442 517 626 627 628 629
'(' (40) 10 48 67 83 86 89 91 103 125 146 156 159 169 180 253 254 255
    278 341 399 423 425 434 438 476 502 539 561 562 618 650 651 652
    655
')' (41) 10 48 67 83 86 89 91 103 125 146 156 159 169 180 253 254 255
    278 341 399 423 425 434 438 476 502 539 561 562 618 650 651 652
    655
'*' (42) 377 510
'+' (43) 375 383 508 537
',' (44) 21 27 33 39 171 197 209 246 257 262 267 268 281 292 314 315
    318 320 325 439 440 554 555 556 614 622 623 626 627 660
'-' (45) 376 384 509 538
'.' (46) 374 521
'/' (47) 146 149 156 159 162 238 379 512
':' (58) 50 57 118 203 205 207 212 213 219 222 233 240 402 404 535
    536
';' (59) 10 11 16 17 18 19 48 57 63 67 70 71 72 73 74 75 76 77 78 79
    80 82 83 92 96 97 111 137 156 203 205 207 211 212 213 220 222 274
    275 282 288 289 300
'<' (60) 391 531
'=' (61) 39 40 127 129 140 208 209 248 268 270 315 317 318 319 341
    342 343 345
'>' (62) 393 532
'?' (63) 402 404 535 536
'@' (64) 415
'[' (91) 329 330 430 431 432 433 435 503 507 574 575 586 588 597 607
    640 643
']' (93) 329 330 430 431 432 433 435 503 507 574 575 586 588 597 607
    640 643
'^' (94) 373 518
'`' (96) 419
'{' (123) 13 15 51 95 103 106 169 180 182 184 210 211 266 283 301 423
    425 598 601 608 611 645 646
'|' (124) 113 115 516
'}' (125) 13 15 51 95 103 106 169 180 182 184 210 211 266 283 301 423
    425 598 601 608 611 642 643 644 645 646
'~' (126) 386 515
error (256)
"require_once (T_REQUIRE_ONCE)" (258) 657
"require (T_REQUIRE)" (259) 656
"eval (T_EVAL)" (260) 655
"include_once (T_INCLUDE_ONCE)" (261) 654
"include (T_INCLUDE)" (262) 653
"or (T_LOGICAL_OR)" (263) 368 524
"xor (T_LOGICAL_XOR)" (264) 371 522
"and (T_LOGICAL_AND)" (265) 370 523
"print (T_PRINT)" (266) 420
"yield (T_YIELD)" (267) 421 426 427 428 429
"**= (T_POW_EQUAL)" (268) 350
">>= (T_SR_EQUAL)" (269) 358
"<<= (T_SL_EQUAL)" (270) 357
"^= (T_XOR_EQUAL)" (271) 356
"|= (T_OR_EQUAL)" (272) 355
"&= (T_AND_EQUAL)" (273) 354
"%= (T_MOD_EQUAL)" (274) 353
".= (T_CONCAT_EQUAL)" (275) 352
"/= (T_DIV_EQUAL)" (276) 351
"*= (T_MUL_EQUAL)" (277) 349
"-= (T_MINUS_EQUAL)" (278) 348
"+= (T_PLUS_EQUAL)" (279) 347
"|| (T_BOOLEAN_OR)" (280) 364 526
"&& (T_BOOLEAN_AND)" (281) 366 525
"!== (T_IS_NOT_IDENTICAL)" (282) 388 528
"=== (T_IS_IDENTICAL)" (283) 387 527
"!= (T_IS_NOT_EQUAL)" (284) 390 530
"== (T_IS_EQUAL)" (285) 389 529
">= (T_IS_GREATER_OR_EQUAL)" (286) 394 534
"<= (T_IS_SMALLER_OR_EQUAL)" (287) 392 533
">> (T_SR)" (288) 382 520
"<< (T_SL)" (289) 381 519
"instanceof (T_INSTANCEOF)" (290) 395
"(unset) (T_UNSET_CAST)" (291) 412
"(bool) (T_BOOL_CAST)" (292) 411
"(object) (T_OBJECT_CAST)" (293) 410
"(array) (T_ARRAY_CAST)" (294) 409
"(string) (T_STRING_CAST)" (295) 408
"(double) (T_DOUBLE_CAST)" (296) 407
"(int) (T_INT_CAST)" (297) 406
"-- (T_DEC)" (298) 361 362
"++ (T_INC)" (299) 359 360
"** (T_POW)" (300) 378 511
"clone (T_CLONE)" (301) 346
"new (T_NEW)" (302) 339 345
"exit (T_EXIT)" (303) 413
"if (T_IF)" (304) 54 57 152 230 238
"elseif (T_ELSEIF)" (305) 225 228 233
"else (T_ELSE)" (306) 230 235 237 240 242
"endif (T_ENDIF)" (307) 57
"integer number (T_LNUMBER)" (308) 483
"floating-point number (T_DNUMBER)" (309) 484
"identifier (T_STRING)" (310) 5 6 24 26 30 32 36 38 39 40 50 97 113
    115 119 142 180 182 184 208 209 278 293 295 296 318 319 495 610
    641 647 663 664
"variable name (T_STRING_VARNAME)" (311) 544 643
"variable (T_VARIABLE)" (312) 103 169 247 248 264 267 268 269 270 314
    315 316 317 439 440 441 442 600 638 640 641 649
"number (T_NUM_STRING)" (313) 648
T_INLINE_HTML (314) 81 108
T_CHARACTER (315)
T_BAD_CHARACTER (316)
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (317) 123
    133 479 493 631 633 635 637
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (318) 113 120 132 432
    485
"echo (T_ECHO)" (319) 80
"do (T_DO)" (320) 63
"while (T_WHILE)" (321) 60 63
"endwhile (T_ENDWHILE)" (322) 222
"for (T_FOR)" (323) 67 156 159 162
"endfor (T_ENDFOR)" (324) 203
"foreach (T_FOREACH)" (325) 86 89 146 149
"endforeach (T_ENDFOREACH)" (326) 205
"declare (T_DECLARE)" (327) 91
"enddeclare (T_ENDDECLARE)" (328) 207
"as (T_AS)" (329) 24 26 30 32 36 38 86 89 146 149 296 297
"switch (T_SWITCH)" (330) 69
"endswitch (T_ENDSWITCH)" (331) 212 213
"case (T_CASE)" (332) 216
"default (T_DEFAULT)" (333) 218
"break (T_BREAK)" (334) 70 71
"continue (T_CONTINUE)" (335) 72 73
"goto (T_GOTO)" (336) 97
"function (T_FUNCTION)" (337) 17 436
"const (T_CONST)" (338) 18 40 319
"return (T_RETURN)" (339) 74 75 76
"try (T_TRY)" (340) 95
"catch (T_CATCH)" (341) 103 169
"finally (T_FINALLY)" (342) 106
"throw (T_THROW)" (343) 96
"use (T_USE)" (344) 16 17 18 279 438
"insteadof (T_INSTEADOF)" (345) 290
"global (T_GLOBAL)" (346) 78
"public (T_PUBLIC)" (347) 308
"protected (T_PROTECTED)" (348) 309
"private (T_PRIVATE)" (349) 310
"final (T_FINAL)" (350) 188 313
"abstract (T_ABSTRACT)" (351) 186 312
"static (T_STATIC)" (352) 79 311 425 459
"var (T_VAR)" (353) 303
"unset (T_UNSET)" (354) 83
"isset (T_ISSET)" (355) 650
"empty (T_EMPTY)" (356) 651 652
"__halt_compiler (T_HALT_COMPILER)" (357) 10 48
"class (T_CLASS)" (358) 185 186 188 665 666
"trait (T_TRAIT)" (359) 187
"interface (T_INTERFACE)" (360) 191
"extends (T_EXTENDS)" (361) 190 193
"implements (T_IMPLEMENTS)" (362) 195
"-> (T_OBJECT_OPERATOR)" (363) 470 474 568 573 641
"=> (T_DOUBLE_ARROW)" (364) 199 428 429 555 557 622 624 626 628
"list (T_LIST)" (365) 341 618
"array (T_ARRAY)" (366) 125 250 434 502
"callable (T_CALLABLE)" (367) 251
"__CLASS__ (T_CLASS_C)" (368) 505 550
"__TRAIT__ (T_TRAIT_C)" (369) 489
"__METHOD__ (T_METHOD_C)" (370) 490
"__FUNCTION__ (T_FUNC_C)" (371) 491
"__LINE__ (T_LINE)" (372) 486
"__FILE__ (T_FILE)" (373) 487
"comment (T_COMMENT)" (374)
"doc comment (T_DOC_COMMENT)" (375)
"open tag (T_OPEN_TAG)" (376)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (377)
"close tag (T_CLOSE_TAG)" (378)
"whitespace (T_WHITESPACE)" (379)
"heredoc start (T_START_HEREDOC)" (380) 493 494 549
"heredoc end (T_END_HEREDOC)" (381) 493 494 549
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (382) 642 643
"{$ (T_CURLY_OPEN)" (383) 644
":: (T_PAAMAYIM_NEKUDOTAYIM)" (384) 295 450 452 454 456 495 583 584
    663 664 665 666
"namespace (T_NAMESPACE)" (385) 11 13 15 446 461 464 500 542
"__NAMESPACE__ (T_NS_C)" (386) 492
"__DIR__ (T_DIR)" (387) 488
"\\ (T_NS_SEPARATOR)" (388) 6 25 26 31 32 37 38 446 448 461 462 464
    465 500 501 542 543
"... (T_ELLIPSIS)" (389) 178 261
"tpl left delim (T_START_TPL)" (390) 135 136 137 142 146 149 152 156
    159 162 228 230 237 242
"tpl left delim with echo (T_START_TPL_WITH_ECHO)" (391)
"tpl left delim with script (T_START_TPL_WITH_SCRIPT)" (392) 138
"tpl right delim (T_END_TPL)" (393) 135 136 137 138 139 140 141 142
    146 149 152 156 159 162 228 230 237 238 242
"attr file (T_ATTR_FILE)" (394) 140
"in (T_IN)" (395) 159 162
"{t (T_START_TPL_TRANSLATE)" (396) 141
"{include (T_TPL_INCLUDE)" (397) 139 140


Nonterminals, with rules where they appear

$accept (171)
    on left: 0
start (172)
    on left: 1, on right: 0
top_statement_list (173)
    on left: 3 4, on right: 1 3 13 15
$@1 (174)
    on left: 2, on right: 3
namespace_name (175)
    on left: 5 6, on right: 6 11 13 23 24 25 26 29 30 31 32 35 36 37
    38 444 446 448 460 461 462 463 464 465 499 500 501 541 542 543
top_statement (176)
    on left: 7 8 9 10 11 13 15 16 17 18 19 20, on right: 3
$@2 (177)
    on left: 12, on right: 13
$@3 (178)
    on left: 14, on right: 15
use_declarations (179)
    on left: 21 22, on right: 16 21
use_declaration (180)
    on left: 23 24 25 26, on right: 21 22
use_function_declarations (181)
    on left: 27 28, on right: 17 27
use_function_declaration (182)
    on left: 29 30 31 32, on right: 27 28
use_const_declarations (183)
    on left: 33 34, on right: 18 33
use_const_declaration (184)
    on left: 35 36 37 38, on right: 33 34
constant_declaration (185)
    on left: 39 40, on right: 19 39
inner_statement_list (186)
    on left: 42 43, on right: 42 51 57 95 103 106 138 169 180 203 205
    207 216 218 222 233 240 301 423 425
$@4 (187)
    on left: 41, on right: 42
inner_statement (188)
    on left: 44 45 46 47 48, on right: 42
statement (189)
    on left: 49 50, on right: 7 44 54 63 202 204 206 221 225 235
unticked_statement (190)
    on left: 51 54 57 60 63 67 69 70 71 72 73 74 75 76 77 78 79 80
    81 82 83 86 89 91 92 95 96 97, on right: 49
$@5 (191)
    on left: 52, on right: 54
$@6 (192)
    on left: 53, on right: 54
$@7 (193)
    on left: 55, on right: 57
$@8 (194)
    on left: 56, on right: 57
$@9 (195)
    on left: 58, on right: 60
@10 (196)
    on left: 59, on right: 60
$@11 (197)
    on left: 61, on right: 63
$@12 (198)
    on left: 62, on right: 63
$@13 (199)
    on left: 64, on right: 67
$@14 (200)
    on left: 65, on right: 67
$@15 (201)
    on left: 66, on right: 67
$@16 (202)
    on left: 68, on right: 69
$@17 (203)
    on left: 84, on right: 86
$@18 (204)
    on left: 85, on right: 86
$@19 (205)
    on left: 87, on right: 89
$@20 (206)
    on left: 88, on right: 89
$@21 (207)
    on left: 90, on right: 91
$@22 (208)
    on left: 93, on right: 95
$@23 (209)
    on left: 94, on right: 95
catch_statement (210)
    on left: 98 103, on right: 95
$@24 (211)
    on left: 99, on right: 103
$@25 (212)
    on left: 100, on right: 103
$@26 (213)
    on left: 101, on right: 103
$@27 (214)
    on left: 102, on right: 103
finally_statement (215)
    on left: 104 106, on right: 95
$@28 (216)
    on left: 105, on right: 106
tpl_block (217)
    on left: 107 108 109, on right: 107 108 146 149 152 156 159 162
    228 230 237 242
tpl_modifier_list (218)
    on left: 110 111 113 115, on right: 115 135
$@29 (219)
    on left: 112, on right: 113
$@30 (220)
    on left: 114, on right: 115
tpl_modifier_param_list (221)
    on left: 116 118, on right: 113 115 118
$@31 (222)
    on left: 117, on right: 118
tpl_inner_tpl_attr_name (223)
    on left: 119 120, on right: 127 129
tpl_inner_tpl_attr_anony (224)
    on left: 121 122 123 124 125, on right: 130 131
tpl_inner_tpl_attr_list (225)
    on left: 127 129 130 131, on right: 129 131 142
$@32 (226)
    on left: 126, on right: 127
$@33 (227)
    on left: 128, on right: 129
tpl_encaps_list (228)
    on left: 132 133 134, on right: 141
tpl_statement (229)
    on left: 135 136 137 138 139 140 141 142 146 149 152 156 159 162,
    on right: 20 45 107
@34 (230)
    on left: 143, on right: 146
$@35 (231)
    on left: 144, on right: 146
$@36 (232)
    on left: 145, on right: 146
@37 (233)
    on left: 147, on right: 149
$@38 (234)
    on left: 148, on right: 149
$@39 (235)
    on left: 150, on right: 152
$@40 (236)
    on left: 151, on right: 152
$@41 (237)
    on left: 153, on right: 156
$@42 (238)
    on left: 154, on right: 156
$@43 (239)
    on left: 155, on right: 156
$@44 (240)
    on left: 157, on right: 159
$@45 (241)
    on left: 158, on right: 159
$@46 (242)
    on left: 160, on right: 162
$@47 (243)
    on left: 161, on right: 162
additional_catches (244)
    on left: 163 164, on right: 103
non_empty_additional_catches (245)
    on left: 165 166, on right: 163 166
additional_catch (246)
    on left: 169, on right: 165 166
@48 (247)
    on left: 167, on right: 169
$@49 (248)
    on left: 168, on right: 169
unset_variables (249)
    on left: 170 171, on right: 83 171
unset_variable (250)
    on left: 172, on right: 170 171
function_declaration_statement (251)
    on left: 173, on right: 8 46
class_declaration_statement (252)
    on left: 174, on right: 9 47
is_reference (253)
    on left: 175 176, on right: 180 247 248 278 423 425
is_variadic (254)
    on left: 177 178, on right: 247 248
unticked_function_declaration_statement (255)
    on left: 180, on right: 173
$@50 (256)
    on left: 179, on right: 180
unticked_class_declaration_statement (257)
    on left: 182 184, on right: 174
$@51 (258)
    on left: 181, on right: 182
$@52 (259)
    on left: 183, on right: 184
class_entry_type (260)
    on left: 185 186 187 188, on right: 182
extends_from (261)
    on left: 189 190, on right: 182
interface_entry (262)
    on left: 191, on right: 184
interface_extends_list (263)
    on left: 192 193, on right: 184
implements_list (264)
    on left: 194 195, on right: 182
interface_list (265)
    on left: 196 197, on right: 193 195 197
foreach_optional_arg (266)
    on left: 198 199, on right: 86 89 146 149 159 162
foreach_variable (267)
    on left: 200 201, on right: 86 89 146 149 159 162 199
for_statement (268)
    on left: 202 203, on right: 67
foreach_statement (269)
    on left: 204 205, on right: 86 89
declare_statement (270)
    on left: 206 207, on right: 91
declare_list (271)
    on left: 208 209, on right: 91 209
switch_case_list (272)
    on left: 210 211 212 213, on right: 69
case_list (273)
    on left: 214 216 218, on right: 210 211 212 213 216 218
$@53 (274)
    on left: 215, on right: 216
$@54 (275)
    on left: 217, on right: 218
case_separator (276)
    on left: 219 220, on right: 216 218
while_statement (277)
    on left: 221 222, on right: 60
elseif_list (278)
    on left: 223 225, on right: 54 225
$@55 (279)
    on left: 224, on right: 225
tpl_elseif_list (280)
    on left: 226 228 230, on right: 152 228 230
$@56 (281)
    on left: 227, on right: 228
$@57 (282)
    on left: 229, on right: 230
new_elseif_list (283)
    on left: 231 233, on right: 57 233
$@58 (284)
    on left: 232, on right: 233
else_single (285)
    on left: 234 235, on right: 54
tpl_else_single (286)
    on left: 236 237, on right: 152
tpl_endif (287)
    on left: 238, on right: 152
new_else_single (288)
    on left: 239 240, on right: 57
tpl_loopelse (289)
    on left: 241 242, on right: 146 149 159 162
parameter_list (290)
    on left: 243 244, on right: 180 278 423 425
non_empty_parameter_list (291)
    on left: 245 246, on right: 243 246
parameter (292)
    on left: 247 248, on right: 245 246
optional_class_type (293)
    on left: 249 250 251 252, on right: 247 248
function_call_parameter_list (294)
    on left: 253 254 255, on right: 444 446 448 450 452 454 456 458
    482 577
non_empty_function_call_parameter_list (295)
    on left: 256 257, on right: 254 257
function_call_parameter (296)
    on left: 258 259 260 261, on right: 256 257
global_var_list (297)
    on left: 262 263, on right: 78 262
global_var (298)
    on left: 264 265 266, on right: 262 263
static_var_list (299)
    on left: 267 268 269 270, on right: 79 267 268
class_statement_list (300)
    on left: 271 272, on right: 182 184 271
class_statement (301)
    on left: 274 275 276 278, on right: 271
$@59 (302)
    on left: 273, on right: 274
$@60 (303)
    on left: 277, on right: 278
trait_use_statement (304)
    on left: 279, on right: 276
trait_list (305)
    on left: 280 281, on right: 279 281
trait_adaptations (306)
    on left: 282 283, on right: 279
trait_adaptation_list (307)
    on left: 284 285, on right: 283
non_empty_trait_adaptation_list (308)
    on left: 286 287, on right: 285 287
trait_adaptation_statement (309)
    on left: 288 289, on right: 286 287
trait_precedence (310)
    on left: 290, on right: 288
trait_reference_list (311)
    on left: 291 292, on right: 290 292
trait_method_reference (312)
    on left: 293 294, on right: 296 297
trait_method_reference_fully_qualified (313)
    on left: 295, on right: 290 294
trait_alias (314)
    on left: 296 297, on right: 289
trait_modifiers (315)
    on left: 298 299, on right: 296
method_body (316)
    on left: 300 301, on right: 278
variable_modifiers (317)
    on left: 302 303, on right: 274
method_modifiers (318)
    on left: 304 305, on right: 278
non_empty_member_modifiers (319)
    on left: 306 307, on right: 302 305 307
member_modifier (320)
    on left: 308 309 310 311 312 313, on right: 297 299 306 307
class_variable_declaration (321)
    on left: 314 315 316 317, on right: 274 314 315
class_constant_declaration (322)
    on left: 318 319, on right: 275 318
echo_expr_list (323)
    on left: 320 321, on right: 80 320
for_expr (324)
    on left: 322 323, on right: 67 156
non_empty_for_expr (325)
    on left: 325 326, on right: 323 325
$@61 (326)
    on left: 324, on right: 325
chaining_method_or_property (327)
    on left: 327 328, on right: 327 332 334
chaining_dereference (328)
    on left: 329 330, on right: 329 332 333
chaining_instance_call (329)
    on left: 332 333 334, on right: 337
$@62 (330)
    on left: 331, on right: 332
instance_call (331)
    on left: 335 337, on right: 399
$@63 (332)
    on left: 336, on right: 337
new_expr (333)
    on left: 339, on right: 397 399
$@64 (334)
    on left: 338, on right: 339
expr_without_variable (335)
    on left: 341 342 343 345 346 347 348 349 350 351 352 353 354 355
    356 357 358 359 360 361 362 364 366 368 370 371 372 373 374 375
    376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391
    392 393 394 395 396 397 399 402 404 405 406 407 408 409 410 411
    412 413 415 416 417 418 419 420 421 423 425, on right: 75 89 136
    137 258 426 428 560 652 662
$@65 (336)
    on left: 340, on right: 341
$@66 (337)
    on left: 344, on right: 345
$@67 (338)
    on left: 363, on right: 364
$@68 (339)
    on left: 365, on right: 366
$@69 (340)
    on left: 367, on right: 368
$@70 (341)
    on left: 369, on right: 370
@71 (342)
    on left: 398, on right: 399
$@72 (343)
    on left: 400, on right: 402
$@73 (344)
    on left: 401, on right: 402
$@74 (345)
    on left: 403, on right: 404
$@75 (346)
    on left: 414, on right: 415
@76 (347)
    on left: 422, on right: 423
@77 (348)
    on left: 424, on right: 425
yield_expr (349)
    on left: 426 427 428 429, on right: 77 255 562
combined_scalar_offset (350)
    on left: 430 431 432 433, on right: 417 431
combined_scalar (351)
    on left: 434 435, on right: 418 430
function (352)
    on left: 436, on right: 180 278 423 425
lexical_vars (353)
    on left: 437 438, on right: 423 425
lexical_var_list (354)
    on left: 439 440 441 442, on right: 438 439 440
function_call (355)
    on left: 444 446 448 450 452 454 456 458, on right: 588 591
@78 (356)
    on left: 443, on right: 444
@79 (357)
    on left: 445, on right: 446
@80 (358)
    on left: 447, on right: 448
@81 (359)
    on left: 449, on right: 450
$@82 (360)
    on left: 451, on right: 452
$@83 (361)
    on left: 453, on right: 454
$@84 (362)
    on left: 455, on right: 456
$@85 (363)
    on left: 457, on right: 458
class_name (364)
    on left: 459 460 461 462, on right: 450 452 466 495 583 663 665
    666
fully_qualified_class_name (365)
    on left: 463 464 465, on right: 103 169 190 196 197 252 280 281
    291 292 295
class_name_reference (366)
    on left: 466 467, on right: 339 345 395
dynamic_class_name_reference (367)
    on left: 470 471, on right: 467
$@86 (368)
    on left: 468, on right: 470
$@87 (369)
    on left: 469, on right: 470
dynamic_class_name_variable_properties (370)
    on left: 472 473, on right: 470 472
dynamic_class_name_variable_property (371)
    on left: 474, on right: 472
exit_expr (372)
    on left: 475 476 477, on right: 413
backticks_expr (373)
    on left: 478 479 480, on right: 419
ctor_arguments (374)
    on left: 481 482, on right: 339 345
common_scalar (375)
    on left: 483 484 485 486 487 488 489 490 491 492 493 494, on right:
    122 497 547
static_class_constant (376)
    on left: 495, on right: 504
static_scalar (377)
    on left: 496, on right: 39 40 208 209 248 268 270 315 317 318 319
static_scalar_value (378)
    on left: 497 498 499 500 501 502 503 504 505 506, on right: 496
    507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522
    523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538
    539 555 556 557 558
static_operation (379)
    on left: 507 508 509 510 511 512 513 514 515 516 517 518 519 520
    521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536
    537 538 539, on right: 506
general_constant (380)
    on left: 540 541 542 543, on right: 433 545
scalar (381)
    on left: 544 545 546 547 548 549 550, on right: 416
static_array_pair_list (382)
    on left: 551 552, on right: 502 503
possible_comma (383)
    on left: 553 554, on right: 552 621
non_empty_static_array_pair_list (384)
    on left: 555 556 557 558, on right: 552 555 556
expr (385)
    on left: 559 560, on right: 71 73 82 96 118 127 129 139 140 146
    149 152 159 162 216 228 230 261 266 320 321 325 326 341 342 346
    347 348 349 350 351 352 353 354 355 356 357 358 364 366 368 370
    371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386
    387 388 389 390 391 392 393 394 395 402 404 406 407 408 409 410
    411 412 415 420 428 429 561 598 601 603 608 611 622 623 624 625
    626 628 642 643 653 654 655 656 657
parenthesis_expr (386)
    on left: 561 562, on right: 54 57 60 63 69 225 233 396 477
r_variable (387)
    on left: 563, on right: 110 111 265 559
w_variable (388)
    on left: 564, on right: 260 626 627 628 629
rw_variable (389)
    on left: 565, on right: 359 360 361 362
variable (390)
    on left: 568 569, on right: 76 86 172 200 201 259 342 343 345 347
    348 349 350 351 352 353 354 355 356 357 358 427 429 563 564 565
    616 644 651 661
$@88 (391)
    on left: 566, on right: 568
$@89 (392)
    on left: 567, on right: 568
variable_properties (393)
    on left: 570 571, on right: 568 570
variable_property (394)
    on left: 573, on right: 327 328 570
$@90 (395)
    on left: 572, on right: 573
array_method_dereference (396)
    on left: 574 575, on right: 574 579
method (397)
    on left: 577, on right: 575 578
@91 (398)
    on left: 576, on right: 577
method_or_not (399)
    on left: 578 579 580, on right: 568 573
variable_without_objects (400)
    on left: 581 582, on right: 452 456 458 583 584 606
static_member (401)
    on left: 583 584, on right: 594 645
variable_class_name (402)
    on left: 585, on right: 454 456 584 664
array_function_dereference (403)
    on left: 586 588, on right: 586 590
$@92 (404)
    on left: 587, on right: 588
base_variable_with_function_calls (405)
    on left: 589 590 591, on right: 568 569
base_variable (406)
    on left: 592 593 594, on right: 470 471 589
tpl_base_variable (407)
    on left: 595 596, on right: 121
reference_variable (408)
    on left: 597 598 599, on right: 581 582 585 592 593 595 596 597
    598
compound_variable (409)
    on left: 600 601, on right: 599
dim_offset (410)
    on left: 602 603, on right: 329 330 430 431 432 433 574 575 586
    588 597 607
object_property (411)
    on left: 604 606, on right: 470 474 568 573
$@93 (412)
    on left: 605, on right: 606
object_dim_list (413)
    on left: 607 608 609, on right: 604 607 608
variable_name (414)
    on left: 610 611, on right: 450 454 609
simple_indirect_reference (415)
    on left: 612 613, on right: 582 593 596 613
assignment_list (416)
    on left: 614 615, on right: 341 614 618
assignment_list_element (417)
    on left: 616 618 619, on right: 614 615
$@94 (418)
    on left: 617, on right: 618
array_pair_list (419)
    on left: 620 621, on right: 125 434 435
non_empty_array_pair_list (420)
    on left: 622 623 624 625 626 627 628 629, on right: 621 622 623
    626 627
encaps_list (421)
    on left: 630 631 632 633 634 635 636 637, on right: 124 134 480
    548 549 630 631 636
encaps_var (422)
    on left: 638 640 641 642 643 644 645, on right: 630 632 633
$@95 (423)
    on left: 639, on right: 640
tpl_encaps_var (424)
    on left: 646, on right: 634 635 636
encaps_var_offset (425)
    on left: 647 648 649, on right: 640
internal_functions_in_yacc (426)
    on left: 650 651 652 653 654 655 656 657, on right: 405
isset_variables (427)
    on left: 658 660, on right: 650 660
$@96 (428)
    on left: 659, on right: 660
isset_variable (429)
    on left: 661 662, on right: 658 660
class_constant (430)
    on left: 663 664, on right: 540 646
static_class_name_scalar (431)
    on left: 665, on right: 498
class_name_scalar (432)
    on left: 666, on right: 546


State 0

    0 $accept: . start "end of file"

    $default  reduce using rule 4 (top_statement_list)

    start               go to state 1
    top_statement_list  go to state 2


State 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start: top_statement_list .
    3 top_statement_list: top_statement_list . $@1 top_statement

    "end of file"  reduce using rule 1 (start)
    $default       reduce using rule 2 ($@1)

    $@1  go to state 4


State 3

    0 $accept: start "end of file" .

    $default  accept


State 4

    3 top_statement_list: top_statement_list $@1 . top_statement

    "require_once (T_REQUIRE_ONCE)"                         shift, and go to state 5
    "require (T_REQUIRE)"                                   shift, and go to state 6
    "eval (T_EVAL)"                                         shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"                         shift, and go to state 8
    "include (T_INCLUDE)"                                   shift, and go to state 9
    "print (T_PRINT)"                                       shift, and go to state 10
    "yield (T_YIELD)"                                       shift, and go to state 11
    '+'                                                     shift, and go to state 12
    '-'                                                     shift, and go to state 13
    '!'                                                     shift, and go to state 14
    '~'                                                     shift, and go to state 15
    '@'                                                     shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                                shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                                  shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                              shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                                shift, and go to state 20
    "(string) (T_STRING_CAST)"                              shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                              shift, and go to state 22
    "(int) (T_INT_CAST)"                                    shift, and go to state 23
    "-- (T_DEC)"                                            shift, and go to state 24
    "++ (T_INC)"                                            shift, and go to state 25
    '['                                                     shift, and go to state 26
    "clone (T_CLONE)"                                       shift, and go to state 27
    "new (T_NEW)"                                           shift, and go to state 28
    "exit (T_EXIT)"                                         shift, and go to state 29
    "if (T_IF)"                                             shift, and go to state 30
    "integer number (T_LNUMBER)"                            shift, and go to state 31
    "floating-point number (T_DNUMBER)"                     shift, and go to state 32
    "identifier (T_STRING)"                                 shift, and go to state 33
    "variable name (T_STRING_VARNAME)"                      shift, and go to state 34
    "variable (T_VARIABLE)"                                 shift, and go to state 35
    T_INLINE_HTML                                           shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"            shift, and go to state 37
    "echo (T_ECHO)"                                         shift, and go to state 38
    "do (T_DO)"                                             shift, and go to state 39
    "while (T_WHILE)"                                       shift, and go to state 40
    "for (T_FOR)"                                           shift, and go to state 41
    "foreach (T_FOREACH)"                                   shift, and go to state 42
    "declare (T_DECLARE)"                                   shift, and go to state 43
    "switch (T_SWITCH)"                                     shift, and go to state 44
    "break (T_BREAK)"                                       shift, and go to state 45
    "continue (T_CONTINUE)"                                 shift, and go to state 46
    "goto (T_GOTO)"                                         shift, and go to state 47
    "function (T_FUNCTION)"                                 shift, and go to state 48
    "const (T_CONST)"                                       shift, and go to state 49
    "return (T_RETURN)"                                     shift, and go to state 50
    "try (T_TRY)"                                           shift, and go to state 51
    "throw (T_THROW)"                                       shift, and go to state 52
    "use (T_USE)"                                           shift, and go to state 53
    "global (T_GLOBAL)"                                     shift, and go to state 54
    "final (T_FINAL)"                                       shift, and go to state 55
    "abstract (T_ABSTRACT)"                                 shift, and go to state 56
    "static (T_STATIC)"                                     shift, and go to state 57
    "unset (T_UNSET)"                                       shift, and go to state 58
    "isset (T_ISSET)"                                       shift, and go to state 59
    "empty (T_EMPTY)"                                       shift, and go to state 60
    "__halt_compiler (T_HALT_COMPILER)"                     shift, and go to state 61
    "class (T_CLASS)"                                       shift, and go to state 62
    "trait (T_TRAIT)"                                       shift, and go to state 63
    "interface (T_INTERFACE)"                               shift, and go to state 64
    "list (T_LIST)"                                         shift, and go to state 65
    "array (T_ARRAY)"                                       shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                                 shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                                 shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                               shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                               shift, and go to state 70
    "__LINE__ (T_LINE)"                                     shift, and go to state 71
    "__FILE__ (T_FILE)"                                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"                       shift, and go to state 73
    "namespace (T_NAMESPACE)"                               shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                                shift, and go to state 75
    "__DIR__ (T_DIR)"                                       shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                                   shift, and go to state 77
    "tpl left delim (T_START_TPL)"                          shift, and go to state 78
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81
    '('                                                     shift, and go to state 82
    ';'                                                     shift, and go to state 83
    '{'                                                     shift, and go to state 84
    '"'                                                     shift, and go to state 85
    '$'                                                     shift, and go to state 86
    '`'                                                     shift, and go to state 87

    namespace_name                           go to state 88
    top_statement                            go to state 89
    constant_declaration                     go to state 90
    statement                                go to state 91
    unticked_statement                       go to state 92
    tpl_statement                            go to state 93
    function_declaration_statement           go to state 94
    class_declaration_statement              go to state 95
    unticked_function_declaration_statement  go to state 96
    unticked_class_declaration_statement     go to state 97
    class_entry_type                         go to state 98
    interface_entry                          go to state 99
    new_expr                                 go to state 100
    expr_without_variable                    go to state 101
    yield_expr                               go to state 102
    combined_scalar_offset                   go to state 103
    combined_scalar                          go to state 104
    function                                 go to state 105
    function_call                            go to state 106
    class_name                               go to state 107
    common_scalar                            go to state 108
    general_constant                         go to state 109
    scalar                                   go to state 110
    expr                                     go to state 111
    parenthesis_expr                         go to state 112
    r_variable                               go to state 113
    rw_variable                              go to state 114
    variable                                 go to state 115
    variable_without_objects                 go to state 116
    static_member                            go to state 117
    variable_class_name                      go to state 118
    array_function_dereference               go to state 119
    base_variable_with_function_calls        go to state 120
    base_variable                            go to state 121
    reference_variable                       go to state 122
    compound_variable                        go to state 123
    simple_indirect_reference                go to state 124
    internal_functions_in_yacc               go to state 125
    class_constant                           go to state 126
    class_name_scalar                        go to state 127


State 5

  657 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 133
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 6

  656 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 134
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 7

  655 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  shift, and go to state 135


State 8

  654 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 136
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 9

  653 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 137
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 10

  420 expr_without_variable: "print (T_PRINT)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 138
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 11

  421 expr_without_variable: "yield (T_YIELD)" .
  426 yield_expr: "yield (T_YIELD)" . expr_without_variable
  427           | "yield (T_YIELD)" . variable
  428           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  429           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 421 (expr_without_variable)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 139
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 140
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 141
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 12

  383 expr_without_variable: '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 142
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 13

  384 expr_without_variable: '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 143
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 14

  385 expr_without_variable: '!' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 144
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 15

  386 expr_without_variable: '~' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 145
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 16

  415 expr_without_variable: '@' . $@75 expr

    $default  reduce using rule 414 ($@75)

    $@75  go to state 146


State 17

  412 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 147
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 18

  411 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 148
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 19

  410 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 149
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 20

  409 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 150
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 21

  408 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 151
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 22

  407 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 152
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 23

  406 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 153
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 24

  362 expr_without_variable: "-- (T_DEC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    rw_variable                        go to state 159
    variable                           go to state 160
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 25

  360 expr_without_variable: "++ (T_INC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    rw_variable                        go to state 162
    variable                           go to state 160
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 26

  435 combined_scalar: '[' . array_pair_list ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 163
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 620 (array_pair_list)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 164
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    array_pair_list                    go to state 165
    non_empty_array_pair_list          go to state 166
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 27

  346 expr_without_variable: "clone (T_CLONE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 167
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 28

  339 new_expr: "new (T_NEW)" . class_name_reference $@64 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 168
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 169
    '$'                        shift, and go to state 86

    namespace_name                go to state 170
    class_name                    go to state 171
    class_name_reference          go to state 172
    dynamic_class_name_reference  go to state 173
    static_member                 go to state 117
    variable_class_name           go to state 174
    base_variable                 go to state 175
    reference_variable            go to state 176
    compound_variable             go to state 123
    simple_indirect_reference     go to state 177


State 29

  413 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  shift, and go to state 178

    $default  reduce using rule 475 (exit_expr)

    exit_expr         go to state 179
    parenthesis_expr  go to state 180


State 30

   54 unticked_statement: "if (T_IF)" . parenthesis_expr $@5 statement $@6 elseif_list else_single
   57                   | "if (T_IF)" . parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    '('  shift, and go to state 181

    parenthesis_expr  go to state 182


State 31

  483 common_scalar: "integer number (T_LNUMBER)" .

    $default  reduce using rule 483 (common_scalar)


State 32

  484 common_scalar: "floating-point number (T_DNUMBER)" .

    $default  reduce using rule 484 (common_scalar)


State 33

    5 namespace_name: "identifier (T_STRING)" .
   50 statement: "identifier (T_STRING)" . ':'

    ':'  shift, and go to state 183

    $default  reduce using rule 5 (namespace_name)


State 34

  544 scalar: "variable name (T_STRING_VARNAME)" .

    $default  reduce using rule 544 (scalar)


State 35

  600 compound_variable: "variable (T_VARIABLE)" .

    $default  reduce using rule 600 (compound_variable)


State 36

   81 unticked_statement: T_INLINE_HTML .

    $default  reduce using rule 81 (unticked_statement)


State 37

  432 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" . '[' dim_offset ']'
  485 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    '['  shift, and go to state 184

    $default  reduce using rule 485 (common_scalar)


State 38

   80 unticked_statement: "echo (T_ECHO)" . echo_expr_list ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    echo_expr_list                     go to state 185
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 186
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 39

   63 unticked_statement: "do (T_DO)" . $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    $default  reduce using rule 61 ($@11)

    $@11  go to state 187


State 40

   60 unticked_statement: "while (T_WHILE)" . $@9 parenthesis_expr @10 while_statement

    $default  reduce using rule 58 ($@9)

    $@9  go to state 188


State 41

   67 unticked_statement: "for (T_FOR)" . '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    '('  shift, and go to state 189


State 42

   86 unticked_statement: "foreach (T_FOREACH)" . '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   89                   | "foreach (T_FOREACH)" . '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '('  shift, and go to state 190


State 43

   91 unticked_statement: "declare (T_DECLARE)" . $@21 '(' declare_list ')' declare_statement

    $default  reduce using rule 90 ($@21)

    $@21  go to state 191


State 44

   69 unticked_statement: "switch (T_SWITCH)" . parenthesis_expr $@16 switch_case_list

    '('  shift, and go to state 181

    parenthesis_expr  go to state 192


State 45

   70 unticked_statement: "break (T_BREAK)" . ';'
   71                   | "break (T_BREAK)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 193
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 194
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 46

   72 unticked_statement: "continue (T_CONTINUE)" . ';'
   73                   | "continue (T_CONTINUE)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 195
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 196
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 47

   97 unticked_statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  shift, and go to state 197


State 48

  436 function: "function (T_FUNCTION)" .

    $default  reduce using rule 436 (function)


State 49

   40 constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 198


State 50

   74 unticked_statement: "return (T_RETURN)" . ';'
   75                   | "return (T_RETURN)" . expr_without_variable ';'
   76                   | "return (T_RETURN)" . variable ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 199
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 200
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 202
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 51

   95 unticked_statement: "try (T_TRY)" . $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement

    $default  reduce using rule 93 ($@22)

    $@22  go to state 203


State 52

   96 unticked_statement: "throw (T_THROW)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 204
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 53

   16 top_statement: "use (T_USE)" . use_declarations ';'
   17              | "use (T_USE)" . "function (T_FUNCTION)" use_function_declarations ';'
   18              | "use (T_USE)" . "const (T_CONST)" use_const_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 129
    "function (T_FUNCTION)"  shift, and go to state 205
    "const (T_CONST)"        shift, and go to state 206
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 207

    namespace_name    go to state 208
    use_declarations  go to state 209
    use_declaration   go to state 210


State 54

   78 unticked_statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 211
    '$'                      shift, and go to state 212

    global_var_list  go to state 213
    global_var       go to state 214


State 55

  188 class_entry_type: "final (T_FINAL)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 215


State 56

  186 class_entry_type: "abstract (T_ABSTRACT)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 216


State 57

   79 unticked_statement: "static (T_STATIC)" . static_var_list ';'
  425 expr_without_variable: "static (T_STATIC)" . function is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  459 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  shift, and go to state 217
    "function (T_FUNCTION)"  shift, and go to state 48

    $default  reduce using rule 459 (class_name)

    static_var_list  go to state 218
    function         go to state 219


State 58

   83 unticked_statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  shift, and go to state 220


State 59

  650 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  shift, and go to state 221


State 60

  651 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' variable ')'
  652                           | "empty (T_EMPTY)" . '(' expr_without_variable ')'

    '('  shift, and go to state 222


State 61

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 223


State 62

  185 class_entry_type: "class (T_CLASS)" .

    $default  reduce using rule 185 (class_entry_type)


State 63

  187 class_entry_type: "trait (T_TRAIT)" .

    $default  reduce using rule 187 (class_entry_type)


State 64

  191 interface_entry: "interface (T_INTERFACE)" .

    $default  reduce using rule 191 (interface_entry)


State 65

  341 expr_without_variable: "list (T_LIST)" . '(' $@65 assignment_list ')' '=' expr

    '('  shift, and go to state 224


State 66

  434 combined_scalar: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 225


State 67

  550 scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 550 (scalar)


State 68

  489 common_scalar: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 489 (common_scalar)


State 69

  490 common_scalar: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 490 (common_scalar)


State 70

  491 common_scalar: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 491 (common_scalar)


State 71

  486 common_scalar: "__LINE__ (T_LINE)" .

    $default  reduce using rule 486 (common_scalar)


State 72

  487 common_scalar: "__FILE__ (T_FILE)" .

    $default  reduce using rule 487 (common_scalar)


State 73

  493 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  494              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  549 scalar: "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 227
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 228
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_list     go to state 232
    encaps_var      go to state 233
    tpl_encaps_var  go to state 234


State 74

   11 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   13              | "namespace (T_NAMESPACE)" . namespace_name '{' $@2 top_statement_list '}'
   15              | "namespace (T_NAMESPACE)" . '{' $@3 top_statement_list '}'
  446 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  542 general_constant: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 235
    '{'                      shift, and go to state 236

    namespace_name  go to state 237


State 75

  492 common_scalar: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 492 (common_scalar)


State 76

  488 common_scalar: "__DIR__ (T_DIR)" .

    $default  reduce using rule 488 (common_scalar)


State 77

  448 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @80 function_call_parameter_list
  462 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  543 general_constant: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 238


State 78

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 79

  138 tpl_statement: "tpl left delim with script (T_START_TPL_WITH_SCRIPT)" . inner_statement_list "tpl right delim (T_END_TPL)"

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 247


State 80

  141 tpl_statement: "{t (T_START_TPL_TRANSLATE)" . tpl_encaps_list "tpl right delim (T_END_TPL)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 248
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"                shift, and go to state 249
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    tpl_encaps_list  go to state 250
    encaps_list      go to state 251
    encaps_var       go to state 233
    tpl_encaps_var   go to state 234


State 81

  139 tpl_statement: "{include (T_TPL_INCLUDE)" . expr "tpl right delim (T_END_TPL)"
  140              | "{include (T_TPL_INCLUDE)" . "attr file (T_ATTR_FILE)" '=' expr "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    "attr file (T_ATTR_FILE)"                     shift, and go to state 252
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 253
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 82

  399 expr_without_variable: '(' . new_expr ')' @71 instance_call
  561 parenthesis_expr: '(' . expr ')'
  562                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 254
    expr_without_variable              go to state 101
    yield_expr                         go to state 255
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 256
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 83

   92 unticked_statement: ';' .

    $default  reduce using rule 92 (unticked_statement)


State 84

   51 unticked_statement: '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 257


State 85

  548 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 258
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_list     go to state 259
    encaps_var      go to state 233
    tpl_encaps_var  go to state 234


State 86

  601 compound_variable: '$' . '{' expr '}'
  612 simple_indirect_reference: '$' .

    '{'  shift, and go to state 260

    $default  reduce using rule 612 (simple_indirect_reference)


State 87

  419 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 261
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    $default  reduce using rule 478 (backticks_expr)

    backticks_expr  go to state 262
    encaps_list     go to state 263
    encaps_var      go to state 233
    tpl_encaps_var  go to state 234


State 88

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  444 function_call: namespace_name . @78 function_call_parameter_list
  460 class_name: namespace_name .
  541 general_constant: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 460 (class_name)
    '('                            reduce using rule 443 (@78)
    $default                       reduce using rule 541 (general_constant)

    @78  go to state 265


State 89

    3 top_statement_list: top_statement_list $@1 top_statement .

    $default  reduce using rule 3 (top_statement_list)


State 90

   19 top_statement: constant_declaration . ';'
   39 constant_declaration: constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 266
    ';'  shift, and go to state 267


State 91

    7 top_statement: statement .

    $default  reduce using rule 7 (top_statement)


State 92

   49 statement: unticked_statement .

    $default  reduce using rule 49 (statement)


State 93

   20 top_statement: tpl_statement .

    $default  reduce using rule 20 (top_statement)


State 94

    8 top_statement: function_declaration_statement .

    $default  reduce using rule 8 (top_statement)


State 95

    9 top_statement: class_declaration_statement .

    $default  reduce using rule 9 (top_statement)


State 96

  173 function_declaration_statement: unticked_function_declaration_statement .

    $default  reduce using rule 173 (function_declaration_statement)


State 97

  174 class_declaration_statement: unticked_class_declaration_statement .

    $default  reduce using rule 174 (class_declaration_statement)


State 98

  182 unticked_class_declaration_statement: class_entry_type . "identifier (T_STRING)" extends_from $@51 implements_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 268


State 99

  184 unticked_class_declaration_statement: interface_entry . "identifier (T_STRING)" $@52 interface_extends_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 269


State 100

  397 expr_without_variable: new_expr .

    $default  reduce using rule 397 (expr_without_variable)


State 101

  560 expr: expr_without_variable .

    $default  reduce using rule 560 (expr)


State 102

   77 unticked_statement: yield_expr . ';'

    ';'  shift, and go to state 270


State 103

  417 expr_without_variable: combined_scalar_offset .
  431 combined_scalar_offset: combined_scalar_offset . '[' dim_offset ']'

    '['  shift, and go to state 271

    $default  reduce using rule 417 (expr_without_variable)


State 104

  418 expr_without_variable: combined_scalar .
  430 combined_scalar_offset: combined_scalar . '[' dim_offset ']'

    '['  shift, and go to state 272

    $default  reduce using rule 418 (expr_without_variable)


State 105

  180 unticked_function_declaration_statement: function . is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' inner_statement_list '}'
  423 expr_without_variable: function . is_reference @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 273

    $default  reduce using rule 175 (is_reference)

    is_reference  go to state 274


State 106

  588 array_function_dereference: function_call . $@92 '[' dim_offset ']'
  591 base_variable_with_function_calls: function_call .

    '['       reduce using rule 587 ($@92)
    $default  reduce using rule 591 (base_variable_with_function_calls)

    $@92  go to state 275


State 107

  450 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @81 function_call_parameter_list
  452              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@82 function_call_parameter_list
  583 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  663 class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  666 class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 276


State 108

  547 scalar: common_scalar .

    $default  reduce using rule 547 (scalar)


State 109

  433 combined_scalar_offset: general_constant . '[' dim_offset ']'
  545 scalar: general_constant .

    '['  shift, and go to state 277

    $default  reduce using rule 545 (scalar)


State 110

  416 expr_without_variable: scalar .

    $default  reduce using rule 416 (expr_without_variable)


State 111

   82 unticked_statement: expr . ';'
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ';'                           shift, and go to state 304


State 112

  396 expr_without_variable: parenthesis_expr .

    $default  reduce using rule 396 (expr_without_variable)


State 113

  559 expr: r_variable .

    $default  reduce using rule 559 (expr)


State 114

  359 expr_without_variable: rw_variable . "++ (T_INC)"
  361                      | rw_variable . "-- (T_DEC)"

    "-- (T_DEC)"  shift, and go to state 305
    "++ (T_INC)"  shift, and go to state 306


State 115

  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    $default      reduce using rule 563 (r_variable)


State 116

  458 function_call: variable_without_objects . $@85 function_call_parameter_list

    $default  reduce using rule 457 ($@85)

    $@85  go to state 320


State 117

  594 base_variable: static_member .

    $default  reduce using rule 594 (base_variable)


State 118

  454 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@83 function_call_parameter_list
  456              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@84 function_call_parameter_list
  584 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  664 class_constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 321


State 119

  586 array_function_dereference: array_function_dereference . '[' dim_offset ']'
  590 base_variable_with_function_calls: array_function_dereference .

    '['  shift, and go to state 322

    $default  reduce using rule 590 (base_variable_with_function_calls)


State 120

  568 variable: base_variable_with_function_calls . "-> (T_OBJECT_OPERATOR)" $@88 object_property $@89 method_or_not variable_properties
  569         | base_variable_with_function_calls .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 323

    $default  reduce using rule 569 (variable)


State 121

  589 base_variable_with_function_calls: base_variable .

    $default  reduce using rule 589 (base_variable_with_function_calls)


State 122

  581 variable_without_objects: reference_variable .
  585 variable_class_name: reference_variable .
  592 base_variable: reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 585 (variable_class_name)
    '('                            reduce using rule 581 (variable_without_objects)
    $default                       reduce using rule 592 (base_variable)


State 123

  599 reference_variable: compound_variable .

    $default  reduce using rule 599 (reference_variable)


State 124

  582 variable_without_objects: simple_indirect_reference . reference_variable
  593 base_variable: simple_indirect_reference . reference_variable
  613 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 326

    reference_variable  go to state 327
    compound_variable   go to state 123


State 125

  405 expr_without_variable: internal_functions_in_yacc .

    $default  reduce using rule 405 (expr_without_variable)


State 126

  540 general_constant: class_constant .

    $default  reduce using rule 540 (general_constant)


State 127

  546 scalar: class_name_scalar .

    $default  reduce using rule 546 (scalar)


State 128

  421 expr_without_variable: "yield (T_YIELD)" .

    $default  reduce using rule 421 (expr_without_variable)


State 129

    5 namespace_name: "identifier (T_STRING)" .

    $default  reduce using rule 5 (namespace_name)


State 130

  425 expr_without_variable: "static (T_STATIC)" . function is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  459 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  shift, and go to state 48

    $default  reduce using rule 459 (class_name)

    function  go to state 219


State 131

  446 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  542 general_constant: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 235


State 132

  423 expr_without_variable: function . is_reference @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 273

    $default  reduce using rule 175 (is_reference)

    is_reference  go to state 328


State 133

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  657 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 657 (internal_functions_in_yacc)


State 134

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  656 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 656 (internal_functions_in_yacc)


State 135

  655 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 329
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 136

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  654 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 654 (internal_functions_in_yacc)


State 137

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  653 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 653 (internal_functions_in_yacc)


State 138

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  420                      | "print (T_PRINT)" expr .

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 420 (expr_without_variable)


State 139

  426 yield_expr: "yield (T_YIELD)" expr_without_variable .
  560 expr: expr_without_variable .

    ')'       reduce using rule 426 (yield_expr)
    ';'       reduce using rule 426 (yield_expr)
    $default  reduce using rule 560 (expr)


State 140

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  428 yield_expr: "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" expr_without_variable
  429           | "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" variable

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 330


State 141

  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  427 yield_expr: "yield (T_YIELD)" variable .
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    ')'           reduce using rule 427 (yield_expr)
    ';'           reduce using rule 427 (yield_expr)
    $default      reduce using rule 563 (r_variable)


State 142

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  383                      | '+' expr .
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 383 (expr_without_variable)


State 143

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  384                      | '-' expr .
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 384 (expr_without_variable)


State 144

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  385                      | '!' expr .
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 385 (expr_without_variable)


State 145

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  386                      | '~' expr .
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 386 (expr_without_variable)


State 146

  415 expr_without_variable: '@' $@75 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 331
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 147

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  412                      | "(unset) (T_UNSET_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 412 (expr_without_variable)


State 148

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  411                      | "(bool) (T_BOOL_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 411 (expr_without_variable)


State 149

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  410                      | "(object) (T_OBJECT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 410 (expr_without_variable)


State 150

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  409                      | "(array) (T_ARRAY_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 409 (expr_without_variable)


State 151

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  408                      | "(string) (T_STRING_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 408 (expr_without_variable)


State 152

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  407                      | "(double) (T_DOUBLE_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 407 (expr_without_variable)


State 153

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  406                      | "(int) (T_INT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 406 (expr_without_variable)


State 154

  459 class_name: "static (T_STATIC)" .

    $default  reduce using rule 459 (class_name)


State 155

  446 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 332


State 156

  448 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @80 function_call_parameter_list
  462 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 333


State 157

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  444 function_call: namespace_name . @78 function_call_parameter_list
  460 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 460 (class_name)
    $default                       reduce using rule 443 (@78)

    @78  go to state 265


State 158

  450 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @81 function_call_parameter_list
  452              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@82 function_call_parameter_list
  583 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 334


State 159

  362 expr_without_variable: "-- (T_DEC)" rw_variable .

    $default  reduce using rule 362 (expr_without_variable)


State 160

  565 rw_variable: variable .

    $default  reduce using rule 565 (rw_variable)


State 161

  454 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@83 function_call_parameter_list
  456              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@84 function_call_parameter_list
  584 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 335


State 162

  360 expr_without_variable: "++ (T_INC)" rw_variable .

    $default  reduce using rule 360 (expr_without_variable)


State 163

  629 non_empty_array_pair_list: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    w_variable                         go to state 336
    variable                           go to state 337
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 164

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  624 non_empty_array_pair_list: expr . "=> (T_DOUBLE_ARROW)" expr
  625                          | expr .
  628                          | expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 338

    $default  reduce using rule 625 (non_empty_array_pair_list)


State 165

  435 combined_scalar: '[' array_pair_list . ']'

    ']'  shift, and go to state 339


State 166

  621 array_pair_list: non_empty_array_pair_list . possible_comma
  622 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" expr
  623                          | non_empty_array_pair_list . ',' expr
  626                          | non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  627                          | non_empty_array_pair_list . ',' '&' w_variable

    ','  shift, and go to state 340

    $default  reduce using rule 553 (possible_comma)

    possible_comma  go to state 341


State 167

  346 expr_without_variable: "clone (T_CLONE)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    $default  reduce using rule 346 (expr_without_variable)


State 168

  461 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 342


State 169

  462 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 343


State 170

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  460 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 460 (class_name)


State 171

  466 class_name_reference: class_name .
  583 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 344

    $default  reduce using rule 466 (class_name_reference)


State 172

  339 new_expr: "new (T_NEW)" class_name_reference . $@64 ctor_arguments

    $default  reduce using rule 338 ($@64)

    $@64  go to state 345


State 173

  467 class_name_reference: dynamic_class_name_reference .

    $default  reduce using rule 467 (class_name_reference)


State 174

  584 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 346


State 175

  470 dynamic_class_name_reference: base_variable . "-> (T_OBJECT_OPERATOR)" $@86 object_property $@87 dynamic_class_name_variable_properties
  471                             | base_variable .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 347

    $default  reduce using rule 471 (dynamic_class_name_reference)


State 176

  585 variable_class_name: reference_variable .
  592 base_variable: reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 585 (variable_class_name)
    $default                       reduce using rule 592 (base_variable)


State 177

  593 base_variable: simple_indirect_reference . reference_variable
  613 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 326

    reference_variable  go to state 348
    compound_variable   go to state 123


State 178

  476 exit_expr: '(' . ')'
  561 parenthesis_expr: '(' . expr ')'
  562                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ')'                                           shift, and go to state 349
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 255
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 256
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 179

  413 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $default  reduce using rule 413 (expr_without_variable)


State 180

  477 exit_expr: parenthesis_expr .

    $default  reduce using rule 477 (exit_expr)


State 181

  561 parenthesis_expr: '(' . expr ')'
  562                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 255
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 256
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 182

   54 unticked_statement: "if (T_IF)" parenthesis_expr . $@5 statement $@6 elseif_list else_single
   57                   | "if (T_IF)" parenthesis_expr . ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    ':'  shift, and go to state 350

    $default  reduce using rule 52 ($@5)

    $@5  go to state 351


State 183

   50 statement: "identifier (T_STRING)" ':' .

    $default  reduce using rule 50 (statement)


State 184

  432 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 353
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 185

   80 unticked_statement: "echo (T_ECHO)" echo_expr_list . ';'
  320 echo_expr_list: echo_expr_list . ',' expr

    ','  shift, and go to state 354
    ';'  shift, and go to state 355


State 186

  321 echo_expr_list: expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 321 (echo_expr_list)


State 187

   63 unticked_statement: "do (T_DO)" $@11 . statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 356
    unticked_statement                 go to state 92
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 188

   60 unticked_statement: "while (T_WHILE)" $@9 . parenthesis_expr @10 while_statement

    '('  shift, and go to state 181

    parenthesis_expr  go to state 357


State 189

   67 unticked_statement: "for (T_FOR)" '(' . for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    for_expr                           go to state 358
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 190

   86 unticked_statement: "foreach (T_FOREACH)" '(' . variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   89                   | "foreach (T_FOREACH)" '(' . expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 361
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 362
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 191

   91 unticked_statement: "declare (T_DECLARE)" $@21 . '(' declare_list ')' declare_statement

    '('  shift, and go to state 363


State 192

   69 unticked_statement: "switch (T_SWITCH)" parenthesis_expr . $@16 switch_case_list

    $default  reduce using rule 68 ($@16)

    $@16  go to state 364


State 193

   70 unticked_statement: "break (T_BREAK)" ';' .

    $default  reduce using rule 70 (unticked_statement)


State 194

   71 unticked_statement: "break (T_BREAK)" expr . ';'
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ';'                           shift, and go to state 365


State 195

   72 unticked_statement: "continue (T_CONTINUE)" ';' .

    $default  reduce using rule 72 (unticked_statement)


State 196

   73 unticked_statement: "continue (T_CONTINUE)" expr . ';'
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ';'                           shift, and go to state 366


State 197

   97 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  shift, and go to state 367


State 198

   40 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 368


State 199

   74 unticked_statement: "return (T_RETURN)" ';' .

    $default  reduce using rule 74 (unticked_statement)


State 200

   75 unticked_statement: "return (T_RETURN)" expr_without_variable . ';'
  560 expr: expr_without_variable .

    ';'  shift, and go to state 369

    $default  reduce using rule 560 (expr)


State 201

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303


State 202

   76 unticked_statement: "return (T_RETURN)" variable . ';'
  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319
    ';'                    shift, and go to state 370

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    $default      reduce using rule 563 (r_variable)


State 203

   95 unticked_statement: "try (T_TRY)" $@22 . '{' inner_statement_list '}' catch_statement $@23 finally_statement

    '{'  shift, and go to state 371


State 204

   96 unticked_statement: "throw (T_THROW)" expr . ';'
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ';'                           shift, and go to state 372


State 205

   17 top_statement: "use (T_USE)" "function (T_FUNCTION)" . use_function_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 373

    namespace_name             go to state 374
    use_function_declarations  go to state 375
    use_function_declaration   go to state 376


State 206

   18 top_statement: "use (T_USE)" "const (T_CONST)" . use_const_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 377

    namespace_name          go to state 378
    use_const_declarations  go to state 379
    use_const_declaration   go to state 380


State 207

   25 use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   26                | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 381


State 208

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   23 use_declaration: namespace_name .
   24                | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 382
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 23 (use_declaration)


State 209

   16 top_statement: "use (T_USE)" use_declarations . ';'
   21 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 383
    ';'  shift, and go to state 384


State 210

   22 use_declarations: use_declaration .

    $default  reduce using rule 22 (use_declarations)


State 211

  264 global_var: "variable (T_VARIABLE)" .

    $default  reduce using rule 264 (global_var)


State 212

  265 global_var: '$' . r_variable
  266           | '$' . '{' expr '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '{'                        shift, and go to state 385
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    r_variable                         go to state 386
    variable                           go to state 387
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 213

   78 unticked_statement: "global (T_GLOBAL)" global_var_list . ';'
  262 global_var_list: global_var_list . ',' global_var

    ','  shift, and go to state 388
    ';'  shift, and go to state 389


State 214

  263 global_var_list: global_var .

    $default  reduce using rule 263 (global_var_list)


State 215

  188 class_entry_type: "final (T_FINAL)" "class (T_CLASS)" .

    $default  reduce using rule 188 (class_entry_type)


State 216

  186 class_entry_type: "abstract (T_ABSTRACT)" "class (T_CLASS)" .

    $default  reduce using rule 186 (class_entry_type)


State 217

  269 static_var_list: "variable (T_VARIABLE)" .
  270                | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 390

    $default  reduce using rule 269 (static_var_list)


State 218

   79 unticked_statement: "static (T_STATIC)" static_var_list . ';'
  267 static_var_list: static_var_list . ',' "variable (T_VARIABLE)"
  268                | static_var_list . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 391
    ';'  shift, and go to state 392


State 219

  425 expr_without_variable: "static (T_STATIC)" function . is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 273

    $default  reduce using rule 175 (is_reference)

    is_reference  go to state 393


State 220

   83 unticked_statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    unset_variables                    go to state 394
    unset_variable                     go to state 395
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 396
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 221

  650 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 397
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 398
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    isset_variables                    go to state 399
    isset_variable                     go to state 400
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 222

  651 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . variable ')'
  652                           | "empty (T_EMPTY)" '(' . expr_without_variable ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 401
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 402
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 223

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 403


State 224

  341 expr_without_variable: "list (T_LIST)" '(' . $@65 assignment_list ')' '=' expr

    $default  reduce using rule 340 ($@65)

    $@65  go to state 404


State 225

  434 combined_scalar: "array (T_ARRAY)" '(' . array_pair_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 163
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 620 (array_pair_list)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 164
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    array_pair_list                    go to state 405
    non_empty_array_pair_list          go to state 166
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 226

  638 encaps_var: "variable (T_VARIABLE)" .
  640           | "variable (T_VARIABLE)" . '[' $@95 encaps_var_offset ']'
  641           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       shift, and go to state 406
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 407

    $default  reduce using rule 638 (encaps_var)


State 227

  493 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  633 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var
  635            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . tpl_encaps_var
  637            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 408
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 409
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_var      go to state 410
    tpl_encaps_var  go to state 411


State 228

  494 common_scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 494 (common_scalar)


State 229

  642 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  643           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 412
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 413
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 230

  644 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 414
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 231

  645 encaps_var: '{' . static_member '}'
  646 tpl_encaps_var: '{' . class_constant '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 168
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 169
    '$'                        shift, and go to state 415

    namespace_name       go to state 170
    class_name           go to state 416
    static_member        go to state 417
    variable_class_name  go to state 418
    reference_variable   go to state 419
    compound_variable    go to state 123
    class_constant       go to state 420


State 232

  549 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  630 encaps_list: encaps_list . encaps_var
  631            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  636            | encaps_list . tpl_encaps_var

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 421
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 422
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_var      go to state 423
    tpl_encaps_var  go to state 424


State 233

  632 encaps_list: encaps_var .

    $default  reduce using rule 632 (encaps_list)


State 234

  634 encaps_list: tpl_encaps_var .

    $default  reduce using rule 634 (encaps_list)


State 235

  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  542 general_constant: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 425


State 236

   15 top_statement: "namespace (T_NAMESPACE)" '{' . $@3 top_statement_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 426


State 237

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   11 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   13              | "namespace (T_NAMESPACE)" namespace_name . '{' $@2 top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264
    ';'                    shift, and go to state 427
    '{'                    shift, and go to state 428


State 238

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  448 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @80 function_call_parameter_list
  462 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  543 general_constant: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 462 (class_name)
    '('                            reduce using rule 447 (@80)
    $default                       reduce using rule 543 (general_constant)

    @80  go to state 429


State 239

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" . expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 430
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 240

    5 namespace_name: "identifier (T_STRING)" .
  142 tpl_statement: "tpl left delim (T_START_TPL)" "identifier (T_STRING)" . tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"

    "integer number (T_LNUMBER)"                                shift, and go to state 31
    "floating-point number (T_DNUMBER)"                         shift, and go to state 32
    "identifier (T_STRING)"                                     shift, and go to state 431
    "variable (T_VARIABLE)"                                     shift, and go to state 35
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 432
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"                shift, and go to state 433
    "array (T_ARRAY)"                                           shift, and go to state 434
    "__TRAIT__ (T_TRAIT_C)"                                     shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                                   shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                                   shift, and go to state 70
    "__LINE__ (T_LINE)"                                         shift, and go to state 71
    "__FILE__ (T_FILE)"                                         shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"                           shift, and go to state 435
    "__NAMESPACE__ (T_NS_C)"                                    shift, and go to state 75
    "__DIR__ (T_DIR)"                                           shift, and go to state 76
    '"'                                                         shift, and go to state 436
    '$'                                                         shift, and go to state 86

    $default  reduce using rule 5 (namespace_name)

    tpl_inner_tpl_attr_name    go to state 437
    tpl_inner_tpl_attr_anony   go to state 438
    tpl_inner_tpl_attr_list    go to state 439
    common_scalar              go to state 440
    tpl_base_variable          go to state 441
    reference_variable         go to state 442
    compound_variable          go to state 123
    simple_indirect_reference  go to state 443


State 241

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" . '|' "identifier (T_STRING)" $@29 tpl_modifier_param_list
  432 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" . '[' dim_offset ']'
  485 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    '|'  shift, and go to state 444
    '['  shift, and go to state 184

    $default  reduce using rule 485 (common_scalar)


State 242

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" . '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" "for (T_FOR)" . '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" "for (T_FOR)" . foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '('                        shift, and go to state 446
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 447
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 243

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" . '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" . expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 449
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 450
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 244

  115 tpl_modifier_list: tpl_modifier_list . '|' "identifier (T_STRING)" $@30 tpl_modifier_param_list
  135 tpl_statement: "tpl left delim (T_START_TPL)" tpl_modifier_list . "tpl right delim (T_END_TPL)"

    '|'                            shift, and go to state 451
    "tpl right delim (T_END_TPL)"  shift, and go to state 452


State 245

  136 tpl_statement: "tpl left delim (T_START_TPL)" expr_without_variable . "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" expr_without_variable . ';' "tpl right delim (T_END_TPL)"
  560 expr: expr_without_variable .

    "tpl right delim (T_END_TPL)"  shift, and go to state 453
    ';'                            shift, and go to state 454

    $default  reduce using rule 560 (expr)


State 246

  110 tpl_modifier_list: r_variable .
  111                  | r_variable . ';'
  559 expr: r_variable .

    ';'  shift, and go to state 455

    '|'                            reduce using rule 110 (tpl_modifier_list)
    "tpl right delim (T_END_TPL)"  reduce using rule 110 (tpl_modifier_list)
    $default                       reduce using rule 559 (expr)


State 247

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  138 tpl_statement: "tpl left delim with script (T_START_TPL_WITH_SCRIPT)" inner_statement_list . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 456

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 248

  133 tpl_encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  633 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var
  635            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . tpl_encaps_var
  637            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 408
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    $default  reduce using rule 133 (tpl_encaps_list)

    encaps_var      go to state 410
    tpl_encaps_var  go to state 411


State 249

  132 tpl_encaps_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 132 (tpl_encaps_list)


State 250

  141 tpl_statement: "{t (T_START_TPL_TRANSLATE)" tpl_encaps_list . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 458


State 251

  134 tpl_encaps_list: encaps_list .
  630 encaps_list: encaps_list . encaps_var
  631            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  636            | encaps_list . tpl_encaps_var

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 421
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    $default  reduce using rule 134 (tpl_encaps_list)

    encaps_var      go to state 423
    tpl_encaps_var  go to state 424


State 252

  140 tpl_statement: "{include (T_TPL_INCLUDE)" "attr file (T_ATTR_FILE)" . '=' expr "tpl right delim (T_END_TPL)"

    '='  shift, and go to state 459


State 253

  139 tpl_statement: "{include (T_TPL_INCLUDE)" expr . "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 460


State 254

  397 expr_without_variable: new_expr .
  399                      | '(' new_expr . ')' @71 instance_call

    ')'  shift, and go to state 461

    ')'       [reduce using rule 397 (expr_without_variable)]
    $default  reduce using rule 397 (expr_without_variable)


State 255

  562 parenthesis_expr: '(' yield_expr . ')'

    ')'  shift, and go to state 462


State 256

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  561 parenthesis_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ')'                           shift, and go to state 463


State 257

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
   51 unticked_statement: '{' inner_statement_list . '}'

    '}'  shift, and go to state 464

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 258

  633 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var
  635            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . tpl_encaps_var
  637            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 408
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_var      go to state 410
    tpl_encaps_var  go to state 411


State 259

  548 scalar: '"' encaps_list . '"'
  630 encaps_list: encaps_list . encaps_var
  631            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  636            | encaps_list . tpl_encaps_var

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 421
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231
    '"'                                                         shift, and go to state 465

    encaps_var      go to state 423
    tpl_encaps_var  go to state 424


State 260

  601 compound_variable: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 466
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 261

  479 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  633 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var
  635            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . tpl_encaps_var
  637            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 408
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    $default  reduce using rule 479 (backticks_expr)

    encaps_var      go to state 410
    tpl_encaps_var  go to state 411


State 262

  419 expr_without_variable: '`' backticks_expr . '`'

    '`'  shift, and go to state 467


State 263

  480 backticks_expr: encaps_list .
  630 encaps_list: encaps_list . encaps_var
  631            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  636            | encaps_list . tpl_encaps_var

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 421
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    $default  reduce using rule 480 (backticks_expr)

    encaps_var      go to state 423
    tpl_encaps_var  go to state 424


State 264

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 468


State 265

  444 function_call: namespace_name @78 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 470


State 266

   39 constant_declaration: constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 471


State 267

   19 top_statement: constant_declaration ';' .

    $default  reduce using rule 19 (top_statement)


State 268

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" . extends_from $@51 implements_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 472

    $default  reduce using rule 189 (extends_from)

    extends_from  go to state 473


State 269

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" . $@52 interface_extends_list '{' class_statement_list '}'

    $default  reduce using rule 183 ($@52)

    $@52  go to state 474


State 270

   77 unticked_statement: yield_expr ';' .

    $default  reduce using rule 77 (unticked_statement)


State 271

  431 combined_scalar_offset: combined_scalar_offset '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 475
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 272

  430 combined_scalar_offset: combined_scalar '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 476
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 273

  176 is_reference: '&' .

    $default  reduce using rule 176 (is_reference)


State 274

  180 unticked_function_declaration_statement: function is_reference . "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' inner_statement_list '}'
  423 expr_without_variable: function is_reference . @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 477

    $default  reduce using rule 422 (@76)

    @76  go to state 478


State 275

  588 array_function_dereference: function_call $@92 . '[' dim_offset ']'

    '['  shift, and go to state 479


State 276

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @81 function_call_parameter_list
  452              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@82 function_call_parameter_list
  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  663 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  666 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  shift, and go to state 480
    "variable (T_VARIABLE)"  shift, and go to state 35
    "class (T_CLASS)"        shift, and go to state 481
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 483
    reference_variable         go to state 484
    compound_variable          go to state 123
    variable_name              go to state 485
    simple_indirect_reference  go to state 486


State 277

  433 combined_scalar_offset: general_constant '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 487
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 278

  368 expr_without_variable: expr "or (T_LOGICAL_OR)" . $@69 expr

    $default  reduce using rule 367 ($@69)

    $@69  go to state 488


State 279

  371 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 489
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 280

  370 expr_without_variable: expr "and (T_LOGICAL_AND)" . $@70 expr

    $default  reduce using rule 369 ($@70)

    $@70  go to state 490


State 281

  402 expr_without_variable: expr '?' . $@72 expr ':' $@73 expr
  404                      | expr '?' . ':' $@74 expr

    ':'  shift, and go to state 491

    $default  reduce using rule 400 ($@72)

    $@72  go to state 492


State 282

  364 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . $@67 expr

    $default  reduce using rule 363 ($@67)

    $@67  go to state 493


State 283

  366 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . $@68 expr

    $default  reduce using rule 365 ($@68)

    $@68  go to state 494


State 284

  373 expr_without_variable: expr '^' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 495
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 285

  372 expr_without_variable: expr '&' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 496
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 286

  388 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 497
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 287

  387 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 498
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 288

  390 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 499
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 289

  389 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 500
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 290

  391 expr_without_variable: expr '<' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 501
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 291

  393 expr_without_variable: expr '>' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 502
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 292

  394 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 503
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 293

  392 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 504
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 294

  382 expr_without_variable: expr ">> (T_SR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 505
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 295

  381 expr_without_variable: expr "<< (T_SL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 506
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 296

  375 expr_without_variable: expr '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 507
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 297

  376 expr_without_variable: expr '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 508
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 298

  374 expr_without_variable: expr '.' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 509
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 299

  377 expr_without_variable: expr '*' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 510
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 300

  379 expr_without_variable: expr '/' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 511
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 301

  380 expr_without_variable: expr '%' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 512
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 302

  395 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 168
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 169
    '$'                        shift, and go to state 86

    namespace_name                go to state 170
    class_name                    go to state 171
    class_name_reference          go to state 513
    dynamic_class_name_reference  go to state 173
    static_member                 go to state 117
    variable_class_name           go to state 174
    base_variable                 go to state 175
    reference_variable            go to state 176
    compound_variable             go to state 123
    simple_indirect_reference     go to state 177


State 303

  378 expr_without_variable: expr "** (T_POW)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 514
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 304

   82 unticked_statement: expr ';' .

    $default  reduce using rule 82 (unticked_statement)


State 305

  361 expr_without_variable: rw_variable "-- (T_DEC)" .

    $default  reduce using rule 361 (expr_without_variable)


State 306

  359 expr_without_variable: rw_variable "++ (T_INC)" .

    $default  reduce using rule 359 (expr_without_variable)


State 307

  342 expr_without_variable: variable '=' . expr
  343                      | variable '=' . '&' variable
  345                      | variable '=' . '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 515
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 516
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 308

  350 expr_without_variable: variable "**= (T_POW_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 517
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 309

  358 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 518
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 310

  357 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 519
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 311

  356 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 520
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 312

  355 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 521
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 313

  354 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 522
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 314

  353 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 523
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 315

  352 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 524
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 316

  351 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 525
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 317

  349 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 526
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 318

  348 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 527
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 319

  347 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 528
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 320

  458 function_call: variable_without_objects $@85 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 529


State 321

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@83 function_call_parameter_list
  456              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@84 function_call_parameter_list
  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  664 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 530
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 531
    reference_variable         go to state 484
    compound_variable          go to state 123
    variable_name              go to state 532
    simple_indirect_reference  go to state 486


State 322

  586 array_function_dereference: array_function_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 533
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 323

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" . $@88 object_property $@89 method_or_not variable_properties

    $default  reduce using rule 566 ($@88)

    $@88  go to state 534


State 324

  597 reference_variable: reference_variable '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 535
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 325

  598 reference_variable: reference_variable '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 536
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 326

  601 compound_variable: '$' . '{' expr '}'
  613 simple_indirect_reference: simple_indirect_reference '$' .

    '{'  shift, and go to state 260

    $default  reduce using rule 613 (simple_indirect_reference)


State 327

  582 variable_without_objects: simple_indirect_reference reference_variable .
  593 base_variable: simple_indirect_reference reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    '('       reduce using rule 582 (variable_without_objects)
    $default  reduce using rule 593 (base_variable)


State 328

  423 expr_without_variable: function is_reference . @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 422 (@76)

    @76  go to state 478


State 329

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  655 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ')'                           shift, and go to state 537


State 330

  428 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . expr_without_variable
  429           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 538
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 539
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 331

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  415                      | '@' $@75 expr .

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 415 (expr_without_variable)


State 332

  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 540


State 333

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  448 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @80 function_call_parameter_list
  462 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 462 (class_name)
    $default                       reduce using rule 447 (@80)

    @80  go to state 429


State 334

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @81 function_call_parameter_list
  452              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@82 function_call_parameter_list
  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 483
    reference_variable         go to state 484
    compound_variable          go to state 123
    variable_name              go to state 485
    simple_indirect_reference  go to state 486


State 335

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@83 function_call_parameter_list
  456              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@84 function_call_parameter_list
  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 531
    reference_variable         go to state 484
    compound_variable          go to state 123
    variable_name              go to state 532
    simple_indirect_reference  go to state 486


State 336

  629 non_empty_array_pair_list: '&' w_variable .

    $default  reduce using rule 629 (non_empty_array_pair_list)


State 337

  564 w_variable: variable .

    $default  reduce using rule 564 (w_variable)


State 338

  624 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" . expr
  628                          | expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 542
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 543
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 339

  435 combined_scalar: '[' array_pair_list ']' .

    $default  reduce using rule 435 (combined_scalar)


State 340

  554 possible_comma: ',' .
  622 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" expr
  623                          | non_empty_array_pair_list ',' . expr
  626                          | non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  627                          | non_empty_array_pair_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 554 (possible_comma)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 545
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 341

  621 array_pair_list: non_empty_array_pair_list possible_comma .

    $default  reduce using rule 621 (array_pair_list)


State 342

  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 546


State 343

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  462 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 462 (class_name)


State 344

  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 547
    reference_variable         go to state 484
    compound_variable          go to state 123
    simple_indirect_reference  go to state 486


State 345

  339 new_expr: "new (T_NEW)" class_name_reference $@64 . ctor_arguments

    '('  shift, and go to state 469

    $default  reduce using rule 481 (ctor_arguments)

    function_call_parameter_list  go to state 548
    ctor_arguments                go to state 549


State 346

  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 550
    reference_variable         go to state 484
    compound_variable          go to state 123
    simple_indirect_reference  go to state 486


State 347

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" . $@86 object_property $@87 dynamic_class_name_variable_properties

    $default  reduce using rule 468 ($@86)

    $@86  go to state 551


State 348

  593 base_variable: simple_indirect_reference reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 593 (base_variable)


State 349

  476 exit_expr: '(' ')' .

    $default  reduce using rule 476 (exit_expr)


State 350

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' . $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 55 ($@7)

    $@7  go to state 552


State 351

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 . statement $@6 elseif_list else_single

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 553
    unticked_statement                 go to state 92
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 352

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  603 dim_offset: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 603 (dim_offset)


State 353

  432 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset . ']'

    ']'  shift, and go to state 554


State 354

  320 echo_expr_list: echo_expr_list ',' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 555
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 355

   80 unticked_statement: "echo (T_ECHO)" echo_expr_list ';' .

    $default  reduce using rule 80 (unticked_statement)


State 356

   63 unticked_statement: "do (T_DO)" $@11 statement . "while (T_WHILE)" $@12 parenthesis_expr ';'

    "while (T_WHILE)"  shift, and go to state 556


State 357

   60 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr . @10 while_statement

    $default  reduce using rule 59 (@10)

    @10  go to state 557


State 358

   67 unticked_statement: "for (T_FOR)" '(' for_expr . ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    ';'  shift, and go to state 558


State 359

  323 for_expr: non_empty_for_expr .
  325 non_empty_for_expr: non_empty_for_expr . ',' $@61 expr

    ','  shift, and go to state 559

    $default  reduce using rule 323 (for_expr)


State 360

  326 non_empty_for_expr: expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 326 (non_empty_for_expr)


State 361

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable . "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement
  560 expr: expr_without_variable .

    "as (T_AS)"  shift, and go to state 560

    $default  reduce using rule 560 (expr)


State 362

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable . "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319
    "as (T_AS)"            shift, and go to state 561

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    $default      reduce using rule 563 (r_variable)


State 363

   91 unticked_statement: "declare (T_DECLARE)" $@21 '(' . declare_list ')' declare_statement

    "identifier (T_STRING)"  shift, and go to state 562

    declare_list  go to state 563


State 364

   69 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 . switch_case_list

    ':'  shift, and go to state 564
    '{'  shift, and go to state 565

    switch_case_list  go to state 566


State 365

   71 unticked_statement: "break (T_BREAK)" expr ';' .

    $default  reduce using rule 71 (unticked_statement)


State 366

   73 unticked_statement: "continue (T_CONTINUE)" expr ';' .

    $default  reduce using rule 73 (unticked_statement)


State 367

   97 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $default  reduce using rule 97 (unticked_statement)


State 368

   40 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 582
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 369

   75 unticked_statement: "return (T_RETURN)" expr_without_variable ';' .

    $default  reduce using rule 75 (unticked_statement)


State 370

   76 unticked_statement: "return (T_RETURN)" variable ';' .

    $default  reduce using rule 76 (unticked_statement)


State 371

   95 unticked_statement: "try (T_TRY)" $@22 '{' . inner_statement_list '}' catch_statement $@23 finally_statement

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 586


State 372

   96 unticked_statement: "throw (T_THROW)" expr ';' .

    $default  reduce using rule 96 (unticked_statement)


State 373

   31 use_function_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   32                         | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 587


State 374

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   29 use_function_declaration: namespace_name .
   30                         | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 588
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 29 (use_function_declaration)


State 375

   17 top_statement: "use (T_USE)" "function (T_FUNCTION)" use_function_declarations . ';'
   27 use_function_declarations: use_function_declarations . ',' use_function_declaration

    ','  shift, and go to state 589
    ';'  shift, and go to state 590


State 376

   28 use_function_declarations: use_function_declaration .

    $default  reduce using rule 28 (use_function_declarations)


State 377

   37 use_const_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   38                      | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 591


State 378

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   35 use_const_declaration: namespace_name .
   36                      | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 592
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 35 (use_const_declaration)


State 379

   18 top_statement: "use (T_USE)" "const (T_CONST)" use_const_declarations . ';'
   33 use_const_declarations: use_const_declarations . ',' use_const_declaration

    ','  shift, and go to state 593
    ';'  shift, and go to state 594


State 380

   34 use_const_declarations: use_const_declaration .

    $default  reduce using rule 34 (use_const_declarations)


State 381

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   25 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   26                | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 595
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 25 (use_declaration)


State 382

   24 use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 596


State 383

   21 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 207

    namespace_name   go to state 208
    use_declaration  go to state 597


State 384

   16 top_statement: "use (T_USE)" use_declarations ';' .

    $default  reduce using rule 16 (top_statement)


State 385

  266 global_var: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 598
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 386

  265 global_var: '$' r_variable .

    $default  reduce using rule 265 (global_var)


State 387

  563 r_variable: variable .

    $default  reduce using rule 563 (r_variable)


State 388

  262 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  shift, and go to state 211
    '$'                      shift, and go to state 212

    global_var  go to state 599


State 389

   78 unticked_statement: "global (T_GLOBAL)" global_var_list ';' .

    $default  reduce using rule 78 (unticked_statement)


State 390

  270 static_var_list: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 600
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 391

  267 static_var_list: static_var_list ',' . "variable (T_VARIABLE)"
  268                | static_var_list ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 601


State 392

   79 unticked_statement: "static (T_STATIC)" static_var_list ';' .

    $default  reduce using rule 79 (unticked_statement)


State 393

  425 expr_without_variable: "static (T_STATIC)" function is_reference . @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 424 (@77)

    @77  go to state 602


State 394

   83 unticked_statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
  171 unset_variables: unset_variables . ',' unset_variable

    ','  shift, and go to state 603
    ')'  shift, and go to state 604


State 395

  170 unset_variables: unset_variable .

    $default  reduce using rule 170 (unset_variables)


State 396

  172 unset_variable: variable .

    $default  reduce using rule 172 (unset_variable)


State 397

  560 expr: expr_without_variable .
  662 isset_variable: expr_without_variable .

    ','       reduce using rule 662 (isset_variable)
    ')'       reduce using rule 662 (isset_variable)
    $default  reduce using rule 560 (expr)


State 398

  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .
  661 isset_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    ','           reduce using rule 661 (isset_variable)
    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    ')'           reduce using rule 661 (isset_variable)
    $default      reduce using rule 563 (r_variable)


State 399

  650 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  660 isset_variables: isset_variables . ',' $@96 isset_variable

    ','  shift, and go to state 605
    ')'  shift, and go to state 606


State 400

  658 isset_variables: isset_variable .

    $default  reduce using rule 658 (isset_variables)


State 401

  560 expr: expr_without_variable .
  652 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable . ')'

    ')'  shift, and go to state 607

    $default  reduce using rule 560 (expr)


State 402

  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .
  651 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable . ')'

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319
    ')'                    shift, and go to state 608

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    $default      reduce using rule 563 (r_variable)


State 403

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 609


State 404

  341 expr_without_variable: "list (T_LIST)" '(' $@65 . assignment_list ')' '=' expr

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "list (T_LIST)"            shift, and go to state 610
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    $default  reduce using rule 619 (assignment_list_element)

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 611
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    assignment_list                    go to state 612
    assignment_list_element            go to state 613


State 405

  434 combined_scalar: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 614


State 406

  640 encaps_var: "variable (T_VARIABLE)" '[' . $@95 encaps_var_offset ']'

    $default  reduce using rule 639 ($@95)

    $@95  go to state 615


State 407

  641 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 616


State 408

  637 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 637 (encaps_list)


State 409

  493 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 493 (common_scalar)


State 410

  633 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $default  reduce using rule 633 (encaps_list)


State 411

  635 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" tpl_encaps_var .

    $default  reduce using rule 635 (encaps_list)


State 412

  544 scalar: "variable name (T_STRING_VARNAME)" .
  643 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  shift, and go to state 617

    $default  reduce using rule 544 (scalar)


State 413

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  642 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 618


State 414

  644 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  shift, and go to state 619


State 415

  601 compound_variable: '$' . '{' expr '}'

    '{'  shift, and go to state 260


State 416

  583 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  663 class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 620


State 417

  645 encaps_var: '{' static_member . '}'

    '}'  shift, and go to state 621


State 418

  584 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  664 class_constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 622


State 419

  585 variable_class_name: reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 585 (variable_class_name)


State 420

  646 tpl_encaps_var: '{' class_constant . '}'

    '}'  shift, and go to state 623


State 421

  631 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 631 (encaps_list)


State 422

  549 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 549 (scalar)


State 423

  630 encaps_list: encaps_list encaps_var .

    $default  reduce using rule 630 (encaps_list)


State 424

  636 encaps_list: encaps_list tpl_encaps_var .

    $default  reduce using rule 636 (encaps_list)


State 425

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  542 general_constant: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 461 (class_name)
    '('                            reduce using rule 445 (@79)
    $default                       reduce using rule 542 (general_constant)

    @79  go to state 624


State 426

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 625


State 427

   11 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $default  reduce using rule 11 (top_statement)


State 428

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' . $@2 top_statement_list '}'

    $default  reduce using rule 12 ($@2)

    $@2  go to state 626


State 429

  448 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @80 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 627


State 430

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr . "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 628


State 431

  119 tpl_inner_tpl_attr_name: "identifier (T_STRING)" .

    $default  reduce using rule 119 (tpl_inner_tpl_attr_name)


State 432

  123 tpl_inner_tpl_attr_anony: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 123 (tpl_inner_tpl_attr_anony)


State 433

  120 tpl_inner_tpl_attr_name: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .
  485 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    '='       reduce using rule 120 (tpl_inner_tpl_attr_name)
    $default  reduce using rule 485 (common_scalar)


State 434

  125 tpl_inner_tpl_attr_anony: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 629


State 435

  493 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  494              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"

    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 630
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 228


State 436

  124 tpl_inner_tpl_attr_anony: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 258
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231

    encaps_list     go to state 631
    encaps_var      go to state 233
    tpl_encaps_var  go to state 234


State 437

  127 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_name . '=' $@32 expr

    '='  shift, and go to state 632


State 438

  130 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_anony .

    $default  reduce using rule 130 (tpl_inner_tpl_attr_list)


State 439

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list . tpl_inner_tpl_attr_name '=' $@33 expr
  131                        | tpl_inner_tpl_attr_list . tpl_inner_tpl_attr_anony
  142 tpl_statement: "tpl left delim (T_START_TPL)" "identifier (T_STRING)" tpl_inner_tpl_attr_list . "tpl right delim (T_END_TPL)"

    "integer number (T_LNUMBER)"                                shift, and go to state 31
    "floating-point number (T_DNUMBER)"                         shift, and go to state 32
    "identifier (T_STRING)"                                     shift, and go to state 431
    "variable (T_VARIABLE)"                                     shift, and go to state 35
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 432
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"                shift, and go to state 433
    "array (T_ARRAY)"                                           shift, and go to state 434
    "__TRAIT__ (T_TRAIT_C)"                                     shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                                   shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                                   shift, and go to state 70
    "__LINE__ (T_LINE)"                                         shift, and go to state 71
    "__FILE__ (T_FILE)"                                         shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"                           shift, and go to state 435
    "__NAMESPACE__ (T_NS_C)"                                    shift, and go to state 75
    "__DIR__ (T_DIR)"                                           shift, and go to state 76
    "tpl right delim (T_END_TPL)"                               shift, and go to state 633
    '"'                                                         shift, and go to state 436
    '$'                                                         shift, and go to state 86

    tpl_inner_tpl_attr_name    go to state 634
    tpl_inner_tpl_attr_anony   go to state 635
    common_scalar              go to state 440
    tpl_base_variable          go to state 441
    reference_variable         go to state 442
    compound_variable          go to state 123
    simple_indirect_reference  go to state 443


State 440

  122 tpl_inner_tpl_attr_anony: common_scalar .

    $default  reduce using rule 122 (tpl_inner_tpl_attr_anony)


State 441

  121 tpl_inner_tpl_attr_anony: tpl_base_variable .

    $default  reduce using rule 121 (tpl_inner_tpl_attr_anony)


State 442

  595 tpl_base_variable: reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 595 (tpl_base_variable)


State 443

  596 tpl_base_variable: simple_indirect_reference . reference_variable
  613 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 326

    reference_variable  go to state 636
    compound_variable   go to state 123


State 444

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '|' . "identifier (T_STRING)" $@29 tpl_modifier_param_list

    "identifier (T_STRING)"  shift, and go to state 637


State 445

  201 foreach_variable: '&' . variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 638
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 446

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' . for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' . foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 445
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    foreach_variable                   go to state 639
    for_expr                           go to state 640
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 641
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 447

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable . foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 643


State 448

  200 foreach_variable: variable .

    $default  reduce using rule 200 (foreach_variable)


State 449

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' . expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  399 expr_without_variable: '(' . new_expr ')' @71 instance_call
  561 parenthesis_expr: '(' . expr ')'
  562                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 254
    expr_without_variable              go to state 101
    yield_expr                         go to state 255
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 644
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 450

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr . "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    "as (T_AS)"                   shift, and go to state 645


State 451

  115 tpl_modifier_list: tpl_modifier_list '|' . "identifier (T_STRING)" $@30 tpl_modifier_param_list

    "identifier (T_STRING)"  shift, and go to state 646


State 452

  135 tpl_statement: "tpl left delim (T_START_TPL)" tpl_modifier_list "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 135 (tpl_statement)


State 453

  136 tpl_statement: "tpl left delim (T_START_TPL)" expr_without_variable "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 136 (tpl_statement)


State 454

  137 tpl_statement: "tpl left delim (T_START_TPL)" expr_without_variable ';' . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 647


State 455

  111 tpl_modifier_list: r_variable ';' .

    $default  reduce using rule 111 (tpl_modifier_list)


State 456

  138 tpl_statement: "tpl left delim with script (T_START_TPL_WITH_SCRIPT)" inner_statement_list "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 138 (tpl_statement)


State 457

   42 inner_statement_list: inner_statement_list $@4 . inner_statement

    "require_once (T_REQUIRE_ONCE)"                         shift, and go to state 5
    "require (T_REQUIRE)"                                   shift, and go to state 6
    "eval (T_EVAL)"                                         shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"                         shift, and go to state 8
    "include (T_INCLUDE)"                                   shift, and go to state 9
    "print (T_PRINT)"                                       shift, and go to state 10
    "yield (T_YIELD)"                                       shift, and go to state 11
    '+'                                                     shift, and go to state 12
    '-'                                                     shift, and go to state 13
    '!'                                                     shift, and go to state 14
    '~'                                                     shift, and go to state 15
    '@'                                                     shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                                shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                                  shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                              shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                                shift, and go to state 20
    "(string) (T_STRING_CAST)"                              shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                              shift, and go to state 22
    "(int) (T_INT_CAST)"                                    shift, and go to state 23
    "-- (T_DEC)"                                            shift, and go to state 24
    "++ (T_INC)"                                            shift, and go to state 25
    '['                                                     shift, and go to state 26
    "clone (T_CLONE)"                                       shift, and go to state 27
    "new (T_NEW)"                                           shift, and go to state 28
    "exit (T_EXIT)"                                         shift, and go to state 29
    "if (T_IF)"                                             shift, and go to state 30
    "integer number (T_LNUMBER)"                            shift, and go to state 31
    "floating-point number (T_DNUMBER)"                     shift, and go to state 32
    "identifier (T_STRING)"                                 shift, and go to state 33
    "variable name (T_STRING_VARNAME)"                      shift, and go to state 34
    "variable (T_VARIABLE)"                                 shift, and go to state 35
    T_INLINE_HTML                                           shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"            shift, and go to state 37
    "echo (T_ECHO)"                                         shift, and go to state 38
    "do (T_DO)"                                             shift, and go to state 39
    "while (T_WHILE)"                                       shift, and go to state 40
    "for (T_FOR)"                                           shift, and go to state 41
    "foreach (T_FOREACH)"                                   shift, and go to state 42
    "declare (T_DECLARE)"                                   shift, and go to state 43
    "switch (T_SWITCH)"                                     shift, and go to state 44
    "break (T_BREAK)"                                       shift, and go to state 45
    "continue (T_CONTINUE)"                                 shift, and go to state 46
    "goto (T_GOTO)"                                         shift, and go to state 47
    "function (T_FUNCTION)"                                 shift, and go to state 48
    "return (T_RETURN)"                                     shift, and go to state 50
    "try (T_TRY)"                                           shift, and go to state 51
    "throw (T_THROW)"                                       shift, and go to state 52
    "global (T_GLOBAL)"                                     shift, and go to state 54
    "final (T_FINAL)"                                       shift, and go to state 55
    "abstract (T_ABSTRACT)"                                 shift, and go to state 56
    "static (T_STATIC)"                                     shift, and go to state 57
    "unset (T_UNSET)"                                       shift, and go to state 58
    "isset (T_ISSET)"                                       shift, and go to state 59
    "empty (T_EMPTY)"                                       shift, and go to state 60
    "__halt_compiler (T_HALT_COMPILER)"                     shift, and go to state 648
    "class (T_CLASS)"                                       shift, and go to state 62
    "trait (T_TRAIT)"                                       shift, and go to state 63
    "interface (T_INTERFACE)"                               shift, and go to state 64
    "list (T_LIST)"                                         shift, and go to state 65
    "array (T_ARRAY)"                                       shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                                 shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                                 shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                               shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                               shift, and go to state 70
    "__LINE__ (T_LINE)"                                     shift, and go to state 71
    "__FILE__ (T_FILE)"                                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"                       shift, and go to state 73
    "namespace (T_NAMESPACE)"                               shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                                shift, and go to state 75
    "__DIR__ (T_DIR)"                                       shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                                   shift, and go to state 77
    "tpl left delim (T_START_TPL)"                          shift, and go to state 78
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81
    '('                                                     shift, and go to state 82
    ';'                                                     shift, and go to state 83
    '{'                                                     shift, and go to state 84
    '"'                                                     shift, and go to state 85
    '$'                                                     shift, and go to state 86
    '`'                                                     shift, and go to state 87

    namespace_name                           go to state 88
    inner_statement                          go to state 649
    statement                                go to state 650
    unticked_statement                       go to state 92
    tpl_statement                            go to state 651
    function_declaration_statement           go to state 652
    class_declaration_statement              go to state 653
    unticked_function_declaration_statement  go to state 96
    unticked_class_declaration_statement     go to state 97
    class_entry_type                         go to state 98
    interface_entry                          go to state 99
    new_expr                                 go to state 100
    expr_without_variable                    go to state 101
    yield_expr                               go to state 102
    combined_scalar_offset                   go to state 103
    combined_scalar                          go to state 104
    function                                 go to state 105
    function_call                            go to state 106
    class_name                               go to state 107
    common_scalar                            go to state 108
    general_constant                         go to state 109
    scalar                                   go to state 110
    expr                                     go to state 111
    parenthesis_expr                         go to state 112
    r_variable                               go to state 113
    rw_variable                              go to state 114
    variable                                 go to state 115
    variable_without_objects                 go to state 116
    static_member                            go to state 117
    variable_class_name                      go to state 118
    array_function_dereference               go to state 119
    base_variable_with_function_calls        go to state 120
    base_variable                            go to state 121
    reference_variable                       go to state 122
    compound_variable                        go to state 123
    simple_indirect_reference                go to state 124
    internal_functions_in_yacc               go to state 125
    class_constant                           go to state 126
    class_name_scalar                        go to state 127


State 458

  141 tpl_statement: "{t (T_START_TPL_TRANSLATE)" tpl_encaps_list "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 141 (tpl_statement)


State 459

  140 tpl_statement: "{include (T_TPL_INCLUDE)" "attr file (T_ATTR_FILE)" '=' . expr "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 654
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 460

  139 tpl_statement: "{include (T_TPL_INCLUDE)" expr "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 139 (tpl_statement)


State 461

  399 expr_without_variable: '(' new_expr ')' . @71 instance_call

    $default  reduce using rule 398 (@71)

    @71  go to state 655


State 462

  562 parenthesis_expr: '(' yield_expr ')' .

    $default  reduce using rule 562 (parenthesis_expr)


State 463

  561 parenthesis_expr: '(' expr ')' .

    $default  reduce using rule 561 (parenthesis_expr)


State 464

   51 unticked_statement: '{' inner_statement_list '}' .

    $default  reduce using rule 51 (unticked_statement)


State 465

  548 scalar: '"' encaps_list '"' .

    $default  reduce using rule 548 (scalar)


State 466

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  601 compound_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 656


State 467

  419 expr_without_variable: '`' backticks_expr '`' .

    $default  reduce using rule 419 (expr_without_variable)


State 468

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 6 (namespace_name)


State 469

  253 function_call_parameter_list: '(' . ')'
  254                             | '(' . non_empty_function_call_parameter_list ')'
  255                             | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '&'                                           shift, and go to state 657
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    "... (T_ELLIPSIS)"                            shift, and go to state 658
    '('                                           shift, and go to state 82
    ')'                                           shift, and go to state 659
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                          go to state 88
    non_empty_function_call_parameter_list  go to state 660
    function_call_parameter                 go to state 661
    new_expr                                go to state 100
    expr_without_variable                   go to state 662
    yield_expr                              go to state 663
    combined_scalar_offset                  go to state 103
    combined_scalar                         go to state 104
    function                                go to state 132
    function_call                           go to state 106
    class_name                              go to state 107
    common_scalar                           go to state 108
    general_constant                        go to state 109
    scalar                                  go to state 110
    expr                                    go to state 201
    parenthesis_expr                        go to state 112
    r_variable                              go to state 113
    rw_variable                             go to state 114
    variable                                go to state 664
    variable_without_objects                go to state 116
    static_member                           go to state 117
    variable_class_name                     go to state 118
    array_function_dereference              go to state 119
    base_variable_with_function_calls       go to state 120
    base_variable                           go to state 121
    reference_variable                      go to state 122
    compound_variable                       go to state 123
    simple_indirect_reference               go to state 124
    internal_functions_in_yacc              go to state 125
    class_constant                          go to state 126
    class_name_scalar                       go to state 127


State 470

  444 function_call: namespace_name @78 function_call_parameter_list .

    $default  reduce using rule 444 (function_call)


State 471

   39 constant_declaration: constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 665


State 472

  190 extends_from: "extends (T_EXTENDS)" . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 669


State 473

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from . $@51 implements_list '{' class_statement_list '}'

    $default  reduce using rule 181 ($@51)

    $@51  go to state 670


State 474

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 . interface_extends_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 671

    $default  reduce using rule 192 (interface_extends_list)

    interface_extends_list  go to state 672


State 475

  431 combined_scalar_offset: combined_scalar_offset '[' dim_offset . ']'

    ']'  shift, and go to state 673


State 476

  430 combined_scalar_offset: combined_scalar '[' dim_offset . ']'

    ']'  shift, and go to state 674


State 477

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" . $@50 '(' parameter_list ')' '{' inner_statement_list '}'

    $default  reduce using rule 179 ($@50)

    $@50  go to state 675


State 478

  423 expr_without_variable: function is_reference @76 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 676


State 479

  588 array_function_dereference: function_call $@92 '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 677
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 480

  610 variable_name: "identifier (T_STRING)" .
  663 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 610 (variable_name)
    $default  reduce using rule 663 (class_constant)


State 481

  666 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $default  reduce using rule 666 (class_name_scalar)


State 482

  611 variable_name: '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 678
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 483

  452 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@82 function_call_parameter_list
  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       reduce using rule 451 ($@82)
    $default  reduce using rule 583 (static_member)

    $@82  go to state 679


State 484

  581 variable_without_objects: reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 581 (variable_without_objects)


State 485

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . @81 function_call_parameter_list

    $default  reduce using rule 449 (@81)

    @81  go to state 680


State 486

  582 variable_without_objects: simple_indirect_reference . reference_variable
  613 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 326

    reference_variable  go to state 681
    compound_variable   go to state 123


State 487

  433 combined_scalar_offset: general_constant '[' dim_offset . ']'

    ']'  shift, and go to state 682


State 488

  368 expr_without_variable: expr "or (T_LOGICAL_OR)" $@69 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 683
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 489

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  371                      | expr "xor (T_LOGICAL_XOR)" expr .
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 371 (expr_without_variable)


State 490

  370 expr_without_variable: expr "and (T_LOGICAL_AND)" $@70 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 684
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 491

  404 expr_without_variable: expr '?' ':' . $@74 expr

    $default  reduce using rule 403 ($@74)

    $@74  go to state 685


State 492

  402 expr_without_variable: expr '?' $@72 . expr ':' $@73 expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 686
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 493

  364 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@67 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 687
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 494

  366 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@68 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 688
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 495

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  373                      | expr '^' expr .
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 373 (expr_without_variable)


State 496

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  372                      | expr '&' expr .
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 372 (expr_without_variable)


State 497

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  388                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 388 (expr_without_variable)


State 498

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  387                      | expr "=== (T_IS_IDENTICAL)" expr .
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 387 (expr_without_variable)


State 499

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  390                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 390 (expr_without_variable)


State 500

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  389                      | expr "== (T_IS_EQUAL)" expr .
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 389 (expr_without_variable)


State 501

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  391                      | expr '<' expr .
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    ">> (T_SR)"                  shift, and go to state 294
    "<< (T_SL)"                  shift, and go to state 295
    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 391 (expr_without_variable)


State 502

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  393                      | expr '>' expr .
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    ">> (T_SR)"                  shift, and go to state 294
    "<< (T_SL)"                  shift, and go to state 295
    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 393 (expr_without_variable)


State 503

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  394                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    ">> (T_SR)"                  shift, and go to state 294
    "<< (T_SL)"                  shift, and go to state 295
    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 394 (expr_without_variable)


State 504

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  392                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    ">> (T_SR)"                  shift, and go to state 294
    "<< (T_SL)"                  shift, and go to state 295
    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 392 (expr_without_variable)


State 505

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  382                      | expr ">> (T_SR)" expr .
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 382 (expr_without_variable)


State 506

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  381                      | expr "<< (T_SL)" expr .
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '+'                          shift, and go to state 296
    '-'                          shift, and go to state 297
    '.'                          shift, and go to state 298
    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 381 (expr_without_variable)


State 507

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  375                      | expr '+' expr .
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 375 (expr_without_variable)


State 508

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  376                      | expr '-' expr .
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 376 (expr_without_variable)


State 509

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  374                      | expr '.' expr .
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '*'                          shift, and go to state 299
    '/'                          shift, and go to state 300
    '%'                          shift, and go to state 301
    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 374 (expr_without_variable)


State 510

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  377                      | expr '*' expr .
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 377 (expr_without_variable)


State 511

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  379                      | expr '/' expr .
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 379 (expr_without_variable)


State 512

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  380                      | expr '%' expr .
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 302
    "** (T_POW)"                 shift, and go to state 303

    $default  reduce using rule 380 (expr_without_variable)


State 513

  395 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $default  reduce using rule 395 (expr_without_variable)


State 514

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  378                      | expr "** (T_POW)" expr .
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "** (T_POW)"  shift, and go to state 303

    $default  reduce using rule 378 (expr_without_variable)


State 515

  343 expr_without_variable: variable '=' '&' . variable
  345                      | variable '=' '&' . "new (T_NEW)" class_name_reference $@66 ctor_arguments

    "new (T_NEW)"              shift, and go to state 689
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 690
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 516

  342 expr_without_variable: variable '=' expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 342 (expr_without_variable)


State 517

  350 expr_without_variable: variable "**= (T_POW_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 350 (expr_without_variable)


State 518

  358 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 358 (expr_without_variable)


State 519

  357 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 357 (expr_without_variable)


State 520

  356 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 356 (expr_without_variable)


State 521

  355 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 355 (expr_without_variable)


State 522

  354 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 354 (expr_without_variable)


State 523

  353 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 353 (expr_without_variable)


State 524

  352 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 352 (expr_without_variable)


State 525

  351 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 351 (expr_without_variable)


State 526

  349 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 349 (expr_without_variable)


State 527

  348 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 348 (expr_without_variable)


State 528

  347 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 347 (expr_without_variable)


State 529

  458 function_call: variable_without_objects $@85 function_call_parameter_list .

    $default  reduce using rule 458 (function_call)


State 530

  610 variable_name: "identifier (T_STRING)" .
  664 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 610 (variable_name)
    $default  reduce using rule 664 (class_constant)


State 531

  456 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@84 function_call_parameter_list
  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       reduce using rule 455 ($@84)
    $default  reduce using rule 584 (static_member)

    $@84  go to state 691


State 532

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . $@83 function_call_parameter_list

    $default  reduce using rule 453 ($@83)

    $@83  go to state 692


State 533

  586 array_function_dereference: array_function_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 693


State 534

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 . object_property $@89 method_or_not variable_properties

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 694
    reference_variable         go to state 484
    compound_variable          go to state 123
    object_property            go to state 695
    object_dim_list            go to state 696
    variable_name              go to state 697
    simple_indirect_reference  go to state 486


State 535

  597 reference_variable: reference_variable '[' dim_offset . ']'

    ']'  shift, and go to state 698


State 536

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  598 reference_variable: reference_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 699


State 537

  655 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $default  reduce using rule 655 (internal_functions_in_yacc)


State 538

  428 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable .
  560 expr: expr_without_variable .

    ')'       reduce using rule 428 (yield_expr)
    ';'       reduce using rule 428 (yield_expr)
    $default  reduce using rule 560 (expr)


State 539

  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  429 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable .
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    ')'           reduce using rule 429 (yield_expr)
    ';'           reduce using rule 429 (yield_expr)
    $default      reduce using rule 563 (r_variable)


State 540

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @79 function_call_parameter_list
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 461 (class_name)
    $default                       reduce using rule 445 (@79)

    @79  go to state 624


State 541

  610 variable_name: "identifier (T_STRING)" .

    $default  reduce using rule 610 (variable_name)


State 542

  628 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    w_variable                         go to state 700
    variable                           go to state 337
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 543

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  624 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 624 (non_empty_array_pair_list)


State 544

  627 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    w_variable                         go to state 701
    variable                           go to state 337
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 545

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  622 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" expr
  623                          | non_empty_array_pair_list ',' expr .
  626                          | non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 702

    $default  reduce using rule 623 (non_empty_array_pair_list)


State 546

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 461 (class_name)


State 547

  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 583 (static_member)


State 548

  482 ctor_arguments: function_call_parameter_list .

    $default  reduce using rule 482 (ctor_arguments)


State 549

  339 new_expr: "new (T_NEW)" class_name_reference $@64 ctor_arguments .

    $default  reduce using rule 339 (new_expr)


State 550

  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 584 (static_member)


State 551

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@86 . object_property $@87 dynamic_class_name_variable_properties

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 694
    reference_variable         go to state 484
    compound_variable          go to state 123
    object_property            go to state 703
    object_dim_list            go to state 696
    variable_name              go to state 697
    simple_indirect_reference  go to state 486


State 552

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 . inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 704


State 553

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement . $@6 elseif_list else_single

    $default  reduce using rule 53 ($@6)

    $@6  go to state 705


State 554

  432 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']' .

    $default  reduce using rule 432 (combined_scalar_offset)


State 555

  320 echo_expr_list: echo_expr_list ',' expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 320 (echo_expr_list)


State 556

   63 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" . $@12 parenthesis_expr ';'

    $default  reduce using rule 62 ($@12)

    $@12  go to state 706


State 557

   60 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 . while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 707
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 708
    unticked_statement                 go to state 92
    while_statement                    go to state 709
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 558

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' . $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    $default  reduce using rule 64 ($@13)

    $@13  go to state 710


State 559

  325 non_empty_for_expr: non_empty_for_expr ',' . $@61 expr

    $default  reduce using rule 324 ($@61)

    $@61  go to state 711


State 560

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" . $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    $default  reduce using rule 87 ($@19)

    $@19  go to state 712


State 561

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" . $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    $default  reduce using rule 84 ($@17)

    $@17  go to state 713


State 562

  208 declare_list: "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 714


State 563

   91 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list . ')' declare_statement
  209 declare_list: declare_list . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 715
    ')'  shift, and go to state 716


State 564

  212 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  213                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  shift, and go to state 717

    $default  reduce using rule 214 (case_list)

    case_list  go to state 718


State 565

  210 switch_case_list: '{' . case_list '}'
  211                 | '{' . ';' case_list '}'

    ';'  shift, and go to state 719

    $default  reduce using rule 214 (case_list)

    case_list  go to state 720


State 566

   69 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list .

    $default  reduce using rule 69 (unticked_statement)


State 567

  537 static_operation: '+' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 721
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 568

  538 static_operation: '-' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 722
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 569

  514 static_operation: '!' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 723
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 570

  515 static_operation: '~' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 724
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 571

  503 static_scalar_value: '[' . static_array_pair_list ']'

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    $default  reduce using rule 551 (static_array_pair_list)

    namespace_name                    go to state 578
    class_name                        go to state 579
    common_scalar                     go to state 580
    static_class_constant             go to state 581
    static_scalar_value               go to state 725
    static_operation                  go to state 584
    static_array_pair_list            go to state 726
    non_empty_static_array_pair_list  go to state 727
    static_class_name_scalar          go to state 585


State 572

  485 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 485 (common_scalar)


State 573

  502 static_scalar_value: "array (T_ARRAY)" . '(' static_array_pair_list ')'

    '('  shift, and go to state 728


State 574

  505 static_scalar_value: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 505 (static_scalar_value)


State 575

  461 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  500 static_scalar_value: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 729


State 576

  462 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  501 static_scalar_value: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 730


State 577

  539 static_operation: '(' . static_scalar_value ')'

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 731
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 578

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  460 class_name: namespace_name .
  499 static_scalar_value: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 460 (class_name)
    $default                       reduce using rule 499 (static_scalar_value)


State 579

  495 static_class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  665 static_class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 732


State 580

  497 static_scalar_value: common_scalar .

    $default  reduce using rule 497 (static_scalar_value)


State 581

  504 static_scalar_value: static_class_constant .

    $default  reduce using rule 504 (static_scalar_value)


State 582

   40 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 40 (constant_declaration)


State 583

  496 static_scalar: static_scalar_value .
  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 496 (static_scalar)


State 584

  506 static_scalar_value: static_operation .

    $default  reduce using rule 506 (static_scalar_value)


State 585

  498 static_scalar_value: static_class_name_scalar .

    $default  reduce using rule 498 (static_scalar_value)


State 586

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list . '}' catch_statement $@23 finally_statement

    '}'  shift, and go to state 760

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 587

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   31 use_function_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   32                         | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 761
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 31 (use_function_declaration)


State 588

   30 use_function_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 762


State 589

   27 use_function_declarations: use_function_declarations ',' . use_function_declaration

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 373

    namespace_name            go to state 374
    use_function_declaration  go to state 763


State 590

   17 top_statement: "use (T_USE)" "function (T_FUNCTION)" use_function_declarations ';' .

    $default  reduce using rule 17 (top_statement)


State 591

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   37 use_const_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   38                      | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 764
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 37 (use_const_declaration)


State 592

   36 use_const_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 765


State 593

   33 use_const_declarations: use_const_declarations ',' . use_const_declaration

    "identifier (T_STRING)"  shift, and go to state 129
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 377

    namespace_name         go to state 378
    use_const_declaration  go to state 766


State 594

   18 top_statement: "use (T_USE)" "const (T_CONST)" use_const_declarations ';' .

    $default  reduce using rule 18 (top_statement)


State 595

   26 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 767


State 596

   24 use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 24 (use_declaration)


State 597

   21 use_declarations: use_declarations ',' use_declaration .

    $default  reduce using rule 21 (use_declarations)


State 598

  266 global_var: '$' '{' expr . '}'
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 768


State 599

  262 global_var_list: global_var_list ',' global_var .

    $default  reduce using rule 262 (global_var_list)


State 600

  270 static_var_list: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 270 (static_var_list)


State 601

  267 static_var_list: static_var_list ',' "variable (T_VARIABLE)" .
  268                | static_var_list ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 769

    $default  reduce using rule 267 (static_var_list)


State 602

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 770


State 603

  171 unset_variables: unset_variables ',' . unset_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    unset_variable                     go to state 771
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 396
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 604

   83 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  shift, and go to state 772


State 605

  660 isset_variables: isset_variables ',' . $@96 isset_variable

    $default  reduce using rule 659 ($@96)

    $@96  go to state 773


State 606

  650 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $default  reduce using rule 650 (internal_functions_in_yacc)


State 607

  652 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable ')' .

    $default  reduce using rule 652 (internal_functions_in_yacc)


State 608

  651 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable ')' .

    $default  reduce using rule 651 (internal_functions_in_yacc)


State 609

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 10 (top_statement)


State 610

  618 assignment_list_element: "list (T_LIST)" . '(' $@94 assignment_list ')'

    '('  shift, and go to state 774


State 611

  616 assignment_list_element: variable .

    $default  reduce using rule 616 (assignment_list_element)


State 612

  341 expr_without_variable: "list (T_LIST)" '(' $@65 assignment_list . ')' '=' expr
  614 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 775
    ')'  shift, and go to state 776


State 613

  615 assignment_list: assignment_list_element .

    $default  reduce using rule 615 (assignment_list)


State 614

  434 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 434 (combined_scalar)


State 615

  640 encaps_var: "variable (T_VARIABLE)" '[' $@95 . encaps_var_offset ']'

    "identifier (T_STRING)"  shift, and go to state 777
    "variable (T_VARIABLE)"  shift, and go to state 778
    "number (T_NUM_STRING)"  shift, and go to state 779

    encaps_var_offset  go to state 780


State 616

  641 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 641 (encaps_var)


State 617

  643 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 781
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 618

  642 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $default  reduce using rule 642 (encaps_var)


State 619

  644 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $default  reduce using rule 644 (encaps_var)


State 620

  583 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  663 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 782
    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 547
    reference_variable         go to state 484
    compound_variable          go to state 123
    simple_indirect_reference  go to state 486


State 621

  645 encaps_var: '{' static_member '}' .

    $default  reduce using rule 645 (encaps_var)


State 622

  584 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  664 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 783
    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 550
    reference_variable         go to state 484
    compound_variable          go to state 123
    simple_indirect_reference  go to state 486


State 623

  646 tpl_encaps_var: '{' class_constant '}' .

    $default  reduce using rule 646 (tpl_encaps_var)


State 624

  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @79 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 784


State 625

    3 top_statement_list: top_statement_list . $@1 top_statement
   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list . '}'

    '}'  shift, and go to state 785

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 626

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 786


State 627

  448 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @80 function_call_parameter_list .

    $default  reduce using rule 448 (function_call)


State 628

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" . $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif

    $default  reduce using rule 150 ($@39)

    $@39  go to state 787


State 629

  125 tpl_inner_tpl_attr_anony: "array (T_ARRAY)" '(' . array_pair_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 163
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 620 (array_pair_list)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 164
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    array_pair_list                    go to state 788
    non_empty_array_pair_list          go to state 166
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 630

  493 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"

    "heredoc end (T_END_HEREDOC)"  shift, and go to state 409


State 631

  124 tpl_inner_tpl_attr_anony: '"' encaps_list . '"'
  630 encaps_list: encaps_list . encaps_var
  631            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  636            | encaps_list . tpl_encaps_var

    "variable (T_VARIABLE)"                                     shift, and go to state 226
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 421
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 229
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 230
    '{'                                                         shift, and go to state 231
    '"'                                                         shift, and go to state 789

    encaps_var      go to state 423
    tpl_encaps_var  go to state 424


State 632

  127 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_name '=' . $@32 expr

    $default  reduce using rule 126 ($@32)

    $@32  go to state 790


State 633

  142 tpl_statement: "tpl left delim (T_START_TPL)" "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 142 (tpl_statement)


State 634

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_name . '=' $@33 expr

    '='  shift, and go to state 791


State 635

  131 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_anony .

    $default  reduce using rule 131 (tpl_inner_tpl_attr_list)


State 636

  596 tpl_base_variable: simple_indirect_reference reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 596 (tpl_base_variable)


State 637

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '|' "identifier (T_STRING)" . $@29 tpl_modifier_param_list

    $default  reduce using rule 112 ($@29)

    $@29  go to state 792


State 638

  201 foreach_variable: '&' variable .

    $default  reduce using rule 201 (foreach_variable)


State 639

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable . foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 793


State 640

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr . ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    ';'  shift, and go to state 794


State 641

  200 foreach_variable: variable .
  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    "-- (T_DEC)"           reduce using rule 565 (rw_variable)
    "++ (T_INC)"           reduce using rule 565 (rw_variable)
    "=> (T_DOUBLE_ARROW)"  reduce using rule 200 (foreach_variable)
    "in (T_IN)"            reduce using rule 200 (foreach_variable)
    $default               reduce using rule 563 (r_variable)


State 642

  199 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" . foreach_variable

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 795
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 643

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg . "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "in (T_IN)"  shift, and go to state 796


State 644

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr . "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  561 parenthesis_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    "as (T_AS)"                   shift, and go to state 797
    ')'                           shift, and go to state 463


State 645

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" . foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 798
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 646

  115 tpl_modifier_list: tpl_modifier_list '|' "identifier (T_STRING)" . $@30 tpl_modifier_param_list

    $default  reduce using rule 114 ($@30)

    $@30  go to state 799


State 647

  137 tpl_statement: "tpl left delim (T_START_TPL)" expr_without_variable ';' "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 137 (tpl_statement)


State 648

   48 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 800


State 649

   42 inner_statement_list: inner_statement_list $@4 inner_statement .

    $default  reduce using rule 42 (inner_statement_list)


State 650

   44 inner_statement: statement .

    $default  reduce using rule 44 (inner_statement)


State 651

   45 inner_statement: tpl_statement .

    $default  reduce using rule 45 (inner_statement)


State 652

   46 inner_statement: function_declaration_statement .

    $default  reduce using rule 46 (inner_statement)


State 653

   47 inner_statement: class_declaration_statement .

    $default  reduce using rule 47 (inner_statement)


State 654

  140 tpl_statement: "{include (T_TPL_INCLUDE)" "attr file (T_ATTR_FILE)" '=' expr . "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 801


State 655

  399 expr_without_variable: '(' new_expr ')' @71 . instance_call

    '['                       reduce using rule 336 ($@63)
    "-> (T_OBJECT_OPERATOR)"  reduce using rule 336 ($@63)
    $default                  reduce using rule 335 (instance_call)

    instance_call  go to state 802
    $@63           go to state 803


State 656

  601 compound_variable: '$' '{' expr '}' .

    $default  reduce using rule 601 (compound_variable)


State 657

  260 function_call_parameter: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    w_variable                         go to state 804
    variable                           go to state 337
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 658

  261 function_call_parameter: "... (T_ELLIPSIS)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 805
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 659

  253 function_call_parameter_list: '(' ')' .

    $default  reduce using rule 253 (function_call_parameter_list)


State 660

  254 function_call_parameter_list: '(' non_empty_function_call_parameter_list . ')'
  257 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' function_call_parameter

    ','  shift, and go to state 806
    ')'  shift, and go to state 807


State 661

  256 non_empty_function_call_parameter_list: function_call_parameter .

    $default  reduce using rule 256 (non_empty_function_call_parameter_list)


State 662

  258 function_call_parameter: expr_without_variable .
  560 expr: expr_without_variable .

    ','       reduce using rule 258 (function_call_parameter)
    ')'       reduce using rule 258 (function_call_parameter)
    $default  reduce using rule 560 (expr)


State 663

  255 function_call_parameter_list: '(' yield_expr . ')'

    ')'  shift, and go to state 808


State 664

  259 function_call_parameter: variable .
  342 expr_without_variable: variable . '=' expr
  343                      | variable . '=' '&' variable
  345                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments
  347                      | variable . "+= (T_PLUS_EQUAL)" expr
  348                      | variable . "-= (T_MINUS_EQUAL)" expr
  349                      | variable . "*= (T_MUL_EQUAL)" expr
  350                      | variable . "**= (T_POW_EQUAL)" expr
  351                      | variable . "/= (T_DIV_EQUAL)" expr
  352                      | variable . ".= (T_CONCAT_EQUAL)" expr
  353                      | variable . "%= (T_MOD_EQUAL)" expr
  354                      | variable . "&= (T_AND_EQUAL)" expr
  355                      | variable . "|= (T_OR_EQUAL)" expr
  356                      | variable . "^= (T_XOR_EQUAL)" expr
  357                      | variable . "<<= (T_SL_EQUAL)" expr
  358                      | variable . ">>= (T_SR_EQUAL)" expr
  563 r_variable: variable .
  565 rw_variable: variable .

    '='                    shift, and go to state 307
    "**= (T_POW_EQUAL)"    shift, and go to state 308
    ">>= (T_SR_EQUAL)"     shift, and go to state 309
    "<<= (T_SL_EQUAL)"     shift, and go to state 310
    "^= (T_XOR_EQUAL)"     shift, and go to state 311
    "|= (T_OR_EQUAL)"      shift, and go to state 312
    "&= (T_AND_EQUAL)"     shift, and go to state 313
    "%= (T_MOD_EQUAL)"     shift, and go to state 314
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 315
    "/= (T_DIV_EQUAL)"     shift, and go to state 316
    "*= (T_MUL_EQUAL)"     shift, and go to state 317
    "-= (T_MINUS_EQUAL)"   shift, and go to state 318
    "+= (T_PLUS_EQUAL)"    shift, and go to state 319

    ','           reduce using rule 259 (function_call_parameter)
    "-- (T_DEC)"  reduce using rule 565 (rw_variable)
    "++ (T_INC)"  reduce using rule 565 (rw_variable)
    ')'           reduce using rule 259 (function_call_parameter)
    $default      reduce using rule 563 (r_variable)


State 665

   39 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 809
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 666

  464 fully_qualified_class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 810


State 667

  465 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 811


State 668

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  463 fully_qualified_class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 463 (fully_qualified_class_name)


State 669

  190 extends_from: "extends (T_EXTENDS)" fully_qualified_class_name .

    $default  reduce using rule 190 (extends_from)


State 670

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 . implements_list '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 812

    $default  reduce using rule 194 (implements_list)

    implements_list  go to state 813


State 671

  193 interface_extends_list: "extends (T_EXTENDS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    interface_list              go to state 814
    fully_qualified_class_name  go to state 815


State 672

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 interface_extends_list . '{' class_statement_list '}'

    '{'  shift, and go to state 816


State 673

  431 combined_scalar_offset: combined_scalar_offset '[' dim_offset ']' .

    $default  reduce using rule 431 (combined_scalar_offset)


State 674

  430 combined_scalar_offset: combined_scalar '[' dim_offset ']' .

    $default  reduce using rule 430 (combined_scalar_offset)


State 675

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 . '(' parameter_list ')' '{' inner_statement_list '}'

    '('  shift, and go to state 817


State 676

  423 expr_without_variable: function is_reference @76 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "array (T_ARRAY)"          shift, and go to state 818
    "callable (T_CALLABLE)"    shift, and go to state 819
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    ')'       reduce using rule 244 (parameter_list)
    $default  reduce using rule 249 (optional_class_type)

    namespace_name              go to state 668
    parameter_list              go to state 820
    non_empty_parameter_list    go to state 821
    parameter                   go to state 822
    optional_class_type         go to state 823
    fully_qualified_class_name  go to state 824


State 677

  588 array_function_dereference: function_call $@92 '[' dim_offset . ']'

    ']'  shift, and go to state 825


State 678

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  611 variable_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 826


State 679

  452 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@82 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 827


State 680

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @81 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 828


State 681

  582 variable_without_objects: simple_indirect_reference reference_variable .
  597 reference_variable: reference_variable . '[' dim_offset ']'
  598                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 324
    '{'  shift, and go to state 325

    $default  reduce using rule 582 (variable_without_objects)


State 682

  433 combined_scalar_offset: general_constant '[' dim_offset ']' .

    $default  reduce using rule 433 (combined_scalar_offset)


State 683

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  368                      | expr "or (T_LOGICAL_OR)" $@69 expr .
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 368 (expr_without_variable)


State 684

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  370                      | expr "and (T_LOGICAL_AND)" $@70 expr .
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 370 (expr_without_variable)


State 685

  404 expr_without_variable: expr '?' ':' $@74 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 829
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 686

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  402                      | expr '?' $@72 expr . ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    ':'                           shift, and go to state 830
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303


State 687

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  364                      | expr "|| (T_BOOLEAN_OR)" $@67 expr .
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 364 (expr_without_variable)


State 688

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  366                      | expr "&& (T_BOOLEAN_AND)" $@68 expr .
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 366 (expr_without_variable)


State 689

  345 expr_without_variable: variable '=' '&' "new (T_NEW)" . class_name_reference $@66 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 168
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 169
    '$'                        shift, and go to state 86

    namespace_name                go to state 170
    class_name                    go to state 171
    class_name_reference          go to state 831
    dynamic_class_name_reference  go to state 173
    static_member                 go to state 117
    variable_class_name           go to state 174
    base_variable                 go to state 175
    reference_variable            go to state 176
    compound_variable             go to state 123
    simple_indirect_reference     go to state 177


State 690

  343 expr_without_variable: variable '=' '&' variable .

    $default  reduce using rule 343 (expr_without_variable)


State 691

  456 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@84 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 832


State 692

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@83 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 833


State 693

  586 array_function_dereference: array_function_dereference '[' dim_offset ']' .

    $default  reduce using rule 586 (array_function_dereference)


State 694

  606 object_property: variable_without_objects . $@93

    $default  reduce using rule 605 ($@93)

    $@93  go to state 834


State 695

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 object_property . $@89 method_or_not variable_properties

    $default  reduce using rule 567 ($@89)

    $@89  go to state 835


State 696

  604 object_property: object_dim_list .
  607 object_dim_list: object_dim_list . '[' dim_offset ']'
  608                | object_dim_list . '{' expr '}'

    '['  shift, and go to state 836
    '{'  shift, and go to state 837

    $default  reduce using rule 604 (object_property)


State 697

  609 object_dim_list: variable_name .

    $default  reduce using rule 609 (object_dim_list)


State 698

  597 reference_variable: reference_variable '[' dim_offset ']' .

    $default  reduce using rule 597 (reference_variable)


State 699

  598 reference_variable: reference_variable '{' expr '}' .

    $default  reduce using rule 598 (reference_variable)


State 700

  628 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 628 (non_empty_array_pair_list)


State 701

  627 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .

    $default  reduce using rule 627 (non_empty_array_pair_list)


State 702

  622 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . expr
  626                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 838
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 839
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 703

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@86 object_property . $@87 dynamic_class_name_variable_properties

    $default  reduce using rule 469 ($@87)

    $@87  go to state 840


State 704

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list . $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  reduce using rule 56 ($@8)
    "else (T_ELSE)"      reduce using rule 56 ($@8)
    "endif (T_ENDIF)"    reduce using rule 56 ($@8)
    $default             reduce using rule 41 ($@4)

    $@4  go to state 457
    $@8  go to state 841


State 705

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 . elseif_list else_single

    $default  reduce using rule 223 (elseif_list)

    elseif_list  go to state 842


State 706

   63 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 . parenthesis_expr ';'

    '('  shift, and go to state 181

    parenthesis_expr  go to state 843


State 707

  222 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 844


State 708

  221 while_statement: statement .

    $default  reduce using rule 221 (while_statement)


State 709

   60 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement .

    $default  reduce using rule 60 (unticked_statement)


State 710

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 . for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    for_expr                           go to state 845
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 711

  325 non_empty_for_expr: non_empty_for_expr ',' $@61 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 846
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 712

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 . foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 847
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 713

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 . foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 848
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 714

  208 declare_list: "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 849
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 715

  209 declare_list: declare_list ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 850


State 716

   91 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' . declare_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 851
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 852
    unticked_statement                 go to state 92
    declare_statement                  go to state 853
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 717

  213 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $default  reduce using rule 214 (case_list)

    case_list  go to state 854


State 718

  212 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  216 case_list: case_list . "case (T_CASE)" expr case_separator $@53 inner_statement_list
  218          | case_list . "default (T_DEFAULT)" case_separator $@54 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 855
    "case (T_CASE)"            shift, and go to state 856
    "default (T_DEFAULT)"      shift, and go to state 857


State 719

  211 switch_case_list: '{' ';' . case_list '}'

    $default  reduce using rule 214 (case_list)

    case_list  go to state 858


State 720

  210 switch_case_list: '{' case_list . '}'
  216 case_list: case_list . "case (T_CASE)" expr case_separator $@53 inner_statement_list
  218          | case_list . "default (T_DEFAULT)" case_separator $@54 inner_statement_list

    "case (T_CASE)"        shift, and go to state 856
    "default (T_DEFAULT)"  shift, and go to state 857
    '}'                    shift, and go to state 859


State 721

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  537                 | '+' static_scalar_value .

    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 537 (static_operation)


State 722

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  538                 | '-' static_scalar_value .

    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 538 (static_operation)


State 723

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  514                 | '!' static_scalar_value .
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 514 (static_operation)


State 724

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  515                 | '~' static_scalar_value .
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 515 (static_operation)


State 725

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  557 non_empty_static_array_pair_list: static_scalar_value . "=> (T_DOUBLE_ARROW)" static_scalar_value
  558                                 | static_scalar_value .

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 860

    $default  reduce using rule 558 (non_empty_static_array_pair_list)


State 726

  503 static_scalar_value: '[' static_array_pair_list . ']'

    ']'  shift, and go to state 861


State 727

  552 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value
  556                                 | non_empty_static_array_pair_list . ',' static_scalar_value

    ','  shift, and go to state 862

    $default  reduce using rule 553 (possible_comma)

    possible_comma  go to state 863


State 728

  502 static_scalar_value: "array (T_ARRAY)" '(' . static_array_pair_list ')'

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    $default  reduce using rule 551 (static_array_pair_list)

    namespace_name                    go to state 578
    class_name                        go to state 579
    common_scalar                     go to state 580
    static_class_constant             go to state 581
    static_scalar_value               go to state 725
    static_operation                  go to state 584
    static_array_pair_list            go to state 864
    non_empty_static_array_pair_list  go to state 727
    static_class_name_scalar          go to state 585


State 729

  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  500 static_scalar_value: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 865


State 730

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  462 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  501 static_scalar_value: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 462 (class_name)
    $default                       reduce using rule 501 (static_scalar_value)


State 731

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  539                 | '(' static_scalar_value . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759
    ')'                           shift, and go to state 866


State 732

  495 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  665 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  shift, and go to state 867
    "class (T_CLASS)"        shift, and go to state 868


State 733

  524 static_operation: static_scalar_value "or (T_LOGICAL_OR)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 869
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 734

  522 static_operation: static_scalar_value "xor (T_LOGICAL_XOR)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 870
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 735

  523 static_operation: static_scalar_value "and (T_LOGICAL_AND)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 871
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 736

  535 static_operation: static_scalar_value '?' . ':' static_scalar_value
  536                 | static_scalar_value '?' . static_scalar_value ':' static_scalar_value

    ':'                                           shift, and go to state 872
    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 873
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 737

  526 static_operation: static_scalar_value "|| (T_BOOLEAN_OR)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 874
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 738

  525 static_operation: static_scalar_value "&& (T_BOOLEAN_AND)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 875
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 739

  516 static_operation: static_scalar_value '|' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 876
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 740

  518 static_operation: static_scalar_value '^' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 877
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 741

  517 static_operation: static_scalar_value '&' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 878
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 742

  528 static_operation: static_scalar_value "!== (T_IS_NOT_IDENTICAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 879
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 743

  527 static_operation: static_scalar_value "=== (T_IS_IDENTICAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 880
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 744

  530 static_operation: static_scalar_value "!= (T_IS_NOT_EQUAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 881
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 745

  529 static_operation: static_scalar_value "== (T_IS_EQUAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 882
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 746

  531 static_operation: static_scalar_value '<' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 883
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 747

  532 static_operation: static_scalar_value '>' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 884
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 748

  534 static_operation: static_scalar_value ">= (T_IS_GREATER_OR_EQUAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 885
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 749

  533 static_operation: static_scalar_value "<= (T_IS_SMALLER_OR_EQUAL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 886
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 750

  520 static_operation: static_scalar_value ">> (T_SR)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 887
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 751

  519 static_operation: static_scalar_value "<< (T_SL)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 888
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 752

  508 static_operation: static_scalar_value '+' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 889
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 753

  509 static_operation: static_scalar_value '-' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 890
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 754

  521 static_operation: static_scalar_value '.' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 891
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 755

  510 static_operation: static_scalar_value '*' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 892
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 756

  512 static_operation: static_scalar_value '/' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 893
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 757

  513 static_operation: static_scalar_value '%' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 894
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 758

  511 static_operation: static_scalar_value "** (T_POW)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 895
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 759

  507 static_operation: static_scalar_value '[' . static_scalar_value ']'

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 896
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 760

   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' . catch_statement $@23 finally_statement

    "catch (T_CATCH)"  shift, and go to state 897

    $default  reduce using rule 98 (catch_statement)

    catch_statement  go to state 898


State 761

   32 use_function_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 899


State 762

   30 use_function_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 30 (use_function_declaration)


State 763

   27 use_function_declarations: use_function_declarations ',' use_function_declaration .

    $default  reduce using rule 27 (use_function_declarations)


State 764

   38 use_const_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 900


State 765

   36 use_const_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 36 (use_const_declaration)


State 766

   33 use_const_declarations: use_const_declarations ',' use_const_declaration .

    $default  reduce using rule 33 (use_const_declarations)


State 767

   26 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 26 (use_declaration)


State 768

  266 global_var: '$' '{' expr '}' .

    $default  reduce using rule 266 (global_var)


State 769

  268 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 901
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 770

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "array (T_ARRAY)"          shift, and go to state 818
    "callable (T_CALLABLE)"    shift, and go to state 819
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    ')'       reduce using rule 244 (parameter_list)
    $default  reduce using rule 249 (optional_class_type)

    namespace_name              go to state 668
    parameter_list              go to state 902
    non_empty_parameter_list    go to state 821
    parameter                   go to state 822
    optional_class_type         go to state 823
    fully_qualified_class_name  go to state 824


State 771

  171 unset_variables: unset_variables ',' unset_variable .

    $default  reduce using rule 171 (unset_variables)


State 772

   83 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $default  reduce using rule 83 (unticked_statement)


State 773

  660 isset_variables: isset_variables ',' $@96 . isset_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 397
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 398
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    isset_variable                     go to state 903
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 774

  618 assignment_list_element: "list (T_LIST)" '(' . $@94 assignment_list ')'

    $default  reduce using rule 617 ($@94)

    $@94  go to state 904


State 775

  614 assignment_list: assignment_list ',' . assignment_list_element

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "list (T_LIST)"            shift, and go to state 610
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    $default  reduce using rule 619 (assignment_list_element)

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 611
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    assignment_list_element            go to state 905


State 776

  341 expr_without_variable: "list (T_LIST)" '(' $@65 assignment_list ')' . '=' expr

    '='  shift, and go to state 906


State 777

  647 encaps_var_offset: "identifier (T_STRING)" .

    $default  reduce using rule 647 (encaps_var_offset)


State 778

  649 encaps_var_offset: "variable (T_VARIABLE)" .

    $default  reduce using rule 649 (encaps_var_offset)


State 779

  648 encaps_var_offset: "number (T_NUM_STRING)" .

    $default  reduce using rule 648 (encaps_var_offset)


State 780

  640 encaps_var: "variable (T_VARIABLE)" '[' $@95 encaps_var_offset . ']'

    ']'  shift, and go to state 907


State 781

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  643 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ']'                           shift, and go to state 908


State 782

  663 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 663 (class_constant)


State 783

  664 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 664 (class_constant)


State 784

  446 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @79 function_call_parameter_list .

    $default  reduce using rule 446 (function_call)


State 785

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}' .

    $default  reduce using rule 15 (top_statement)


State 786

    3 top_statement_list: top_statement_list . $@1 top_statement
   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list . '}'

    '}'  shift, and go to state 909

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 787

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 . tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 910


State 788

  125 tpl_inner_tpl_attr_anony: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 911


State 789

  124 tpl_inner_tpl_attr_anony: '"' encaps_list '"' .

    $default  reduce using rule 124 (tpl_inner_tpl_attr_anony)


State 790

  127 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_name '=' $@32 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 912
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 791

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_name '=' . $@33 expr

    $default  reduce using rule 128 ($@33)

    $@33  go to state 913


State 792

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '|' "identifier (T_STRING)" $@29 . tpl_modifier_param_list

    $default  reduce using rule 116 (tpl_modifier_param_list)

    tpl_modifier_param_list  go to state 914


State 793

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg . "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "in (T_IN)"  shift, and go to state 915


State 794

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' . $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 153 ($@41)

    $@41  go to state 916


State 795

  199 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" foreach_variable .

    $default  reduce using rule 199 (foreach_optional_arg)


State 796

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" . expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 917
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 797

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" . @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 143 (@34)

    @34  go to state 918


State 798

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable . foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 919


State 799

  115 tpl_modifier_list: tpl_modifier_list '|' "identifier (T_STRING)" $@30 . tpl_modifier_param_list

    $default  reduce using rule 116 (tpl_modifier_param_list)

    tpl_modifier_param_list  go to state 920


State 800

   48 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 921


State 801

  140 tpl_statement: "{include (T_TPL_INCLUDE)" "attr file (T_ATTR_FILE)" '=' expr "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 140 (tpl_statement)


State 802

  399 expr_without_variable: '(' new_expr ')' @71 instance_call .

    $default  reduce using rule 399 (expr_without_variable)


State 803

  337 instance_call: $@63 . chaining_instance_call

    '['                       shift, and go to state 922
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 923

    chaining_method_or_property  go to state 924
    chaining_dereference         go to state 925
    chaining_instance_call       go to state 926
    variable_property            go to state 927


State 804

  260 function_call_parameter: '&' w_variable .

    $default  reduce using rule 260 (function_call_parameter)


State 805

  261 function_call_parameter: "... (T_ELLIPSIS)" expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 261 (function_call_parameter)


State 806

  257 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . function_call_parameter

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '&'                                           shift, and go to state 657
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    "... (T_ELLIPSIS)"                            shift, and go to state 658
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    function_call_parameter            go to state 928
    new_expr                           go to state 100
    expr_without_variable              go to state 662
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 664
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 807

  254 function_call_parameter_list: '(' non_empty_function_call_parameter_list ')' .

    $default  reduce using rule 254 (function_call_parameter_list)


State 808

  255 function_call_parameter_list: '(' yield_expr ')' .

    $default  reduce using rule 255 (function_call_parameter_list)


State 809

   39 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 39 (constant_declaration)


State 810

  464 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 129

    namespace_name  go to state 929


State 811

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  465 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 465 (fully_qualified_class_name)


State 812

  195 implements_list: "implements (T_IMPLEMENTS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    interface_list              go to state 930
    fully_qualified_class_name  go to state 815


State 813

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 implements_list . '{' class_statement_list '}'

    '{'  shift, and go to state 931


State 814

  193 interface_extends_list: "extends (T_EXTENDS)" interface_list .
  197 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 932

    $default  reduce using rule 193 (interface_extends_list)


State 815

  196 interface_list: fully_qualified_class_name .

    $default  reduce using rule 196 (interface_list)


State 816

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 interface_extends_list '{' . class_statement_list '}'

    $default  reduce using rule 272 (class_statement_list)

    class_statement_list  go to state 933


State 817

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' . parameter_list ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "array (T_ARRAY)"          shift, and go to state 818
    "callable (T_CALLABLE)"    shift, and go to state 819
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    ')'       reduce using rule 244 (parameter_list)
    $default  reduce using rule 249 (optional_class_type)

    namespace_name              go to state 668
    parameter_list              go to state 934
    non_empty_parameter_list    go to state 821
    parameter                   go to state 822
    optional_class_type         go to state 823
    fully_qualified_class_name  go to state 824


State 818

  250 optional_class_type: "array (T_ARRAY)" .

    $default  reduce using rule 250 (optional_class_type)


State 819

  251 optional_class_type: "callable (T_CALLABLE)" .

    $default  reduce using rule 251 (optional_class_type)


State 820

  423 expr_without_variable: function is_reference @76 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 935


State 821

  243 parameter_list: non_empty_parameter_list .
  246 non_empty_parameter_list: non_empty_parameter_list . ',' parameter

    ','  shift, and go to state 936

    $default  reduce using rule 243 (parameter_list)


State 822

  245 non_empty_parameter_list: parameter .

    $default  reduce using rule 245 (non_empty_parameter_list)


State 823

  247 parameter: optional_class_type . is_reference is_variadic "variable (T_VARIABLE)"
  248          | optional_class_type . is_reference is_variadic "variable (T_VARIABLE)" '=' static_scalar

    '&'  shift, and go to state 273

    $default  reduce using rule 175 (is_reference)

    is_reference  go to state 937


State 824

  252 optional_class_type: fully_qualified_class_name .

    $default  reduce using rule 252 (optional_class_type)


State 825

  588 array_function_dereference: function_call $@92 '[' dim_offset ']' .

    $default  reduce using rule 588 (array_function_dereference)


State 826

  611 variable_name: '{' expr '}' .

    $default  reduce using rule 611 (variable_name)


State 827

  452 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@82 function_call_parameter_list .

    $default  reduce using rule 452 (function_call)


State 828

  450 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @81 function_call_parameter_list .

    $default  reduce using rule 450 (function_call)


State 829

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  404                      | expr '?' ':' $@74 expr .

    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 404 (expr_without_variable)


State 830

  402 expr_without_variable: expr '?' $@72 expr ':' . $@73 expr

    $default  reduce using rule 401 ($@73)

    $@73  go to state 938


State 831

  345 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference . $@66 ctor_arguments

    $default  reduce using rule 344 ($@66)

    $@66  go to state 939


State 832

  456 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@84 function_call_parameter_list .

    $default  reduce using rule 456 (function_call)


State 833

  454 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@83 function_call_parameter_list .

    $default  reduce using rule 454 (function_call)


State 834

  606 object_property: variable_without_objects $@93 .

    $default  reduce using rule 606 (object_property)


State 835

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 object_property $@89 . method_or_not variable_properties

    '('       reduce using rule 576 (@91)
    $default  reduce using rule 580 (method_or_not)

    array_method_dereference  go to state 940
    method                    go to state 941
    @91                       go to state 942
    method_or_not             go to state 943


State 836

  607 object_dim_list: object_dim_list '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 944
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 837

  608 object_dim_list: object_dim_list '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 945
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 838

  626 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    w_variable                         go to state 946
    variable                           go to state 337
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 839

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  622 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 622 (non_empty_array_pair_list)


State 840

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@86 object_property $@87 . dynamic_class_name_variable_properties

    $default  reduce using rule 473 (dynamic_class_name_variable_properties)

    dynamic_class_name_variable_properties  go to state 947


State 841

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 . new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 231 (new_elseif_list)

    new_elseif_list  go to state 948


State 842

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list . else_single
  225 elseif_list: elseif_list . "elseif (T_ELSEIF)" parenthesis_expr $@55 statement

    "elseif (T_ELSEIF)"  shift, and go to state 949
    "else (T_ELSE)"      shift, and go to state 950

    "elseif (T_ELSEIF)"  [reduce using rule 234 (else_single)]
    "else (T_ELSE)"      [reduce using rule 234 (else_single)]
    $default             reduce using rule 234 (else_single)

    else_single  go to state 951


State 843

   63 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr . ';'

    ';'  shift, and go to state 952


State 844

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  222 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "endwhile (T_ENDWHILE)"  shift, and go to state 953

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 845

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr . ';' $@14 for_expr ')' $@15 for_statement

    ';'  shift, and go to state 954


State 846

  325 non_empty_for_expr: non_empty_for_expr ',' $@61 expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 325 (non_empty_for_expr)


State 847

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable . foreach_optional_arg ')' $@20 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 955


State 848

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable . foreach_optional_arg ')' $@18 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 956


State 849

  208 declare_list: "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 208 (declare_list)


State 850

  209 declare_list: declare_list ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 957


State 851

  207 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 958


State 852

  206 declare_statement: statement .

    $default  reduce using rule 206 (declare_statement)


State 853

   91 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement .

    $default  reduce using rule 91 (unticked_statement)


State 854

  213 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  216 case_list: case_list . "case (T_CASE)" expr case_separator $@53 inner_statement_list
  218          | case_list . "default (T_DEFAULT)" case_separator $@54 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 959
    "case (T_CASE)"            shift, and go to state 856
    "default (T_DEFAULT)"      shift, and go to state 857


State 855

  212 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 960


State 856

  216 case_list: case_list "case (T_CASE)" . expr case_separator $@53 inner_statement_list

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 961
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 857

  218 case_list: case_list "default (T_DEFAULT)" . case_separator $@54 inner_statement_list

    ':'  shift, and go to state 962
    ';'  shift, and go to state 963

    case_separator  go to state 964


State 858

  211 switch_case_list: '{' ';' case_list . '}'
  216 case_list: case_list . "case (T_CASE)" expr case_separator $@53 inner_statement_list
  218          | case_list . "default (T_DEFAULT)" case_separator $@54 inner_statement_list

    "case (T_CASE)"        shift, and go to state 856
    "default (T_DEFAULT)"  shift, and go to state 857
    '}'                    shift, and go to state 965


State 859

  210 switch_case_list: '{' case_list '}' .

    $default  reduce using rule 210 (switch_case_list)


State 860

  557 non_empty_static_array_pair_list: static_scalar_value "=> (T_DOUBLE_ARROW)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 966
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 861

  503 static_scalar_value: '[' static_array_pair_list ']' .

    $default  reduce using rule 503 (static_scalar_value)


State 862

  554 possible_comma: ',' .
  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value
  556                                 | non_empty_static_array_pair_list ',' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    $default  reduce using rule 554 (possible_comma)

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 967
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 863

  552 static_array_pair_list: non_empty_static_array_pair_list possible_comma .

    $default  reduce using rule 552 (static_array_pair_list)


State 864

  502 static_scalar_value: "array (T_ARRAY)" '(' static_array_pair_list . ')'

    ')'  shift, and go to state 968


State 865

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  461 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  500 static_scalar_value: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 461 (class_name)
    $default                       reduce using rule 500 (static_scalar_value)


State 866

  539 static_operation: '(' static_scalar_value ')' .

    $default  reduce using rule 539 (static_operation)


State 867

  495 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 495 (static_class_constant)


State 868

  665 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $default  reduce using rule 665 (static_class_name_scalar)


State 869

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  524                 | static_scalar_value "or (T_LOGICAL_OR)" static_scalar_value .
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 524 (static_operation)


State 870

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  522                 | static_scalar_value "xor (T_LOGICAL_XOR)" static_scalar_value .
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 522 (static_operation)


State 871

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  523                 | static_scalar_value "and (T_LOGICAL_AND)" static_scalar_value .
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 523 (static_operation)


State 872

  535 static_operation: static_scalar_value '?' ':' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 969
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 873

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  536                 | static_scalar_value '?' static_scalar_value . ':' static_scalar_value

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    ':'                           shift, and go to state 970
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759


State 874

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  526                 | static_scalar_value "|| (T_BOOLEAN_OR)" static_scalar_value .
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 526 (static_operation)


State 875

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  525                 | static_scalar_value "&& (T_BOOLEAN_AND)" static_scalar_value .
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 525 (static_operation)


State 876

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  516                 | static_scalar_value '|' static_scalar_value .
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 516 (static_operation)


State 877

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  518                 | static_scalar_value '^' static_scalar_value .
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 518 (static_operation)


State 878

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  517                 | static_scalar_value '&' static_scalar_value .
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 517 (static_operation)


State 879

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value "!== (T_IS_NOT_IDENTICAL)" static_scalar_value .
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 528 (static_operation)


State 880

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  527                 | static_scalar_value "=== (T_IS_IDENTICAL)" static_scalar_value .
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 527 (static_operation)


State 881

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  530                 | static_scalar_value "!= (T_IS_NOT_EQUAL)" static_scalar_value .
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 530 (static_operation)


State 882

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  529                 | static_scalar_value "== (T_IS_EQUAL)" static_scalar_value .
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 529 (static_operation)


State 883

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  531                 | static_scalar_value '<' static_scalar_value .
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    ">> (T_SR)"   shift, and go to state 750
    "<< (T_SL)"   shift, and go to state 751
    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 531 (static_operation)


State 884

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  532                 | static_scalar_value '>' static_scalar_value .
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    ">> (T_SR)"   shift, and go to state 750
    "<< (T_SL)"   shift, and go to state 751
    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 532 (static_operation)


State 885

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value .
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    ">> (T_SR)"   shift, and go to state 750
    "<< (T_SL)"   shift, and go to state 751
    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 534 (static_operation)


State 886

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  533                 | static_scalar_value "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value .
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    ">> (T_SR)"   shift, and go to state 750
    "<< (T_SL)"   shift, and go to state 751
    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 533 (static_operation)


State 887

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  520                 | static_scalar_value ">> (T_SR)" static_scalar_value .
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 520 (static_operation)


State 888

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  519                 | static_scalar_value "<< (T_SL)" static_scalar_value .
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '+'           shift, and go to state 752
    '-'           shift, and go to state 753
    '.'           shift, and go to state 754
    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 519 (static_operation)


State 889

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  508                 | static_scalar_value '+' static_scalar_value .
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 508 (static_operation)


State 890

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  509                 | static_scalar_value '-' static_scalar_value .
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 509 (static_operation)


State 891

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  521                 | static_scalar_value '.' static_scalar_value .
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    '*'           shift, and go to state 755
    '/'           shift, and go to state 756
    '%'           shift, and go to state 757
    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 521 (static_operation)


State 892

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  510                 | static_scalar_value '*' static_scalar_value .
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 510 (static_operation)


State 893

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  512                 | static_scalar_value '/' static_scalar_value .
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 512 (static_operation)


State 894

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  513                 | static_scalar_value '%' static_scalar_value .
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 513 (static_operation)


State 895

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  511                 | static_scalar_value "** (T_POW)" static_scalar_value .
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "** (T_POW)"  shift, and go to state 758
    '['           shift, and go to state 759

    $default  reduce using rule 511 (static_operation)


State 896

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  507                 | static_scalar_value '[' static_scalar_value . ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759
    ']'                           shift, and go to state 971


State 897

  103 catch_statement: "catch (T_CATCH)" . '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    '('  shift, and go to state 972


State 898

   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement . $@23 finally_statement

    $default  reduce using rule 94 ($@23)

    $@23  go to state 973


State 899

   32 use_function_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 32 (use_function_declaration)


State 900

   38 use_const_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 38 (use_const_declaration)


State 901

  268 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 268 (static_var_list)


State 902

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 974


State 903

  660 isset_variables: isset_variables ',' $@96 isset_variable .

    $default  reduce using rule 660 (isset_variables)


State 904

  618 assignment_list_element: "list (T_LIST)" '(' $@94 . assignment_list ')'

    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "list (T_LIST)"            shift, and go to state 610
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    $default  reduce using rule 619 (assignment_list_element)

    namespace_name                     go to state 157
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 611
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    assignment_list                    go to state 975
    assignment_list_element            go to state 613


State 905

  614 assignment_list: assignment_list ',' assignment_list_element .

    $default  reduce using rule 614 (assignment_list)


State 906

  341 expr_without_variable: "list (T_LIST)" '(' $@65 assignment_list ')' '=' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 976
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 907

  640 encaps_var: "variable (T_VARIABLE)" '[' $@95 encaps_var_offset ']' .

    $default  reduce using rule 640 (encaps_var)


State 908

  643 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  shift, and go to state 977


State 909

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}' .

    $default  reduce using rule 13 (top_statement)


State 910

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block . "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 979
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 911

  125 tpl_inner_tpl_attr_anony: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 125 (tpl_inner_tpl_attr_anony)


State 912

  127 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_name '=' $@32 expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 127 (tpl_inner_tpl_attr_list)


State 913

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_name '=' $@33 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 981
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 914

  113 tpl_modifier_list: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '|' "identifier (T_STRING)" $@29 tpl_modifier_param_list .
  118 tpl_modifier_param_list: tpl_modifier_param_list . ':' $@31 expr

    ':'  shift, and go to state 982

    $default  reduce using rule 113 (tpl_modifier_list)


State 915

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" . expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 983
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 916

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 . for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    for_expr                           go to state 984
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 917

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr . "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 985


State 918

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 . foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    '&'                        shift, and go to state 445
    "identifier (T_STRING)"    shift, and go to state 129
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 154
    "namespace (T_NAMESPACE)"  shift, and go to state 155
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 156
    '$'                        shift, and go to state 86

    namespace_name                     go to state 157
    foreach_variable                   go to state 986
    function_call                      go to state 106
    class_name                         go to state 158
    variable                           go to state 448
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 161
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124


State 919

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg . "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 987


State 920

  115 tpl_modifier_list: tpl_modifier_list '|' "identifier (T_STRING)" $@30 tpl_modifier_param_list .
  118 tpl_modifier_param_list: tpl_modifier_param_list . ':' $@31 expr

    ':'  shift, and go to state 982

    $default  reduce using rule 115 (tpl_modifier_list)


State 921

   48 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 988


State 922

  330 chaining_dereference: '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 989
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 923

  573 variable_property: "-> (T_OBJECT_OPERATOR)" . object_property $@90 method_or_not

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 694
    reference_variable         go to state 484
    compound_variable          go to state 123
    object_property            go to state 990
    object_dim_list            go to state 696
    variable_name              go to state 697
    simple_indirect_reference  go to state 486


State 924

  327 chaining_method_or_property: chaining_method_or_property . variable_property
  334 chaining_instance_call: chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 923

    $default  reduce using rule 334 (chaining_instance_call)

    variable_property  go to state 991


State 925

  329 chaining_dereference: chaining_dereference . '[' dim_offset ']'
  332 chaining_instance_call: chaining_dereference . $@62 chaining_method_or_property
  333                       | chaining_dereference .

    '['  shift, and go to state 992

    "-> (T_OBJECT_OPERATOR)"  reduce using rule 331 ($@62)
    $default                  reduce using rule 333 (chaining_instance_call)

    $@62  go to state 993


State 926

  337 instance_call: $@63 chaining_instance_call .

    $default  reduce using rule 337 (instance_call)


State 927

  328 chaining_method_or_property: variable_property .

    $default  reduce using rule 328 (chaining_method_or_property)


State 928

  257 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' function_call_parameter .

    $default  reduce using rule 257 (non_empty_function_call_parameter_list)


State 929

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  464 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 264

    $default  reduce using rule 464 (fully_qualified_class_name)


State 930

  195 implements_list: "implements (T_IMPLEMENTS)" interface_list .
  197 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 932

    $default  reduce using rule 195 (implements_list)


State 931

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 implements_list '{' . class_statement_list '}'

    $default  reduce using rule 272 (class_statement_list)

    class_statement_list  go to state 994


State 932

  197 interface_list: interface_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 995


State 933

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 interface_extends_list '{' class_statement_list . '}'
  271 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 996
    "use (T_USE)"              shift, and go to state 997
    "public (T_PUBLIC)"        shift, and go to state 998
    "protected (T_PROTECTED)"  shift, and go to state 999
    "private (T_PRIVATE)"      shift, and go to state 1000
    "final (T_FINAL)"          shift, and go to state 1001
    "abstract (T_ABSTRACT)"    shift, and go to state 1002
    "static (T_STATIC)"        shift, and go to state 1003
    "var (T_VAR)"              shift, and go to state 1004
    '}'                        shift, and go to state 1005

    $default  reduce using rule 304 (method_modifiers)

    class_statement             go to state 1006
    trait_use_statement         go to state 1007
    variable_modifiers          go to state 1008
    method_modifiers            go to state 1009
    non_empty_member_modifiers  go to state 1010
    member_modifier             go to state 1011
    class_constant_declaration  go to state 1012


State 934

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list . ')' '{' inner_statement_list '}'

    ')'  shift, and go to state 1013


State 935

  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 1014

    $default  reduce using rule 437 (lexical_vars)

    lexical_vars  go to state 1015


State 936

  246 non_empty_parameter_list: non_empty_parameter_list ',' . parameter

    "identifier (T_STRING)"    shift, and go to state 129
    "array (T_ARRAY)"          shift, and go to state 818
    "callable (T_CALLABLE)"    shift, and go to state 819
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    $default  reduce using rule 249 (optional_class_type)

    namespace_name              go to state 668
    parameter                   go to state 1016
    optional_class_type         go to state 823
    fully_qualified_class_name  go to state 824


State 937

  247 parameter: optional_class_type is_reference . is_variadic "variable (T_VARIABLE)"
  248          | optional_class_type is_reference . is_variadic "variable (T_VARIABLE)" '=' static_scalar

    "... (T_ELLIPSIS)"  shift, and go to state 1017

    $default  reduce using rule 177 (is_variadic)

    is_variadic  go to state 1018


State 938

  402 expr_without_variable: expr '?' $@72 expr ':' $@73 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 1019
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 939

  345 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@66 . ctor_arguments

    '('  shift, and go to state 469

    $default  reduce using rule 481 (ctor_arguments)

    function_call_parameter_list  go to state 548
    ctor_arguments                go to state 1020


State 940

  574 array_method_dereference: array_method_dereference . '[' dim_offset ']'
  579 method_or_not: array_method_dereference .

    '['  shift, and go to state 1021

    $default  reduce using rule 579 (method_or_not)


State 941

  575 array_method_dereference: method . '[' dim_offset ']'
  578 method_or_not: method .

    '['  shift, and go to state 1022

    $default  reduce using rule 578 (method_or_not)


State 942

  577 method: @91 . function_call_parameter_list

    '('  shift, and go to state 469

    function_call_parameter_list  go to state 1023


State 943

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 object_property $@89 method_or_not . variable_properties

    $default  reduce using rule 571 (variable_properties)

    variable_properties  go to state 1024


State 944

  607 object_dim_list: object_dim_list '[' dim_offset . ']'

    ']'  shift, and go to state 1025


State 945

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr
  608 object_dim_list: object_dim_list '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    '}'                           shift, and go to state 1026


State 946

  626 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 626 (non_empty_array_pair_list)


State 947

  470 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@86 object_property $@87 dynamic_class_name_variable_properties .
  472 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 1027

    $default  reduce using rule 470 (dynamic_class_name_reference)

    dynamic_class_name_variable_property  go to state 1028


State 948

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list . new_else_single "endif (T_ENDIF)" ';'
  233 new_elseif_list: new_elseif_list . "elseif (T_ELSEIF)" parenthesis_expr ':' $@58 inner_statement_list

    "elseif (T_ELSEIF)"  shift, and go to state 1029
    "else (T_ELSE)"      shift, and go to state 1030

    $default  reduce using rule 239 (new_else_single)

    new_else_single  go to state 1031


State 949

  225 elseif_list: elseif_list "elseif (T_ELSEIF)" . parenthesis_expr $@55 statement

    '('  shift, and go to state 181

    parenthesis_expr  go to state 1032


State 950

  235 else_single: "else (T_ELSE)" . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 1033
    unticked_statement                 go to state 92
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 951

   54 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single .

    $default  reduce using rule 54 (unticked_statement)


State 952

   63 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';' .

    $default  reduce using rule 63 (unticked_statement)


State 953

  222 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  shift, and go to state 1034


State 954

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' . $@14 for_expr ')' $@15 for_statement

    $default  reduce using rule 65 ($@14)

    $@14  go to state 1035


State 955

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg . ')' $@20 foreach_statement

    ')'  shift, and go to state 1036


State 956

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg . ')' $@18 foreach_statement

    ')'  shift, and go to state 1037


State 957

  209 declare_list: declare_list ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1038
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 958

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  207 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "enddeclare (T_ENDDECLARE)"  shift, and go to state 1039

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 959

  213 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 1040


State 960

  212 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 212 (switch_case_list)


State 961

  216 case_list: case_list "case (T_CASE)" expr . case_separator $@53 inner_statement_list
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    ':'                           shift, and go to state 962
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ';'                           shift, and go to state 963

    case_separator  go to state 1041


State 962

  219 case_separator: ':' .

    $default  reduce using rule 219 (case_separator)


State 963

  220 case_separator: ';' .

    $default  reduce using rule 220 (case_separator)


State 964

  218 case_list: case_list "default (T_DEFAULT)" case_separator . $@54 inner_statement_list

    $default  reduce using rule 217 ($@54)

    $@54  go to state 1042


State 965

  211 switch_case_list: '{' ';' case_list '}' .

    $default  reduce using rule 211 (switch_case_list)


State 966

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  557 non_empty_static_array_pair_list: static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value .

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 557 (non_empty_static_array_pair_list)


State 967

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar_value . "=> (T_DOUBLE_ARROW)" static_scalar_value
  556                                 | non_empty_static_array_pair_list ',' static_scalar_value .

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 1043

    $default  reduce using rule 556 (non_empty_static_array_pair_list)


State 968

  502 static_scalar_value: "array (T_ARRAY)" '(' static_array_pair_list ')' .

    $default  reduce using rule 502 (static_scalar_value)


State 969

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  535                 | static_scalar_value '?' ':' static_scalar_value .
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value

    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 535 (static_operation)


State 970

  536 static_operation: static_scalar_value '?' static_scalar_value ':' . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 1044
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 971

  507 static_operation: static_scalar_value '[' static_scalar_value ']' .

    $default  reduce using rule 507 (static_operation)


State 972

  103 catch_statement: "catch (T_CATCH)" '(' . $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 99 ($@24)

    $@24  go to state 1045


State 973

   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 . finally_statement

    "finally (T_FINALLY)"  shift, and go to state 1046

    $default  reduce using rule 104 (finally_statement)

    finally_statement  go to state 1047


State 974

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 1014

    $default  reduce using rule 437 (lexical_vars)

    lexical_vars  go to state 1048


State 975

  614 assignment_list: assignment_list . ',' assignment_list_element
  618 assignment_list_element: "list (T_LIST)" '(' $@94 assignment_list . ')'

    ','  shift, and go to state 775
    ')'  shift, and go to state 1049


State 976

  341 expr_without_variable: "list (T_LIST)" '(' $@65 assignment_list ')' '=' expr .
  364                      | expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 341 (expr_without_variable)


State 977

  643 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $default  reduce using rule 643 (encaps_var)


State 978

  108 tpl_block: tpl_block T_INLINE_HTML .

    $default  reduce using rule 108 (tpl_block)


State 979

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  152              | "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" . $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 151 ($@40)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    $@40                               go to state 1050
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 980

  107 tpl_block: tpl_block tpl_statement .

    $default  reduce using rule 107 (tpl_block)


State 981

  129 tpl_inner_tpl_attr_list: tpl_inner_tpl_attr_list tpl_inner_tpl_attr_name '=' $@33 expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 129 (tpl_inner_tpl_attr_list)


State 982

  118 tpl_modifier_param_list: tpl_modifier_param_list ':' . $@31 expr

    $default  reduce using rule 117 ($@31)

    $@31  go to state 1051


State 983

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr . ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303
    ')'                           shift, and go to state 1052


State 984

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr . ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    ';'  shift, and go to state 1053


State 985

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" . $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 160 ($@46)

    $@46  go to state 1054


State 986

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable . foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 642

    $default  reduce using rule 198 (foreach_optional_arg)

    foreach_optional_arg  go to state 1055


State 987

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" . @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 147 (@37)

    @37  go to state 1056


State 988

   48 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 48 (inner_statement)


State 989

  330 chaining_dereference: '[' dim_offset . ']'

    ']'  shift, and go to state 1057


State 990

  573 variable_property: "-> (T_OBJECT_OPERATOR)" object_property . $@90 method_or_not

    $default  reduce using rule 572 ($@90)

    $@90  go to state 1058


State 991

  327 chaining_method_or_property: chaining_method_or_property variable_property .

    $default  reduce using rule 327 (chaining_method_or_property)


State 992

  329 chaining_dereference: chaining_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 1059
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 993

  332 chaining_instance_call: chaining_dereference $@62 . chaining_method_or_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 923

    chaining_method_or_property  go to state 1060
    variable_property            go to state 927


State 994

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 implements_list '{' class_statement_list . '}'
  271 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 996
    "use (T_USE)"              shift, and go to state 997
    "public (T_PUBLIC)"        shift, and go to state 998
    "protected (T_PROTECTED)"  shift, and go to state 999
    "private (T_PRIVATE)"      shift, and go to state 1000
    "final (T_FINAL)"          shift, and go to state 1001
    "abstract (T_ABSTRACT)"    shift, and go to state 1002
    "static (T_STATIC)"        shift, and go to state 1003
    "var (T_VAR)"              shift, and go to state 1004
    '}'                        shift, and go to state 1061

    $default  reduce using rule 304 (method_modifiers)

    class_statement             go to state 1006
    trait_use_statement         go to state 1007
    variable_modifiers          go to state 1008
    method_modifiers            go to state 1009
    non_empty_member_modifiers  go to state 1010
    member_modifier             go to state 1011
    class_constant_declaration  go to state 1012


State 995

  197 interface_list: interface_list ',' fully_qualified_class_name .

    $default  reduce using rule 197 (interface_list)


State 996

  319 class_constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 1062


State 997

  279 trait_use_statement: "use (T_USE)" . trait_list trait_adaptations

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    trait_list                  go to state 1063
    fully_qualified_class_name  go to state 1064


State 998

  308 member_modifier: "public (T_PUBLIC)" .

    $default  reduce using rule 308 (member_modifier)


State 999

  309 member_modifier: "protected (T_PROTECTED)" .

    $default  reduce using rule 309 (member_modifier)


State 1000

  310 member_modifier: "private (T_PRIVATE)" .

    $default  reduce using rule 310 (member_modifier)


State 1001

  313 member_modifier: "final (T_FINAL)" .

    $default  reduce using rule 313 (member_modifier)


State 1002

  312 member_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 312 (member_modifier)


State 1003

  311 member_modifier: "static (T_STATIC)" .

    $default  reduce using rule 311 (member_modifier)


State 1004

  303 variable_modifiers: "var (T_VAR)" .

    $default  reduce using rule 303 (variable_modifiers)


State 1005

  184 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@52 interface_extends_list '{' class_statement_list '}' .

    $default  reduce using rule 184 (unticked_class_declaration_statement)


State 1006

  271 class_statement_list: class_statement_list class_statement .

    $default  reduce using rule 271 (class_statement_list)


State 1007

  276 class_statement: trait_use_statement .

    $default  reduce using rule 276 (class_statement)


State 1008

  274 class_statement: variable_modifiers . $@59 class_variable_declaration ';'

    $default  reduce using rule 273 ($@59)

    $@59  go to state 1065


State 1009

  278 class_statement: method_modifiers . function is_reference "identifier (T_STRING)" $@60 '(' parameter_list ')' method_body

    "function (T_FUNCTION)"  shift, and go to state 48

    function  go to state 1066


State 1010

  302 variable_modifiers: non_empty_member_modifiers .
  305 method_modifiers: non_empty_member_modifiers .
  307 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 998
    "protected (T_PROTECTED)"  shift, and go to state 999
    "private (T_PRIVATE)"      shift, and go to state 1000
    "final (T_FINAL)"          shift, and go to state 1001
    "abstract (T_ABSTRACT)"    shift, and go to state 1002
    "static (T_STATIC)"        shift, and go to state 1003

    "function (T_FUNCTION)"  reduce using rule 305 (method_modifiers)
    $default                 reduce using rule 302 (variable_modifiers)

    member_modifier  go to state 1067


State 1011

  306 non_empty_member_modifiers: member_modifier .

    $default  reduce using rule 306 (non_empty_member_modifiers)


State 1012

  275 class_statement: class_constant_declaration . ';'
  318 class_constant_declaration: class_constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 1068
    ';'  shift, and go to state 1069


State 1013

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' . '{' inner_statement_list '}'

    '{'  shift, and go to state 1070


State 1014

  438 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  shift, and go to state 1071


State 1015

  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 1072


State 1016

  246 non_empty_parameter_list: non_empty_parameter_list ',' parameter .

    $default  reduce using rule 246 (non_empty_parameter_list)


State 1017

  178 is_variadic: "... (T_ELLIPSIS)" .

    $default  reduce using rule 178 (is_variadic)


State 1018

  247 parameter: optional_class_type is_reference is_variadic . "variable (T_VARIABLE)"
  248          | optional_class_type is_reference is_variadic . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 1073


State 1019

  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  402                      | expr '?' $@72 expr ':' $@73 expr .
  404                      | expr . '?' ':' $@74 expr

    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 402 (expr_without_variable)


State 1020

  345 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@66 ctor_arguments .

    $default  reduce using rule 345 (expr_without_variable)


State 1021

  574 array_method_dereference: array_method_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 1074
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1022

  575 array_method_dereference: method '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 602 (dim_offset)

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 352
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    dim_offset                         go to state 1075
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1023

  577 method: @91 function_call_parameter_list .

    $default  reduce using rule 577 (method)


State 1024

  568 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@88 object_property $@89 method_or_not variable_properties .
  570 variable_properties: variable_properties . variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 923

    $default  reduce using rule 568 (variable)

    variable_property  go to state 1076


State 1025

  607 object_dim_list: object_dim_list '[' dim_offset ']' .

    $default  reduce using rule 607 (object_dim_list)


State 1026

  608 object_dim_list: object_dim_list '{' expr '}' .

    $default  reduce using rule 608 (object_dim_list)


State 1027

  474 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" . object_property

    "identifier (T_STRING)"  shift, and go to state 541
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 482
    '$'                      shift, and go to state 86

    variable_without_objects   go to state 694
    reference_variable         go to state 484
    compound_variable          go to state 123
    object_property            go to state 1077
    object_dim_list            go to state 696
    variable_name              go to state 697
    simple_indirect_reference  go to state 486


State 1028

  472 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .

    $default  reduce using rule 472 (dynamic_class_name_variable_properties)


State 1029

  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" . parenthesis_expr ':' $@58 inner_statement_list

    '('  shift, and go to state 181

    parenthesis_expr  go to state 1078


State 1030

  240 new_else_single: "else (T_ELSE)" . ':' inner_statement_list

    ':'  shift, and go to state 1079


State 1031

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single . "endif (T_ENDIF)" ';'

    "endif (T_ENDIF)"  shift, and go to state 1080


State 1032

  225 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr . $@55 statement

    $default  reduce using rule 224 ($@55)

    $@55  go to state 1081


State 1033

  235 else_single: "else (T_ELSE)" statement .

    $default  reduce using rule 235 (else_single)


State 1034

  222 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $default  reduce using rule 222 (while_statement)


State 1035

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 . for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    for_expr                           go to state 1082
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1036

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' . $@20 foreach_statement

    $default  reduce using rule 88 ($@20)

    $@20  go to state 1083


State 1037

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' . $@18 foreach_statement

    $default  reduce using rule 85 ($@18)

    $@18  go to state 1084


State 1038

  209 declare_list: declare_list ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 209 (declare_list)


State 1039

  207 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  shift, and go to state 1085


State 1040

  213 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 213 (switch_case_list)


State 1041

  216 case_list: case_list "case (T_CASE)" expr case_separator . $@53 inner_statement_list

    $default  reduce using rule 215 ($@53)

    $@53  go to state 1086


State 1042

  218 case_list: case_list "default (T_DEFAULT)" case_separator $@54 . inner_statement_list

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1087


State 1043

  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar_value "=> (T_DOUBLE_ARROW)" . static_scalar_value

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar_value       go to state 1088
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1044

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  536                 | static_scalar_value '?' static_scalar_value ':' static_scalar_value .

    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 536 (static_operation)


State 1045

  103 catch_statement: "catch (T_CATCH)" '(' $@24 . fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 1089


State 1046

  106 finally_statement: "finally (T_FINALLY)" . $@28 '{' inner_statement_list '}'

    $default  reduce using rule 105 ($@28)

    $@28  go to state 1090


State 1047

   95 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement .

    $default  reduce using rule 95 (unticked_statement)


State 1048

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 1091


State 1049

  618 assignment_list_element: "list (T_LIST)" '(' $@94 assignment_list ')' .

    $default  reduce using rule 618 (assignment_list_element)


State 1050

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 . tpl_elseif_list tpl_else_single tpl_endif

    $default  reduce using rule 226 (tpl_elseif_list)

    tpl_elseif_list  go to state 1092


State 1051

  118 tpl_modifier_param_list: tpl_modifier_param_list ':' $@31 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 1093
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1052

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' . "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1094


State 1053

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' . $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 154 ($@42)

    $@42  go to state 1095


State 1054

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 . tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1096


State 1055

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg . ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    ')'  shift, and go to state 1097


State 1056

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 . tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1098


State 1057

  330 chaining_dereference: '[' dim_offset ']' .

    $default  reduce using rule 330 (chaining_dereference)


State 1058

  573 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@90 . method_or_not

    '('       reduce using rule 576 (@91)
    $default  reduce using rule 580 (method_or_not)

    array_method_dereference  go to state 940
    method                    go to state 941
    @91                       go to state 942
    method_or_not             go to state 1099


State 1059

  329 chaining_dereference: chaining_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 1100


State 1060

  327 chaining_method_or_property: chaining_method_or_property . variable_property
  332 chaining_instance_call: chaining_dereference $@62 chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 923

    $default  reduce using rule 332 (chaining_instance_call)

    variable_property  go to state 991


State 1061

  182 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@51 implements_list '{' class_statement_list '}' .

    $default  reduce using rule 182 (unticked_class_declaration_statement)


State 1062

  319 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 1101


State 1063

  279 trait_use_statement: "use (T_USE)" trait_list . trait_adaptations
  281 trait_list: trait_list . ',' fully_qualified_class_name

    ','  shift, and go to state 1102
    ';'  shift, and go to state 1103
    '{'  shift, and go to state 1104

    trait_adaptations  go to state 1105


State 1064

  280 trait_list: fully_qualified_class_name .

    $default  reduce using rule 280 (trait_list)


State 1065

  274 class_statement: variable_modifiers $@59 . class_variable_declaration ';'

    "variable (T_VARIABLE)"  shift, and go to state 1106

    class_variable_declaration  go to state 1107


State 1066

  278 class_statement: method_modifiers function . is_reference "identifier (T_STRING)" $@60 '(' parameter_list ')' method_body

    '&'  shift, and go to state 273

    $default  reduce using rule 175 (is_reference)

    is_reference  go to state 1108


State 1067

  307 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $default  reduce using rule 307 (non_empty_member_modifiers)


State 1068

  318 class_constant_declaration: class_constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 1109


State 1069

  275 class_statement: class_constant_declaration ';' .

    $default  reduce using rule 275 (class_statement)


State 1070

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1110


State 1071

  438 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      shift, and go to state 1111
    "variable (T_VARIABLE)"  shift, and go to state 1112

    lexical_var_list  go to state 1113


State 1072

  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1114


State 1073

  247 parameter: optional_class_type is_reference is_variadic "variable (T_VARIABLE)" .
  248          | optional_class_type is_reference is_variadic "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 1115

    $default  reduce using rule 247 (parameter)


State 1074

  574 array_method_dereference: array_method_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 1116


State 1075

  575 array_method_dereference: method '[' dim_offset . ']'

    ']'  shift, and go to state 1117


State 1076

  570 variable_properties: variable_properties variable_property .

    $default  reduce using rule 570 (variable_properties)


State 1077

  474 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property .

    $default  reduce using rule 474 (dynamic_class_name_variable_property)


State 1078

  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr . ':' $@58 inner_statement_list

    ':'  shift, and go to state 1118


State 1079

  240 new_else_single: "else (T_ELSE)" ':' . inner_statement_list

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1119


State 1080

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 1120


State 1081

  225 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@55 . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 1121
    unticked_statement                 go to state 92
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1082

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr . ')' $@15 for_statement

    ')'  shift, and go to state 1122


State 1083

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 1123
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 1124
    unticked_statement                 go to state 92
    foreach_statement                  go to state 1125
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1084

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 1123
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 1124
    unticked_statement                 go to state 92
    foreach_statement                  go to state 1126
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1085

  207 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $default  reduce using rule 207 (declare_statement)


State 1086

  216 case_list: case_list "case (T_CASE)" expr case_separator $@53 . inner_statement_list

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1127


State 1087

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  218 case_list: case_list "default (T_DEFAULT)" case_separator $@54 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 218 (case_list)
    "case (T_CASE)"            reduce using rule 218 (case_list)
    "default (T_DEFAULT)"      reduce using rule 218 (case_list)
    '}'                        reduce using rule 218 (case_list)
    $default                   reduce using rule 41 ($@4)

    $@4  go to state 457


State 1088

  507 static_operation: static_scalar_value . '[' static_scalar_value ']'
  508                 | static_scalar_value . '+' static_scalar_value
  509                 | static_scalar_value . '-' static_scalar_value
  510                 | static_scalar_value . '*' static_scalar_value
  511                 | static_scalar_value . "** (T_POW)" static_scalar_value
  512                 | static_scalar_value . '/' static_scalar_value
  513                 | static_scalar_value . '%' static_scalar_value
  516                 | static_scalar_value . '|' static_scalar_value
  517                 | static_scalar_value . '&' static_scalar_value
  518                 | static_scalar_value . '^' static_scalar_value
  519                 | static_scalar_value . "<< (T_SL)" static_scalar_value
  520                 | static_scalar_value . ">> (T_SR)" static_scalar_value
  521                 | static_scalar_value . '.' static_scalar_value
  522                 | static_scalar_value . "xor (T_LOGICAL_XOR)" static_scalar_value
  523                 | static_scalar_value . "and (T_LOGICAL_AND)" static_scalar_value
  524                 | static_scalar_value . "or (T_LOGICAL_OR)" static_scalar_value
  525                 | static_scalar_value . "&& (T_BOOLEAN_AND)" static_scalar_value
  526                 | static_scalar_value . "|| (T_BOOLEAN_OR)" static_scalar_value
  527                 | static_scalar_value . "=== (T_IS_IDENTICAL)" static_scalar_value
  528                 | static_scalar_value . "!== (T_IS_NOT_IDENTICAL)" static_scalar_value
  529                 | static_scalar_value . "== (T_IS_EQUAL)" static_scalar_value
  530                 | static_scalar_value . "!= (T_IS_NOT_EQUAL)" static_scalar_value
  531                 | static_scalar_value . '<' static_scalar_value
  532                 | static_scalar_value . '>' static_scalar_value
  533                 | static_scalar_value . "<= (T_IS_SMALLER_OR_EQUAL)" static_scalar_value
  534                 | static_scalar_value . ">= (T_IS_GREATER_OR_EQUAL)" static_scalar_value
  535                 | static_scalar_value . '?' ':' static_scalar_value
  536                 | static_scalar_value . '?' static_scalar_value ':' static_scalar_value
  555 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar_value "=> (T_DOUBLE_ARROW)" static_scalar_value .

    "or (T_LOGICAL_OR)"           shift, and go to state 733
    "xor (T_LOGICAL_XOR)"         shift, and go to state 734
    "and (T_LOGICAL_AND)"         shift, and go to state 735
    '?'                           shift, and go to state 736
    "|| (T_BOOLEAN_OR)"           shift, and go to state 737
    "&& (T_BOOLEAN_AND)"          shift, and go to state 738
    '|'                           shift, and go to state 739
    '^'                           shift, and go to state 740
    '&'                           shift, and go to state 741
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 742
    "=== (T_IS_IDENTICAL)"        shift, and go to state 743
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 744
    "== (T_IS_EQUAL)"             shift, and go to state 745
    '<'                           shift, and go to state 746
    '>'                           shift, and go to state 747
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 748
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 749
    ">> (T_SR)"                   shift, and go to state 750
    "<< (T_SL)"                   shift, and go to state 751
    '+'                           shift, and go to state 752
    '-'                           shift, and go to state 753
    '.'                           shift, and go to state 754
    '*'                           shift, and go to state 755
    '/'                           shift, and go to state 756
    '%'                           shift, and go to state 757
    "** (T_POW)"                  shift, and go to state 758
    '['                           shift, and go to state 759

    $default  reduce using rule 555 (non_empty_static_array_pair_list)


State 1089

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name . $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 100 ($@25)

    $@25  go to state 1128


State 1090

  106 finally_statement: "finally (T_FINALLY)" $@28 . '{' inner_statement_list '}'

    '{'  shift, and go to state 1129


State 1091

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1130


State 1092

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list . tpl_else_single tpl_endif
  228 tpl_elseif_list: tpl_elseif_list . "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" $@56 tpl_block "tpl left delim (T_START_TPL)"
  230                | tpl_elseif_list . "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)"

    "elseif (T_ELSEIF)"  shift, and go to state 1131
    "else (T_ELSE)"      shift, and go to state 1132

    $default  reduce using rule 236 (tpl_else_single)

    tpl_else_single  go to state 1133


State 1093

  118 tpl_modifier_param_list: tpl_modifier_param_list ':' $@31 expr .
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 278
    "xor (T_LOGICAL_XOR)"         shift, and go to state 279
    "and (T_LOGICAL_AND)"         shift, and go to state 280
    '?'                           shift, and go to state 281
    "|| (T_BOOLEAN_OR)"           shift, and go to state 282
    "&& (T_BOOLEAN_AND)"          shift, and go to state 283
    '^'                           shift, and go to state 284
    '&'                           shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 286
    "=== (T_IS_IDENTICAL)"        shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 288
    "== (T_IS_EQUAL)"             shift, and go to state 289
    '<'                           shift, and go to state 290
    '>'                           shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 293
    ">> (T_SR)"                   shift, and go to state 294
    "<< (T_SL)"                   shift, and go to state 295
    '+'                           shift, and go to state 296
    '-'                           shift, and go to state 297
    '.'                           shift, and go to state 298
    '*'                           shift, and go to state 299
    '/'                           shift, and go to state 300
    '%'                           shift, and go to state 301
    "instanceof (T_INSTANCEOF)"   shift, and go to state 302
    "** (T_POW)"                  shift, and go to state 303

    $default  reduce using rule 118 (tpl_modifier_param_list)


State 1094

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" . $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 157 ($@44)

    $@44  go to state 1134


State 1095

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 . for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 322 (for_expr)

    namespace_name                     go to state 88
    for_expr                           go to state 1135
    non_empty_for_expr                 go to state 359
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 360
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1096

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block . "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1136
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1097

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' . "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1137


State 1098

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block . "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1138
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1099

  573 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@90 method_or_not .

    $default  reduce using rule 573 (variable_property)


State 1100

  329 chaining_dereference: chaining_dereference '[' dim_offset ']' .

    $default  reduce using rule 329 (chaining_dereference)


State 1101

  319 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1139
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1102

  281 trait_list: trait_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 1140


State 1103

  282 trait_adaptations: ';' .

    $default  reduce using rule 282 (trait_adaptations)


State 1104

  283 trait_adaptations: '{' . trait_adaptation_list '}'

    "identifier (T_STRING)"    shift, and go to state 1141
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    $default  reduce using rule 284 (trait_adaptation_list)

    namespace_name                          go to state 668
    trait_adaptation_list                   go to state 1142
    non_empty_trait_adaptation_list         go to state 1143
    trait_adaptation_statement              go to state 1144
    trait_precedence                        go to state 1145
    trait_method_reference                  go to state 1146
    trait_method_reference_fully_qualified  go to state 1147
    trait_alias                             go to state 1148
    fully_qualified_class_name              go to state 1149


State 1105

  279 trait_use_statement: "use (T_USE)" trait_list trait_adaptations .

    $default  reduce using rule 279 (trait_use_statement)


State 1106

  316 class_variable_declaration: "variable (T_VARIABLE)" .
  317                           | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 1150

    $default  reduce using rule 316 (class_variable_declaration)


State 1107

  274 class_statement: variable_modifiers $@59 class_variable_declaration . ';'
  314 class_variable_declaration: class_variable_declaration . ',' "variable (T_VARIABLE)"
  315                           | class_variable_declaration . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 1151
    ';'  shift, and go to state 1152


State 1108

  278 class_statement: method_modifiers function is_reference . "identifier (T_STRING)" $@60 '(' parameter_list ')' method_body

    "identifier (T_STRING)"  shift, and go to state 1153


State 1109

  318 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 1154


State 1110

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' inner_statement_list . '}'

    '}'  shift, and go to state 1155

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1111

  442 lexical_var_list: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 1156


State 1112

  441 lexical_var_list: "variable (T_VARIABLE)" .

    $default  reduce using rule 441 (lexical_var_list)


State 1113

  438 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  439 lexical_var_list: lexical_var_list . ',' "variable (T_VARIABLE)"
  440                 | lexical_var_list . ',' '&' "variable (T_VARIABLE)"

    ','  shift, and go to state 1157
    ')'  shift, and go to state 1158


State 1114

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 1159

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1115

  248 parameter: optional_class_type is_reference is_variadic "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1160
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1116

  574 array_method_dereference: array_method_dereference '[' dim_offset ']' .

    $default  reduce using rule 574 (array_method_dereference)


State 1117

  575 array_method_dereference: method '[' dim_offset ']' .

    $default  reduce using rule 575 (array_method_dereference)


State 1118

  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' . $@58 inner_statement_list

    $default  reduce using rule 232 ($@58)

    $@58  go to state 1161


State 1119

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  240 new_else_single: "else (T_ELSE)" ':' inner_statement_list .

    "endif (T_ENDIF)"  reduce using rule 240 (new_else_single)
    $default           reduce using rule 41 ($@4)

    $@4  go to state 457


State 1120

   57 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';' .

    $default  reduce using rule 57 (unticked_statement)


State 1121

  225 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@55 statement .

    $default  reduce using rule 225 (elseif_list)


State 1122

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' . $@15 for_statement

    $default  reduce using rule 66 ($@15)

    $@15  go to state 1162


State 1123

  205 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1163


State 1124

  204 foreach_statement: statement .

    $default  reduce using rule 204 (foreach_statement)


State 1125

   89 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement .

    $default  reduce using rule 89 (unticked_statement)


State 1126

   86 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement .

    $default  reduce using rule 86 (unticked_statement)


State 1127

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  216 case_list: case_list "case (T_CASE)" expr case_separator $@53 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 216 (case_list)
    "case (T_CASE)"            reduce using rule 216 (case_list)
    "default (T_DEFAULT)"      reduce using rule 216 (case_list)
    '}'                        reduce using rule 216 (case_list)
    $default                   reduce using rule 41 ($@4)

    $@4  go to state 457


State 1128

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 . "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "variable (T_VARIABLE)"  shift, and go to state 1164


State 1129

  106 finally_statement: "finally (T_FINALLY)" $@28 '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1165


State 1130

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 1166

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1131

  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" . expr "tpl right delim (T_END_TPL)" $@56 tpl_block "tpl left delim (T_START_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 1167
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1132

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)"
  237 tpl_else_single: "else (T_ELSE)" . "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)"

    "if (T_IF)"                    shift, and go to state 1168
    "tpl right delim (T_END_TPL)"  shift, and go to state 1169


State 1133

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single . tpl_endif

    '/'  shift, and go to state 1170

    tpl_endif  go to state 1171


State 1134

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 . tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1172


State 1135

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr . ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    ')'  shift, and go to state 1173


State 1136

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" . $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 161 ($@47)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    $@47                               go to state 1174
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1137

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" . $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 144 ($@35)

    $@35  go to state 1175


State 1138

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" . $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 148 ($@38)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    $@38                               go to state 1176
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1139

  319 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 319 (class_constant_declaration)


State 1140

  281 trait_list: trait_list ',' fully_qualified_class_name .

    $default  reduce using rule 281 (trait_list)


State 1141

    5 namespace_name: "identifier (T_STRING)" .
  293 trait_method_reference: "identifier (T_STRING)" .

    "as (T_AS)"  reduce using rule 293 (trait_method_reference)
    $default     reduce using rule 5 (namespace_name)


State 1142

  283 trait_adaptations: '{' trait_adaptation_list . '}'

    '}'  shift, and go to state 1177


State 1143

  285 trait_adaptation_list: non_empty_trait_adaptation_list .
  287 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list . trait_adaptation_statement

    "identifier (T_STRING)"    shift, and go to state 1141
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    $default  reduce using rule 285 (trait_adaptation_list)

    namespace_name                          go to state 668
    trait_adaptation_statement              go to state 1178
    trait_precedence                        go to state 1145
    trait_method_reference                  go to state 1146
    trait_method_reference_fully_qualified  go to state 1147
    trait_alias                             go to state 1148
    fully_qualified_class_name              go to state 1149


State 1144

  286 non_empty_trait_adaptation_list: trait_adaptation_statement .

    $default  reduce using rule 286 (non_empty_trait_adaptation_list)


State 1145

  288 trait_adaptation_statement: trait_precedence . ';'

    ';'  shift, and go to state 1179


State 1146

  296 trait_alias: trait_method_reference . "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  297            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  shift, and go to state 1180


State 1147

  290 trait_precedence: trait_method_reference_fully_qualified . "insteadof (T_INSTEADOF)" trait_reference_list
  294 trait_method_reference: trait_method_reference_fully_qualified .

    "insteadof (T_INSTEADOF)"  shift, and go to state 1181

    $default  reduce using rule 294 (trait_method_reference)


State 1148

  289 trait_adaptation_statement: trait_alias . ';'

    ';'  shift, and go to state 1182


State 1149

  295 trait_method_reference_fully_qualified: fully_qualified_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 1183


State 1150

  317 class_variable_declaration: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1184
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1151

  314 class_variable_declaration: class_variable_declaration ',' . "variable (T_VARIABLE)"
  315                           | class_variable_declaration ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 1185


State 1152

  274 class_statement: variable_modifiers $@59 class_variable_declaration ';' .

    $default  reduce using rule 274 (class_statement)


State 1153

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" . $@60 '(' parameter_list ')' method_body

    $default  reduce using rule 277 ($@60)

    $@60  go to state 1186


State 1154

  318 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1187
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1155

  180 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@50 '(' parameter_list ')' '{' inner_statement_list '}' .

    $default  reduce using rule 180 (unticked_function_declaration_statement)


State 1156

  442 lexical_var_list: '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 442 (lexical_var_list)


State 1157

  439 lexical_var_list: lexical_var_list ',' . "variable (T_VARIABLE)"
  440                 | lexical_var_list ',' . '&' "variable (T_VARIABLE)"

    '&'                      shift, and go to state 1188
    "variable (T_VARIABLE)"  shift, and go to state 1189


State 1158

  438 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $default  reduce using rule 438 (lexical_vars)


State 1159

  423 expr_without_variable: function is_reference @76 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 423 (expr_without_variable)


State 1160

  248 parameter: optional_class_type is_reference is_variadic "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 248 (parameter)


State 1161

  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@58 . inner_statement_list

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1190


State 1162

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 . for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 1191
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    ';'                                           shift, and go to state 83
    '{'                                           shift, and go to state 84
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    statement                          go to state 1192
    unticked_statement                 go to state 92
    for_statement                      go to state 1193
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    yield_expr                         go to state 102
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 111
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1163

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  205 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "endforeach (T_ENDFOREACH)"  shift, and go to state 1194

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1164

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" . ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    ')'  shift, and go to state 1195


State 1165

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  106 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list . '}'

    '}'  shift, and go to state 1196

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1166

  425 expr_without_variable: "static (T_STATIC)" function is_reference @77 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 425 (expr_without_variable)


State 1167

  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr . "tpl right delim (T_END_TPL)" $@56 tpl_block "tpl left delim (T_START_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 1197


State 1168

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" . expr "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    new_expr                           go to state 100
    expr_without_variable              go to state 101
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 1198
    parenthesis_expr                   go to state 112
    r_variable                         go to state 113
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1169

  237 tpl_else_single: "else (T_ELSE)" "tpl right delim (T_END_TPL)" . tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1199


State 1170

  238 tpl_endif: '/' . "if (T_IF)" "tpl right delim (T_END_TPL)"

    "if (T_IF)"  shift, and go to state 1200


State 1171

  152 tpl_statement: "tpl left delim (T_START_TPL)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif .

    $default  reduce using rule 152 (tpl_statement)


State 1172

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block . "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1201
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1173

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' . "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1202


State 1174

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 . tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "else (T_ELSE)"  shift, and go to state 1203

    $default  reduce using rule 241 (tpl_loopelse)

    tpl_loopelse  go to state 1204


State 1175

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 . tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1205


State 1176

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 . tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "else (T_ELSE)"  shift, and go to state 1203

    $default  reduce using rule 241 (tpl_loopelse)

    tpl_loopelse  go to state 1206


State 1177

  283 trait_adaptations: '{' trait_adaptation_list '}' .

    $default  reduce using rule 283 (trait_adaptations)


State 1178

  287 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list trait_adaptation_statement .

    $default  reduce using rule 287 (non_empty_trait_adaptation_list)


State 1179

  288 trait_adaptation_statement: trait_precedence ';' .

    $default  reduce using rule 288 (trait_adaptation_statement)


State 1180

  296 trait_alias: trait_method_reference "as (T_AS)" . trait_modifiers "identifier (T_STRING)"
  297            | trait_method_reference "as (T_AS)" . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 998
    "protected (T_PROTECTED)"  shift, and go to state 999
    "private (T_PRIVATE)"      shift, and go to state 1000
    "final (T_FINAL)"          shift, and go to state 1001
    "abstract (T_ABSTRACT)"    shift, and go to state 1002
    "static (T_STATIC)"        shift, and go to state 1003

    $default  reduce using rule 298 (trait_modifiers)

    trait_modifiers  go to state 1207
    member_modifier  go to state 1208


State 1181

  290 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" . trait_reference_list

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    trait_reference_list        go to state 1209
    fully_qualified_class_name  go to state 1210


State 1182

  289 trait_adaptation_statement: trait_alias ';' .

    $default  reduce using rule 289 (trait_adaptation_statement)


State 1183

  295 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 1211


State 1184

  317 class_variable_declaration: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 317 (class_variable_declaration)


State 1185

  314 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" .
  315                           | class_variable_declaration ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 1212

    $default  reduce using rule 314 (class_variable_declaration)


State 1186

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 . '(' parameter_list ')' method_body

    '('  shift, and go to state 1213


State 1187

  318 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 318 (class_constant_declaration)


State 1188

  440 lexical_var_list: lexical_var_list ',' '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 1214


State 1189

  439 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)" .

    $default  reduce using rule 439 (lexical_var_list)


State 1190

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  233 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@58 inner_statement_list .

    "elseif (T_ELSEIF)"  reduce using rule 233 (new_elseif_list)
    "else (T_ELSE)"      reduce using rule 233 (new_elseif_list)
    "endif (T_ENDIF)"    reduce using rule 233 (new_elseif_list)
    $default             reduce using rule 41 ($@4)

    $@4  go to state 457


State 1191

  203 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1215


State 1192

  202 for_statement: statement .

    $default  reduce using rule 202 (for_statement)


State 1193

   67 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement .

    $default  reduce using rule 67 (unticked_statement)


State 1194

  205 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  shift, and go to state 1216


State 1195

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' . $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 101 ($@26)

    $@26  go to state 1217


State 1196

  106 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}' .

    $default  reduce using rule 106 (finally_statement)


State 1197

  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" . $@56 tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 227 ($@56)

    $@56  go to state 1218


State 1198

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr . "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)"
  364 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@67 expr
  366                      | expr . "&& (T_BOOLEAN_AND)" $@68 expr
  368                      | expr . "or (T_LOGICAL_OR)" $@69 expr
  370                      | expr . "and (T_LOGICAL_AND)" $@70 expr
  371                      | expr . "xor (T_LOGICAL_XOR)" expr
  372                      | expr . '&' expr
  373                      | expr . '^' expr
  374                      | expr . '.' expr
  375                      | expr . '+' expr
  376                      | expr . '-' expr
  377                      | expr . '*' expr
  378                      | expr . "** (T_POW)" expr
  379                      | expr . '/' expr
  380                      | expr . '%' expr
  381                      | expr . "<< (T_SL)" expr
  382                      | expr . ">> (T_SR)" expr
  387                      | expr . "=== (T_IS_IDENTICAL)" expr
  388                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  389                      | expr . "== (T_IS_EQUAL)" expr
  390                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  391                      | expr . '<' expr
  392                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  393                      | expr . '>' expr
  394                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  395                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  402                      | expr . '?' $@72 expr ':' $@73 expr
  404                      | expr . '?' ':' $@74 expr

    "or (T_LOGICAL_OR)"            shift, and go to state 278
    "xor (T_LOGICAL_XOR)"          shift, and go to state 279
    "and (T_LOGICAL_AND)"          shift, and go to state 280
    '?'                            shift, and go to state 281
    "|| (T_BOOLEAN_OR)"            shift, and go to state 282
    "&& (T_BOOLEAN_AND)"           shift, and go to state 283
    '^'                            shift, and go to state 284
    '&'                            shift, and go to state 285
    "!== (T_IS_NOT_IDENTICAL)"     shift, and go to state 286
    "=== (T_IS_IDENTICAL)"         shift, and go to state 287
    "!= (T_IS_NOT_EQUAL)"          shift, and go to state 288
    "== (T_IS_EQUAL)"              shift, and go to state 289
    '<'                            shift, and go to state 290
    '>'                            shift, and go to state 291
    ">= (T_IS_GREATER_OR_EQUAL)"   shift, and go to state 292
    "<= (T_IS_SMALLER_OR_EQUAL)"   shift, and go to state 293
    ">> (T_SR)"                    shift, and go to state 294
    "<< (T_SL)"                    shift, and go to state 295
    '+'                            shift, and go to state 296
    '-'                            shift, and go to state 297
    '.'                            shift, and go to state 298
    '*'                            shift, and go to state 299
    '/'                            shift, and go to state 300
    '%'                            shift, and go to state 301
    "instanceof (T_INSTANCEOF)"    shift, and go to state 302
    "** (T_POW)"                   shift, and go to state 303
    "tpl right delim (T_END_TPL)"  shift, and go to state 1219


State 1199

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  237 tpl_else_single: "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block . "tpl left delim (T_START_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1220
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1200

  238 tpl_endif: '/' "if (T_IF)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1221


State 1201

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" . $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 158 ($@45)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    $@45                               go to state 1222
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1202

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" . $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 155 ($@43)

    $@43  go to state 1223


State 1203

  242 tpl_loopelse: "else (T_ELSE)" . "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1224


State 1204

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse . '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    '/'  shift, and go to state 1225


State 1205

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block . "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1226
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1206

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse . '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    '/'  shift, and go to state 1227


State 1207

  296 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 1228


State 1208

  297 trait_alias: trait_method_reference "as (T_AS)" member_modifier .
  299 trait_modifiers: member_modifier .

    "identifier (T_STRING)"  reduce using rule 299 (trait_modifiers)
    $default                 reduce using rule 297 (trait_alias)


State 1209

  290 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list .
  292 trait_reference_list: trait_reference_list . ',' fully_qualified_class_name

    ','  shift, and go to state 1229

    $default  reduce using rule 290 (trait_precedence)


State 1210

  291 trait_reference_list: fully_qualified_class_name .

    $default  reduce using rule 291 (trait_reference_list)


State 1211

  295 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 295 (trait_method_reference_fully_qualified)


State 1212

  315 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 567
    '-'                                           shift, and go to state 568
    '!'                                           shift, and go to state 569
    '~'                                           shift, and go to state 570
    '['                                           shift, and go to state 571
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 129
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 572
    "static (T_STATIC)"                           shift, and go to state 154
    "array (T_ARRAY)"                             shift, and go to state 573
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 574
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 435
    "namespace (T_NAMESPACE)"                     shift, and go to state 575
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 576
    '('                                           shift, and go to state 577

    namespace_name            go to state 578
    class_name                go to state 579
    common_scalar             go to state 580
    static_class_constant     go to state 581
    static_scalar             go to state 1230
    static_scalar_value       go to state 583
    static_operation          go to state 584
    static_class_name_scalar  go to state 585


State 1213

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 '(' . parameter_list ')' method_body

    "identifier (T_STRING)"    shift, and go to state 129
    "array (T_ARRAY)"          shift, and go to state 818
    "callable (T_CALLABLE)"    shift, and go to state 819
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    ')'       reduce using rule 244 (parameter_list)
    $default  reduce using rule 249 (optional_class_type)

    namespace_name              go to state 668
    parameter_list              go to state 1231
    non_empty_parameter_list    go to state 821
    parameter                   go to state 822
    optional_class_type         go to state 823
    fully_qualified_class_name  go to state 824


State 1214

  440 lexical_var_list: lexical_var_list ',' '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 440 (lexical_var_list)


State 1215

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  203 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "endfor (T_ENDFOR)"  shift, and go to state 1232

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1216

  205 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $default  reduce using rule 205 (foreach_statement)


State 1217

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 . '{' inner_statement_list '}' $@27 additional_catches

    '{'  shift, and go to state 1233


State 1218

  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" $@56 . tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1234


State 1219

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" . $@57 tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 229 ($@57)

    $@57  go to state 1235


State 1220

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  237 tpl_else_single: "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 237 (tpl_else_single)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1221

  238 tpl_endif: '/' "if (T_IF)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 238 (tpl_endif)


State 1222

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 . tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "else (T_ELSE)"  shift, and go to state 1203

    $default  reduce using rule 241 (tpl_loopelse)

    tpl_loopelse  go to state 1236


State 1223

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 . tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1237


State 1224

  242 tpl_loopelse: "else (T_ELSE)" "tpl right delim (T_END_TPL)" . tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1238


State 1225

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' . "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "for (T_FOR)"  shift, and go to state 1239


State 1226

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" . $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 145 ($@36)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    $@36                               go to state 1240
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1227

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' . "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "foreach (T_FOREACH)"  shift, and go to state 1241


State 1228

  296 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)" .

    $default  reduce using rule 296 (trait_alias)


State 1229

  292 trait_reference_list: trait_reference_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 1242


State 1230

  315 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 315 (class_variable_declaration)


State 1231

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 '(' parameter_list . ')' method_body

    ')'  shift, and go to state 1243


State 1232

  203 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  shift, and go to state 1244


State 1233

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' . inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1245


State 1234

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" $@56 tpl_block . "tpl left delim (T_START_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1246
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1235

  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 . tpl_block "tpl left delim (T_START_TPL)"

    $default  reduce using rule 109 (tpl_block)

    tpl_block  go to state 1247


State 1236

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse . '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    '/'  shift, and go to state 1248


State 1237

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block . "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1249
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1238

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  242 tpl_loopelse: "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block . "tpl left delim (T_START_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1250
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1239

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1251


State 1240

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 . tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "else (T_ELSE)"  shift, and go to state 1203

    $default  reduce using rule 241 (tpl_loopelse)

    tpl_loopelse  go to state 1252


State 1241

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1253


State 1242

  292 trait_reference_list: trait_reference_list ',' fully_qualified_class_name .

    $default  reduce using rule 292 (trait_reference_list)


State 1243

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 '(' parameter_list ')' . method_body

    ';'  shift, and go to state 1254
    '{'  shift, and go to state 1255

    method_body  go to state 1256


State 1244

  203 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $default  reduce using rule 203 (for_statement)


State 1245

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list . '}' $@27 additional_catches

    '}'  shift, and go to state 1257

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1246

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  228 tpl_elseif_list: tpl_elseif_list "elseif (T_ELSEIF)" expr "tpl right delim (T_END_TPL)" $@56 tpl_block "tpl left delim (T_START_TPL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 228 (tpl_elseif_list)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1247

  107 tpl_block: tpl_block . tpl_statement
  108          | tpl_block . T_INLINE_HTML
  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 tpl_block . "tpl left delim (T_START_TPL)"

    T_INLINE_HTML                                           shift, and go to state 978
    "tpl left delim (T_START_TPL)"                          shift, and go to state 1258
    "tpl left delim with script (T_START_TPL_WITH_SCRIPT)"  shift, and go to state 79
    "{t (T_START_TPL_TRANSLATE)"                            shift, and go to state 80
    "{include (T_TPL_INCLUDE)"                              shift, and go to state 81

    tpl_statement  go to state 980


State 1248

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' . "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "for (T_FOR)"  shift, and go to state 1259


State 1249

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  156              | "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" . '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '/'                                           shift, and go to state 1260
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1250

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  242 tpl_loopelse: "else (T_ELSE)" "tpl right delim (T_END_TPL)" tpl_block "tpl left delim (T_START_TPL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 242 (tpl_loopelse)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1251

  162 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 162 (tpl_statement)


State 1252

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse . '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    '/'  shift, and go to state 1261


State 1253

  149 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 149 (tpl_statement)


State 1254

  300 method_body: ';' .

    $default  reduce using rule 300 (method_body)


State 1255

  301 method_body: '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1262


State 1256

  278 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@60 '(' parameter_list ')' method_body .

    $default  reduce using rule 278 (class_statement)


State 1257

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' . $@27 additional_catches

    $default  reduce using rule 102 ($@27)

    $@27  go to state 1263


State 1258

  135 tpl_statement: "tpl left delim (T_START_TPL)" . tpl_modifier_list "tpl right delim (T_END_TPL)"
  136              | "tpl left delim (T_START_TPL)" . expr_without_variable "tpl right delim (T_END_TPL)"
  137              | "tpl left delim (T_START_TPL)" . expr_without_variable ';' "tpl right delim (T_END_TPL)"
  142              | "tpl left delim (T_START_TPL)" . "identifier (T_STRING)" tpl_inner_tpl_attr_list "tpl right delim (T_END_TPL)"
  146              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  149              | "tpl left delim (T_START_TPL)" . "foreach (T_FOREACH)" expr "as (T_AS)" foreach_variable foreach_optional_arg "tpl right delim (T_END_TPL)" @37 tpl_block "tpl left delim (T_START_TPL)" $@38 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"
  152              | "tpl left delim (T_START_TPL)" . "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@39 tpl_block "tpl left delim (T_START_TPL)" $@40 tpl_elseif_list tpl_else_single tpl_endif
  156              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  159              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  162              | "tpl left delim (T_START_TPL)" . "for (T_FOR)" foreach_variable foreach_optional_arg "in (T_IN)" expr "tpl right delim (T_END_TPL)" $@46 tpl_block "tpl left delim (T_START_TPL)" $@47 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)"
  230 tpl_elseif_list: tpl_elseif_list "else (T_ELSE)" "if (T_IF)" expr "tpl right delim (T_END_TPL)" $@57 tpl_block "tpl left delim (T_START_TPL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 128
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 239
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 240
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 241
    "for (T_FOR)"                                 shift, and go to state 242
    "foreach (T_FOREACH)"                         shift, and go to state 243
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 130
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 131
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 82
    '"'                                           shift, and go to state 85
    '$'                                           shift, and go to state 86
    '`'                                           shift, and go to state 87

    $default  reduce using rule 230 (tpl_elseif_list)

    namespace_name                     go to state 88
    tpl_modifier_list                  go to state 244
    new_expr                           go to state 100
    expr_without_variable              go to state 245
    combined_scalar_offset             go to state 103
    combined_scalar                    go to state 104
    function                           go to state 132
    function_call                      go to state 106
    class_name                         go to state 107
    common_scalar                      go to state 108
    general_constant                   go to state 109
    scalar                             go to state 110
    expr                               go to state 201
    parenthesis_expr                   go to state 112
    r_variable                         go to state 246
    rw_variable                        go to state 114
    variable                           go to state 115
    variable_without_objects           go to state 116
    static_member                      go to state 117
    variable_class_name                go to state 118
    array_function_dereference         go to state 119
    base_variable_with_function_calls  go to state 120
    base_variable                      go to state 121
    reference_variable                 go to state 122
    compound_variable                  go to state 123
    simple_indirect_reference          go to state 124
    internal_functions_in_yacc         go to state 125
    class_constant                     go to state 126
    class_name_scalar                  go to state 127


State 1259

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1264


State 1260

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' . "for (T_FOR)" "tpl right delim (T_END_TPL)"

    "for (T_FOR)"  shift, and go to state 1265


State 1261

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' . "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)"

    "foreach (T_FOREACH)"  shift, and go to state 1266


State 1262

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  301 method_body: '{' inner_statement_list . '}'

    '}'  shift, and go to state 1267

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1263

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 . additional_catches

    "catch (T_CATCH)"  shift, and go to state 1268

    $default  reduce using rule 164 (additional_catches)

    additional_catches            go to state 1269
    non_empty_additional_catches  go to state 1270
    additional_catch              go to state 1271


State 1264

  159 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' foreach_variable foreach_optional_arg "in (T_IN)" expr ')' "tpl right delim (T_END_TPL)" $@44 tpl_block "tpl left delim (T_START_TPL)" $@45 tpl_loopelse '/' "for (T_FOR)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 159 (tpl_statement)


State 1265

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1272


State 1266

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" . "tpl right delim (T_END_TPL)"

    "tpl right delim (T_END_TPL)"  shift, and go to state 1273


State 1267

  301 method_body: '{' inner_statement_list '}' .

    $default  reduce using rule 301 (method_body)


State 1268

  169 additional_catch: "catch (T_CATCH)" . '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}'

    '('  shift, and go to state 1274


State 1269

  103 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches .

    $default  reduce using rule 103 (catch_statement)


State 1270

  163 additional_catches: non_empty_additional_catches .
  166 non_empty_additional_catches: non_empty_additional_catches . additional_catch

    "catch (T_CATCH)"  shift, and go to state 1268

    $default  reduce using rule 163 (additional_catches)

    additional_catch  go to state 1275


State 1271

  165 non_empty_additional_catches: additional_catch .

    $default  reduce using rule 165 (non_empty_additional_catches)


State 1272

  156 tpl_statement: "tpl left delim (T_START_TPL)" "for (T_FOR)" '(' for_expr ';' $@41 for_expr ';' $@42 for_expr ')' "tpl right delim (T_END_TPL)" $@43 tpl_block "tpl left delim (T_START_TPL)" '/' "for (T_FOR)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 156 (tpl_statement)


State 1273

  146 tpl_statement: "tpl left delim (T_START_TPL)" "foreach (T_FOREACH)" '(' expr "as (T_AS)" @34 foreach_variable foreach_optional_arg ')' "tpl right delim (T_END_TPL)" $@35 tpl_block "tpl left delim (T_START_TPL)" $@36 tpl_loopelse '/' "foreach (T_FOREACH)" "tpl right delim (T_END_TPL)" .

    $default  reduce using rule 146 (tpl_statement)


State 1274

  169 additional_catch: "catch (T_CATCH)" '(' . fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 129
    "namespace (T_NAMESPACE)"  shift, and go to state 666
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 667

    namespace_name              go to state 668
    fully_qualified_class_name  go to state 1276


State 1275

  166 non_empty_additional_catches: non_empty_additional_catches additional_catch .

    $default  reduce using rule 166 (non_empty_additional_catches)


State 1276

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name . @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}'

    $default  reduce using rule 167 (@48)

    @48  go to state 1277


State 1277

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 . "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  shift, and go to state 1278


State 1278

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" . ')' $@49 '{' inner_statement_list '}'

    ')'  shift, and go to state 1279


State 1279

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' . $@49 '{' inner_statement_list '}'

    $default  reduce using rule 168 ($@49)

    $@49  go to state 1280


State 1280

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 . '{' inner_statement_list '}'

    '{'  shift, and go to state 1281


State 1281

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' . inner_statement_list '}'

    $default  reduce using rule 43 (inner_statement_list)

    inner_statement_list  go to state 1282


State 1282

   42 inner_statement_list: inner_statement_list . $@4 inner_statement
  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list . '}'

    '}'  shift, and go to state 1283

    $default  reduce using rule 41 ($@4)

    $@4  go to state 457


State 1283

  169 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @48 "variable (T_VARIABLE)" ')' $@49 '{' inner_statement_list '}' .

    $default  reduce using rule 169 (additional_catch)
